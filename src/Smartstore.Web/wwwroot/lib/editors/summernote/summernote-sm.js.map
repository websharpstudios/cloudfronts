{"version":3,"file":"summernote-sm.js","sources":["../src/js/summernote-en-US.js","../src/js/core/env.js","../src/js/core/Type.js","../src/js/core/func.js","../src/js/core/lists.js","../src/js/core/Str.js","../src/js/core/Obj.js","../src/js/core/schema.js","../src/js/core/dom.js","../src/js/Context.js","../src/js/summernote.js","../src/js/icons.js","../src/js/core/Point.js","../src/js/core/range.js","../src/js/core/key.js","../src/js/core/async.js","../src/js/editing/History.js","../src/js/editing/Style.js","../src/js/editing/Bullet.js","../src/js/editing/Typing.js","../src/js/editing/Table.js","../src/js/editing/Bookmark.js","../src/js/editing/Selection.js","../src/js/util/HtmlSanitizer.js","../src/js/module/Editor.js","../src/js/module/Clipboard.js","../src/js/module/Dropzone.js","../src/js/module/Codeview.js","../src/js/module/Statusbar.js","../src/js/module/Fullscreen.js","../src/js/module/Handle.js","../src/js/module/AutoLink.js","../src/js/module/AutoSync.js","../src/js/module/AutoReplace.js","../src/js/module/Placeholder.js","../src/js/module/Buttons.js","../src/js/module/Toolbar.js","../src/js/module/LinkDialogEx.js","../src/js/module/LinkPopover.js","../src/js/module/ImageDialogEx.js","../src/js/module/ImagePopover.js","../src/js/module/TablePopover.js","../src/js/module/TableStyles.js","../src/js/module/VideoDialog.js","../src/js/module/HelpDialog.js","../src/js/core/Convert.js","../src/js/module/HintPopover.js","../src/js/module/CssClass.js","../src/js/settings.js","../src/js/renderer.js","../src/styles/sm/summernote-sm.js"],"sourcesContent":["import $ from 'jquery';\r\n\r\n$.summernote = $.summernote || {\r\n  lang: {},\r\n};\r\n\r\n$.extend(true, $.summernote.lang, {\r\n  'en-US': {\r\n    font: {\r\n      bold: 'Bold',\r\n      italic: 'Italic',\r\n      underline: 'Underline',\r\n      clear: 'Remove Font Style',\r\n      height: 'Line Height',\r\n      name: 'Font Family',\r\n      strikethrough: 'Strikethrough',\r\n      subscript: 'Subscript',\r\n      superscript: 'Superscript',\r\n      size: 'Font Size',\r\n      sizeunit: 'Font Size Unit',\r\n    },\r\n    image: {\r\n      image: 'Picture',\r\n      insert: 'Insert Image',\r\n      resizeFull: 'Resize full',\r\n      resizeHalf: 'Resize half',\r\n      resizeQuarter: 'Resize quarter',\r\n      resizeNone: 'Original size',\r\n      floatLeft: 'Float Left',\r\n      floatRight: 'Float Right',\r\n      floatNone: 'Remove float',\r\n      shapeRounded: 'Shape: Rounded',\r\n      shapeCircle: 'Shape: Circle',\r\n      shapeThumbnail: 'Shape: Thumbnail',\r\n      shapeNone: 'Shape: None',\r\n      dragImageHere: 'Drag image or text here',\r\n      dropImage: 'Drop image or Text',\r\n      selectFromFiles: 'Select from files',\r\n      maximumFileSize: 'Maximum file size',\r\n      maximumFileSizeError: 'Maximum file size exceeded.',\r\n      url: 'Image URL',\r\n      remove: 'Remove Image',\r\n      original: 'Original',\r\n    },\r\n    video: {\r\n      video: 'Video',\r\n      videoLink: 'Video Link',\r\n      insert: 'Insert Video',\r\n      url: 'Video URL',\r\n      providers: '(YouTube, Google Drive, Vimeo, Vine, Instagram, DailyMotion, Youku, Peertube)',\r\n    },\r\n    link: {\r\n      link: 'Link',\r\n      insert: 'Insert Link',\r\n      unlink: 'Unlink',\r\n      edit: 'Edit',\r\n      textToDisplay: 'Text to display',\r\n      url: 'To what URL should this link go?',\r\n      openInNewWindow: 'Open in new window',\r\n    },\r\n    table: {\r\n      table: 'Table',\r\n      addRowAbove: 'Add row above',\r\n      addRowBelow: 'Add row below',\r\n      addColLeft: 'Add column left',\r\n      addColRight: 'Add column right',\r\n      delRow: 'Delete row',\r\n      delCol: 'Delete column',\r\n      delTable: 'Delete table',\r\n    },\r\n    hr: {\r\n      insert: 'Insert Horizontal Rule',\r\n    },\r\n    style: {\r\n      style: 'Style',\r\n      p: 'Normal',\r\n      blockquote: 'Quote',\r\n      pre: 'Code',\r\n      h1: 'Header 1',\r\n      h2: 'Header 2',\r\n      h3: 'Header 3',\r\n      h4: 'Header 4',\r\n      h5: 'Header 5',\r\n      h6: 'Header 6',\r\n    },\r\n    lists: {\r\n      unordered: 'Unordered list',\r\n      ordered: 'Ordered list',\r\n    },\r\n    options: {\r\n      help: 'Help',\r\n      fullscreen: 'Full Screen',\r\n      codeview: 'Code View',\r\n    },\r\n    paragraph: {\r\n      paragraph: 'Paragraph',\r\n      outdent: 'Outdent',\r\n      indent: 'Indent',\r\n      left: 'Align left',\r\n      center: 'Align center',\r\n      right: 'Align right',\r\n      justify: 'Justify full',\r\n    },\r\n    color: {\r\n      recent: 'Recent Color',\r\n      more: 'More Color',\r\n      background: 'Background Color',\r\n      foreground: 'Text Color',\r\n      transparent: 'Transparent',\r\n      setTransparent: 'Set transparent',\r\n      reset: 'Reset',\r\n      resetToDefault: 'Reset to default',\r\n      cpSelect: 'Select',\r\n    },\r\n    shortcut: {\r\n      shortcuts: 'Keyboard shortcuts',\r\n      close: 'Close',\r\n      textFormatting: 'Text formatting',\r\n      action: 'Action',\r\n      paragraphFormatting: 'Paragraph formatting',\r\n      documentStyle: 'Document Style',\r\n      extraKeys: 'Extra keys',\r\n    },\r\n    help: {\r\n      'escape': 'Escape',\r\n      'insertParagraph': 'Insert Paragraph',\r\n      'undo': 'Undo the last command',\r\n      'redo': 'Redo the last command',\r\n      'tab': 'Tab',\r\n      'untab': 'Untab',\r\n      'bold': 'Set a bold style',\r\n      'italic': 'Set a italic style',\r\n      'underline': 'Set a underline style',\r\n      'strikethrough': 'Set a strikethrough style',\r\n      'removeFormat': 'Clean a style',\r\n      'justifyLeft': 'Set left align',\r\n      'justifyCenter': 'Set center align',\r\n      'justifyRight': 'Set right align',\r\n      'justifyFull': 'Set full align',\r\n      'insertUnorderedList': 'Toggle unordered list',\r\n      'insertOrderedList': 'Toggle ordered list',\r\n      'outdent': 'Outdent on current paragraph',\r\n      'indent': 'Indent on current paragraph',\r\n      'formatPara': 'Change current block\\'s format as a paragraph(P tag)',\r\n      'formatH1': 'Change current block\\'s format as H1',\r\n      'formatH2': 'Change current block\\'s format as H2',\r\n      'formatH3': 'Change current block\\'s format as H3',\r\n      'formatH4': 'Change current block\\'s format as H4',\r\n      'formatH5': 'Change current block\\'s format as H5',\r\n      'formatH6': 'Change current block\\'s format as H6',\r\n      'insertHorizontalRule': 'Insert horizontal rule',\r\n      'linkDialog.show': 'Show Link Dialog',\r\n    },\r\n    history: {\r\n      undo: 'Undo',\r\n      redo: 'Redo',\r\n    },\r\n    specialChar: {\r\n      specialChar: 'SPECIAL CHARACTERS',\r\n      select: 'Select special characters',\r\n    },\r\n    output: {\r\n      noSelection: 'No selection made!',\r\n    },\r\n  },\r\n});\r\n\r\n// Smartstore extras\r\n$.extend(true, $.summernote.lang, {\r\n  'en-US': {\r\n    common: {\r\n      ok: 'OK',\r\n      cancel: 'Cancel'\r\n    },\r\n    font: {\r\n      code: 'Code'\r\n    },\r\n    attrs: {\r\n      cssClass: 'CSS Class',\r\n      cssStyle: 'CSS Style',\r\n      rel: 'Rel',\r\n    },\r\n    link: {\r\n      browse: 'Browse'\r\n    },\r\n    image: {\r\n      imageProps: 'Image Attributes'\r\n    },\r\n    imageShapes: {\r\n      tooltip: 'Shape',\r\n      tooltipShapeOptions: ['Responsive', 'Border', 'Rounded', 'Circle', 'Thumbnail', 'Shadow (small)', 'Shadow (medium)', 'Shadow (large)']\r\n    },\r\n    tableStyles: {\r\n      tooltip: \"Table style\",\r\n      stylesExclusive: [\"Basic\", \"Bordered\"],\r\n      stylesInclusive: [\"Striped\", \"Condensed\", \"Hoverable\"]\r\n    }\r\n  }\r\n});\r\n","import $ from 'jquery';\r\n\r\n/**\r\n * returns whether font is installed or not.\r\n *\r\n * @param {String} fontName\r\n * @return {Boolean}\r\n */\r\nconst genericFontFamilies = ['sans-serif', 'serif', 'monospace', 'cursive', 'fantasy'];\r\n\r\nfunction validFontName(fontName) {\r\n  return ($.inArray(fontName.toLowerCase(), genericFontFamilies) === -1) ? `'${fontName}'` : fontName;\r\n}\r\n\r\nfunction createIsFontInstalledFunc() {\r\n  const testText = \"mw\";\r\n  const fontSize = \"20px\";\r\n  const canvasWidth = 40;\r\n  const canvasHeight = 20;\r\n\r\n  var canvas = document.createElement(\"canvas\");\r\n  var context = canvas.getContext(\"2d\", { willReadFrequently: true });\r\n  canvas.width = canvasWidth;\r\n  canvas.height = canvasHeight;\r\n  context.textAlign = \"center\";\r\n  context.fillStyle = \"black\";\r\n  context.textBaseline = \"middle\";\r\n\r\n  function getPxInfo(font, testFontName) {\r\n    context.clearRect(0, 0, canvasWidth, canvasHeight);\r\n    context.font = fontSize + ' ' + validFontName(font) + ', \"' + testFontName + '\"';\r\n    context.fillText(testText, canvasWidth / 2, canvasHeight / 2);\r\n    // Get pixel information\r\n    var pxInfo = context.getImageData(0, 0, canvasWidth, canvasHeight).data;\r\n    return pxInfo.join(\"\");\r\n  }\r\n\r\n  return (fontName) => {\r\n    const testFontName = fontName === 'Comic Sans MS' ? 'Courier New' : 'Comic Sans MS';\r\n    let testInfo = getPxInfo(testFontName, testFontName);\r\n    let fontInfo = getPxInfo(fontName, testFontName);\r\n    return testInfo !== fontInfo;\r\n  };\r\n}\r\n\r\nconst userAgent = navigator.userAgent;\r\nconst isMSIE = /MSIE|Trident/i.test(userAgent);\r\nlet browserVersion;\r\nif (isMSIE) {\r\n  let matches = /MSIE (\\d+[.]\\d+)/.exec(userAgent);\r\n  if (matches) {\r\n    browserVersion = parseFloat(matches[1]);\r\n  }\r\n  matches = /Trident\\/.*rv:([0-9]{1,}[.0-9]{0,})/.exec(userAgent);\r\n  if (matches) {\r\n    browserVersion = parseFloat(matches[1]);\r\n  }\r\n}\r\n\r\nconst isEdge = /Edge\\/\\d+/.test(userAgent);\r\n\r\nconst isSupportTouch =\r\n  (('ontouchstart' in window) ||\r\n   (navigator.MaxTouchPoints > 0) ||\r\n   (navigator.msMaxTouchPoints > 0));\r\n\r\n// [workaround] IE doesn't have input events for contentEditable\r\n// - see: https://goo.gl/4bfIvA\r\nconst inputEventName = (isMSIE) ? 'DOMCharacterDataModified DOMSubtreeModified DOMNodeInserted' : 'input';\r\n\r\n/**\r\n * @class core.env\r\n *\r\n * Object which check platform and agent\r\n *\r\n * @singleton\r\n * @alternateClassName env\r\n */\r\nexport default {\r\n  isMac: navigator.appVersion.indexOf('Mac') > -1,\r\n  isMSIE,\r\n  isEdge,\r\n  isFF: !isEdge && /firefox/i.test(userAgent),\r\n  isPhantom: /PhantomJS/i.test(userAgent),\r\n  isWebkit: !isEdge && /webkit/i.test(userAgent),\r\n  isChrome: !isEdge && /chrome/i.test(userAgent),\r\n  isSafari: !isEdge && /safari/i.test(userAgent) && (!/chrome/i.test(userAgent)),\r\n  browserVersion,\r\n  isSupportTouch,\r\n  isFontInstalled: createIsFontInstalledFunc(),\r\n  isW3CRangeSupport: !!document.createRange,\r\n  inputEventName,\r\n  genericFontFamilies,\r\n  validFontName,\r\n};\r\n","import _ from 'underscore';\r\nimport $ from 'jquery';\r\n\r\nconst isArguments = obj => _.isArguments(obj);\r\nconst isArray = obj => _.isArray(obj);\r\nconst isArrayBuffer = obj => _.isArrayBuffer(obj);\r\nconst isBoolean = obj => _.isBoolean(obj);\r\nconst isDataView = obj => _.isDataView(obj);\r\nconst isDate = obj => _.isDate(obj);\r\nconst isNode = obj => obj instanceof Node;\r\nconst isElement = obj => _.isElement(obj);\r\nconst isError = obj => _.isError(obj);\r\nconst isFunction = obj => _.isFunction(obj);\r\nconst isFinite = obj => _.isFinite(obj);\r\nconst isNaN = obj => _.isNaN(obj);\r\nconst isNull = obj => obj === null;\r\nconst isNullOrUndefined = obj => obj === undefined || obj === null;\r\nconst isAssigned = obj => obj != undefined && obj != null;\r\nconst isNumber = obj => _.isNumber(obj);\r\nconst isObject = obj => _.isObject(obj);\r\nconst isPlainObject = obj => $.isPlainObject(obj);\r\nconst isRegExp = obj => _.isRegExp(obj);\r\nconst isString = obj => _.isString(obj);\r\nconst isSymbol = obj => _.isSymbol(obj);\r\nconst isTypedArray = obj => _.isTypedArray(obj);\r\nconst isUndefined = obj => _.isUndefined(obj);\r\nconst isJquery = obj => obj instanceof $;\r\n\r\nexport default {\r\n  isArguments,\r\n  isArray,\r\n  isArrayBuffer,\r\n  isBoolean,\r\n  isDataView,\r\n  isDate,\r\n  isNode,\r\n  isElement,\r\n  isError,\r\n  isFunction,\r\n  isFinite,\r\n  isNaN,\r\n  isNull,\r\n  isNullOrUndefined,\r\n  isAssigned,\r\n  isNumber,\r\n  isObject,\r\n  isPlainObject,\r\n  isRegExp,\r\n  isString,\r\n  isSymbol,\r\n  isTypedArray,\r\n  isUndefined,\r\n  isJquery\r\n}","import _ from 'underscore';\r\n\r\n/**\r\n * @class core.func\r\n *\r\n * func utils (for high-order func's arg)\r\n *\r\n * @singleton\r\n * @alternateClassName func\r\n */\r\nconst eq = (itemA) => {\r\n  return function(itemB) {\r\n    return itemA === itemB;\r\n  };\r\n}\r\n\r\nconst eq2 = (itemA, itemB) =>\r\n  itemA === itemB;\r\n\r\nconst peq2 = (propName) => {\r\n  return function(itemA, itemB) {\r\n    return itemA[propName] === itemB[propName];\r\n  };\r\n}\r\n\r\nconst ok = () => true;\r\nconst fail = () => false;\r\nconst self = (a) => a;\r\n\r\nfunction not(f) {\r\n  return function() {\r\n    return !f.apply(f, arguments);\r\n  };\r\n}\r\n\r\nfunction and(...functions) {\r\n  const funcs = functions;\r\n  const len = funcs.length;\r\n  if (len === 0) return false;\r\n  return function(item) {\r\n    for (var i = 0; i < len; i++) {\r\n      if (funcs[i] && !funcs[i](item)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  };\r\n}\r\n\r\nfunction or(...functions) {\r\n  const funcs = functions;\r\n  const len = funcs.length;\r\n  if (len === 0) return false;\r\n  return function(item) {\r\n    for (var i = 0; i < len; i++) {\r\n      if (funcs[i] && funcs[i](item)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n}\r\n\r\nfunction invoke(obj, method) {\r\n  return function() {\r\n    return obj[method].apply(obj, arguments);\r\n  };\r\n}\r\n\r\nlet idCounter = 0;\r\n\r\n/**\r\n * reset globally-unique id\r\n *\r\n */\r\nfunction resetUniqueId() {\r\n  idCounter = 0;\r\n}\r\n\r\n/**\r\n * generate a globally-unique id\r\n *\r\n * @param {String} [prefix]\r\n */\r\nfunction uniqueId(prefix) {\r\n  const id = ++idCounter + '';\r\n  return prefix ? prefix + id : id;\r\n}\r\n\r\n/**\r\n * Creates and returns a new debounced version of the passed function which will postpone its execution until after wait milliseconds \r\n * have elapsed since the last time it was invoked. Useful for implementing behavior that should only happen after the \r\n * input has stopped arriving. For example: rendering a preview of a Markdown comment, \r\n * recalculating a layout after the window has stopped being resized, and so on.\r\n *\r\n * At the end of the wait interval, the function will be called with the arguments that were passed most recently to the debounced function.\r\n *\r\n * Pass true for the immediate argument to cause debounce to trigger the function on the \r\n * leading instead of the trailing edge of the wait interval. \r\n * Useful in circumstances like preventing accidental double-clicks on a \"submit\" button from firing a second time.\r\n * @param {Function} func\r\n * @param {Number} wait\r\n * @param {Boolean} immediate\r\n * @return {Function}\r\n */\r\nconst debounce = (func, wait, immediate) =>\r\n  _.debounce(func, wait, immediate);\r\n\r\nconst delay = (func, wait, args) =>\r\n  _.delay(func, wait, args);\r\n\r\nconst defer = (func, args) =>\r\n  _.defer(func, args);\r\n\r\n/**\r\n * Creates and returns a new, throttled version of the passed function, that, when invoked repeatedly, \r\n * will only actually call the original function at most once per every wait milliseconds.\r\n * \r\n * By default, throttle will execute the function as soon as you call it for the first time, and, \r\n * if you call it again any number of times during the wait period, as soon as that period is over. \r\n * If you'd like to disable the leading-edge call, pass {leading: false}, and if you'd like to disable the execution on the trailing-edge, pass\r\n * {trailing: false}\r\n * @param {Function} func\r\n * @param {Number} wait\r\n * @param {Object|null} options\r\n * @return {Function}\r\n */\r\nconst throttle = (func, wait, options) =>\r\n  _.throttle(func, wait, options);\r\n\r\nfunction clamp(value, min, max) {\r\n  return Math.min(Math.max(value, min), max);\r\n}\r\n\r\nfunction constant(val) {\r\n  return () => val;\r\n}\r\n\r\nexport default {\r\n  eq,\r\n  eq2,\r\n  peq2,\r\n  ok,\r\n  fail,\r\n  self,\r\n  not,\r\n  and,\r\n  or,\r\n  invoke,\r\n  resetUniqueId,\r\n  uniqueId,\r\n  debounce,\r\n  delay,\r\n  defer,\r\n  throttle,\r\n  clamp,\r\n  constant,\r\n};\r\n","import _ from 'underscore';\r\nimport Type from './Type';\r\nimport func from './func';\r\n\r\nconst isArrayLike = (o) => o.length !== undefined;\r\n\r\n/**\r\n * Returns the first item of an array.\r\n */\r\nconst head = (array) => _.first(array);\r\n\r\n/**\r\n * Returns the last item of an array.\r\n */\r\nconst last = (array) => _.last(array);\r\n\r\n/**\r\n * Returns everything but the last entry of the array.\r\n */\r\nconst initial = (array) => _.initial(array);\r\n\r\n/**\r\n * Returns the rest of the items in an array (starting at index 1).\r\n *\r\n * @param {Array} array\r\n */\r\nconst tail = (array) => _.rest(array);\r\n\r\nconst exists = (list, pred, scope) =>\r\n  _.findIndex(list, pred, scope) > -1;\r\n\r\n/**\r\n * Returns the first index where the predicate truth test passes.\r\n */\r\nconst findIndex = (list, pred, scope) =>\r\n  _.findIndex(list, pred, scope);\r\n\r\n/**\r\n * Looks through each value in the list, returning the first one that passes a truth test (predicate), \r\n * or undefined if no value passes the test. The function returns as soon as it finds an acceptable element, \r\n * and doesn't traverse the entire list. predicate is transformed through iteratee to facilitate shorthand syntaxes.\r\n */\r\nconst find = (list, pred, scope) =>\r\n  _.find(list, pred, scope);\r\n\r\n/**\r\n * Returns true if ALL of the values in the array pass the predicate truth test.\r\n */\r\nconst all = (list, pred, scope) =>\r\n  _.every(list, pred, scope);\r\n\r\n/**\r\n * Returns true if ANY of the values in the list pass the predicate truth test.\r\n */\r\nconst any = (list, pred, scope) =>\r\n  _.some(list, pred, scope);\r\n\r\n/**\r\n * Returns true if the value is present in the list.\r\n */\r\nconst contains = (list, item) => {\r\n  if (list?.contains) {\r\n    // Some list types like `DOMTokenList` don't implement `.indexOf`, but `.contains`\r\n    return list.contains(item);\r\n  }\r\n\r\n  return _.contains(list, item);\r\n}\r\n\r\n/**\r\n * Calculated sum in a list.\r\n *\r\n * @param {Array} array - array\r\n * @param {Function} fn - iterator\r\n */\r\nconst sum = (list, fn, scope) => {\r\n  fn = fn || func.self;\r\n  return _.reduce(list, function(memo, v) {\r\n    return memo + fn(v);\r\n  }, 0, scope);\r\n}\r\n\r\n/**\r\n * Creates a new, shallow-copied Array instance from an iterable or array-like object.\r\n */\r\nconst from = (list, mapper, scope) => {\r\n  if (_.isFunction(Array.from)) {\r\n    return !mapper ? Array.from(list) : Array.from(list, mapper, scope);\r\n  } else {\r\n    return !mapper ? _.toArray(list) : _.map(list, mapper, scope);\r\n  }\r\n}\r\n\r\n/**\r\n * Returns true if list or string has no elements.\r\n */\r\nconst isEmpty = (list) =>\r\n  _.isEmpty(list);\r\n\r\n/**\r\n * Cluster elements by selector function.\r\n *\r\n * @param {Array|Object} list - Array or collection\r\n * @param {Function|String} selector - selector function or property name for cluster rule\r\n * @param {Array[]}\r\n */\r\nconst clusterBy = (list, selector) => {\r\n  if (!list.length) { return []; }\r\n  const tl = tail(list);\r\n  const fn = Type.isFunction(selector) ? selector : func.peq2(selector);\r\n  return tl.reduce(function(memo, v) {\r\n    const lastItem = last(memo);\r\n    if (fn(last(lastItem), v)) {\r\n      lastItem[lastItem.length] = v;\r\n    } else {\r\n      memo[memo.length] = [v];\r\n    }\r\n    return memo;\r\n  }, [[head(list)]]); \r\n}\r\n\r\n/**\r\n * Groups elements by selector function.\r\n *\r\n * @param {Array|Object} list - Array or collection\r\n * @param {Function|String} selector - selector function or property name for cluster rule\r\n * @param {Array[]}\r\n */\r\nconst groupBy = (list, selector, scope) =>\r\n  _.groupBy(list, selector, scope);\r\n\r\n\r\n/**\r\n * Returns a copy of the array with all falsy  values removed\r\n */\r\nconst compact = (list) =>\r\n  _.compact(list);\r\n\r\n/**\r\n * Produces a duplicate-free version of a list.\r\n * If you know in advance that the array is sorted, passing true for isSorted will run a much faster algorithm.\r\n *\r\n * @param {Array|Object} list\r\n */\r\nconst unique = (list, isSorted, scope) =>\r\n  _.uniq(list, isSorted, null, scope);\r\n\r\n/**\r\n * Returns next item.\r\n * @param {Array} array\r\n */\r\nconst next = (array, item) => {\r\n  if (array?.length && item) {\r\n    const idx = array.indexOf(item);\r\n    return idx === -1 || idx === array.length - 1 ? null : array[idx + 1];\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n/**\r\n * Returns prev item.\r\n * @param {Array} array\r\n */\r\nconst prev = (array, item) => {\r\n  if (array?.length && item) {\r\n    const idx = array.indexOf(item);\r\n    return idx <= 0 ? null : array[idx - 1];\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n  /**\r\n   * Iterates over a list of elements, yielding each in turn to an iteratee function. \r\n   * The iteratee is bound to the context object (scope), if one is passed. \r\n   * Each invocation of iteratee is called with three arguments: (element, index, list). \r\n   * If list is an object, iteratee's arguments will be (value, key, list). Returns the list for chaining.\r\n   *\r\n   * @method each\r\n   * @param {Array|Object} list Array or collection to iterate over.\r\n   * @param {Function} callback Callback function to execute for each item.\r\n   * @param {Object} scope Optional scope to execute the callback in.\r\n   */\r\nconst each = (list, callback, scope = null) =>\r\n  _.each(list, callback, scope);\r\n\r\n  /**\r\n   * Boils down a list of values into a single value.\r\n   * Memo is the initial state of the reduction, and each successive step of it should be returned by iteratee. \r\n   * The iteratee is passed four arguments: the memo, then the value and index (or key) of the iteration, \r\n   * and finally a reference to the entire list.\r\n   * \r\n   * If no memo is passed to the initial invocation of reduce, the iteratee is not invoked \r\n   * on the first element of the list. The first element is instead passed as the memo \r\n   * in the invocation of the iteratee on the next element in the list.\r\n   * @method foldl\r\n   * @param {Array|Object} list Array or collection to iterate over.\r\n   * @param {Function} callback Callback function to execute for each item.\r\n   * @param {any} [memo] - Optional memo.\r\n   * @param {Object} [scope] - Optional scope to execute the callback in.\r\n   */\r\n  const foldl = (list, callback, memo, scope) =>\r\n  _.foldl(list, callback, memo, scope);\r\n\r\n  /**\r\n   * The right-associative version of reduce/foldl.\r\n   *\r\n   * @param {Array|Object} list Array or collection to iterate over.\r\n   * @param {Function} callback Callback function to execute for each item.\r\n   * @param {any} [memo] - Optional memo.\r\n   * @param {Object} [scope] - Optional scope to execute the callback in.\r\n   */\r\n  const foldr = (list, callback, memo, scope) =>\r\n  _.foldr(list, callback, memo, scope);\r\n\r\n  /**\r\n   * Looks through each value in `list`, returning an array of\r\n   * all the values that pass a truth test (`predicate`).\r\n   * @param list The collection or array to filter.\r\n   * @param predicate The truth test to apply.\r\n   * @param scope `this` object in `predicate`, optional.\r\n   * @returns The set of values that pass the truth test.\r\n   */\r\n    const filter = (list, predicate, scope) =>\r\n      _.filter(list, predicate, scope);\r\n\r\n  /**\r\n   * Returns the values in `list` without the elements that pass a\r\n   * truth test (`predicate`).\r\n   * The opposite of filter.\r\n   * @param list The collection or array to filter.\r\n   * @param predicate The truth test to apply.\r\n   * @param scope `this` object in `predicate`, optional.\r\n   * @returns The set of values that fail the truth test.\r\n   */\r\n  const reject = (list, predicate, scope) =>\r\n    _.reject(list, predicate, scope);\r\n\r\n  /**\r\n   * Produces a new array of values by mapping each value in list through a transformation function (mapper). \r\n   * The iteratee is passed three arguments: the value, then the index (or key) of the iteration, and finally a reference to the entire list.\r\n   *\r\n   * @method map\r\n   * @param {Array|Object} list List of items to iterate.\r\n   * @param {Function} mapper Function to call for each item. It's return value will be the new value.\r\n   * @return {Array} Array with new values based on function return values.\r\n   */\r\nconst map = (list, mapper, scope = null) =>\r\n  _.map(list, mapper, scope);\r\n\r\n/**\r\n * Makes a name/object map out of an array with names.\r\n *\r\n * @method makeMap\r\n * @param {Array|String} array Items to make map out of.\r\n * @param {String} delim Optional delimiter to split string by.\r\n * @param {Object} map Optional map to add items to.\r\n * @return {Object} Name/value map of items.\r\n */\r\nfunction makeMap(array, delim = null, map = null) {\r\n  const resolvedItems = Type.isString(array) ? array.split(delim || ',') : (array || []);\r\n  map = map || {};\r\n  let i = resolvedItems.length;\r\n  while (i--) {\r\n    map[resolvedItems[i]] = {};\r\n  }\r\n\r\n  return map;\r\n}\r\n\r\n/**\r\n * Executes the specified function for each item in an object tree.\r\n *\r\n * @method walk\r\n * @param {Object} node Tree item to traverse.\r\n * @param {Function} callback Function to call for each item.\r\n * @param {String} [propName] Optional name of collection inside the item to walk, for example `childNodes`.\r\n * @param {Object} [scope] - Optional scope to execute the function in.\r\n */\r\nconst walk = (node, callback, propName, scope) => {\r\n  scope = scope || node;\r\n\r\n  if (node) {\r\n    if (propName) {\r\n      node = o[propName];\r\n    }\r\n\r\n    _.each(node, (o, i) => {\r\n      if (callback.call(scope, o, i, propName) === false) {\r\n        return false;\r\n      } else {\r\n        walk(o, callback, propName, scope);\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * @class core.list\r\n *\r\n * list utils\r\n *\r\n * @singleton\r\n * @alternateClassName list\r\n */\r\nexport default {\r\n  head,\r\n  last,\r\n  initial,\r\n  tail,\r\n  prev,\r\n  next,\r\n  exists,\r\n  find,\r\n  findIndex,\r\n  contains,\r\n  all,\r\n  any,\r\n  sum,\r\n  from,\r\n  isEmpty,\r\n  clusterBy,\r\n  groupBy,\r\n  compact,\r\n  unique,\r\n  each,\r\n  foldl,\r\n  foldr,\r\n  filter,\r\n  reject,\r\n  map,\r\n  makeMap,\r\n  isArrayLike,\r\n  walk\r\n};\r\n","import _ from 'underscore';\r\nimport Type from './Type';\r\n\r\nconst WHITESPACE_ALL_PATTERN = /^[ \\t\\r\\n]*$/;\r\nconst WHITESPACE_PATTERN = /\\s/;\r\n\r\nconst HOST_PATTERN = /^(?!-)([a-zA-Z0-9-]{1,63}\\.)+[a-zA-Z]{2,6}$/;\r\nconst IP_PATTERN = /^(([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){3}([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))$/;\r\nconst PROTOCOL_PATTERN = /^[A-Za-z][A-Za-z0-9+-.]*\\:[\\/\\/]?/;\r\nconst MAIL_PATTERN = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\nconst TEL_PATTERN = /^(\\+?\\d{1,3}[\\s-]?)?(\\d{1,4})[\\s-]?(\\d{1,4})[\\s-]?(\\d{1,4})$/;\r\n\r\nconst checkRange = (str, substr, start) =>\r\n  substr === '' || str.length >= substr.length && str.substr(start, start + substr.length) === substr;\r\n\r\nconst startsWith = (str, prefix) => checkRange(str, prefix, 0);\r\nconst endsWith = (str, suffix) => checkRange(str, suffix, str.length - suffix.length);\r\nconst escape = (str) => _.escape(str);\r\nconst unescape = (str) => _.unescape(str);\r\nconst hasWhiteSpace = (str) => WHITESPACE_PATTERN.test(str);\r\nconst isAllWhitespace = (str) => WHITESPACE_ALL_PATTERN.test(str);\r\n\r\nconst contains = (str, substr, start = 0, end) => {\r\n  const idx = str.indexOf(substr, start);\r\n  if (idx !== -1) {\r\n    return Type.isUndefined(end) ? true : idx + substr.length <= end;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Check if test matches strOrPattern  \r\n * @param {String|RegExp} strOrPattern\r\n * @param {String} test\r\n * @return {boolean}\r\n */\r\nconst matches = (strOrPattern, test) => \r\n  Type.isRegExp(strOrPattern) ? strOrPattern.test(test) : strOrPattern == test;\r\n\r\nconst namespaceToCamel = (namespace, prefix) => {\r\n  prefix = prefix || '';\r\n  return prefix + namespace.split('.').map((name) => {\r\n    return name.substring(0, 1).toUpperCase() + name.substring(1);\r\n  }).join('');\r\n}\r\n\r\nconst camelCaseToHyphens = (str) =>\r\n  str.replace(/[A-Z]/g, (v) => '-' + v.toLowerCase());\r\n\r\nconst isValidHost = (host) => \r\n  host && (HOST_PATTERN.test(host) || IP_PATTERN.test(host));\r\n\r\nconst isValidEmail = (email) => \r\n  email && MAIL_PATTERN.test(email);\r\n\r\nconst isValidTel = (tel) => \r\n  tel && TEL_PATTERN.test(tel);\r\n\r\nconst startsWithUrlScheme = (url) => \r\n  url && PROTOCOL_PATTERN.test(url);\r\n\r\nconst isValidUrl = (url) => \r\n  url && (PROTOCOL_PATTERN.test(url) || isValidHost(url));\r\n\r\n/**\r\n * Splits a string but removes the whitespace before and after each value.\r\n *\r\n * @method explode\r\n * @param {String|Array} str String or array to split.\r\n * @param {String|RegExp} delim Delimiter to split by.\r\n * @example\r\n * // Split a string into an array with [a,b,c]\r\n * const arr = Str.explode('a, b,   c');\r\n */\r\nconst explode = (str, delim = null) => {\r\n  if (Array.isArray(str)) {\r\n    return str;\r\n  } else if (str === '') {\r\n    return [];\r\n  } else {\r\n    return str.split(delim || ',').map(x => x.trim());;\r\n  }\r\n}\r\n\r\nconst safeLastIndexOf = (str, term, index) =>\r\n  index < 0 ? -1 : str.lastIndexOf(term, index);\r\n\r\n/**\r\n * Finds the line and column position of `term` in `string`\r\n *\r\n * @method findPosition\r\n * @param {String} str\r\n * @param {String} term Search term\r\n * @return {Object|null} `null` if search term was not found or zero-based { line: #line, column: #col }.\r\n */\r\nconst findPosition = (str, term) => {\r\n  const textIndex = str.indexOf(term);\r\n  if (textIndex > 0) {\r\n    const lineBreakBefore = safeLastIndexOf(str, '\\n', textIndex - 1);\r\n    const column = textIndex - lineBreakBefore - 1;\r\n  \r\n    let line = 0;\r\n    for (\r\n      let index = lineBreakBefore;\r\n      index >= 0;\r\n      index = safeLastIndexOf(str, '\\n', index - 1)\r\n    ) {\r\n      line++;\r\n    }\r\n  \r\n    return {line, column};\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport default {\r\n  startsWith,\r\n  endsWith,\r\n  contains,\r\n  hasWhiteSpace,\r\n  isAllWhitespace,\r\n  escape,\r\n  unescape,\r\n  matches,\r\n  namespaceToCamel,\r\n  camelCaseToHyphens,\r\n  isValidHost,\r\n  isValidEmail,\r\n  isValidTel,\r\n  startsWithUrlScheme,\r\n  isValidUrl,\r\n  explode,\r\n  findPosition\r\n}","import _ from 'underscore';\r\nimport Type from './Type';\r\n\r\n/**\r\n * Checks whether given object has a particular property.\r\n * @param {Object} obj - Object to check\r\n * @param {String} propName - Property name to check.\r\n */\r\nconst has = (obj, propName) =>\r\n  obj && obj.hasOwnProperty(propName);\r\n\r\n/**\r\n * Returns the specified property of object. path may be specified as a simple key, \r\n * or as an array of object keys or array indexes, for deep property fetching. \r\n * If the property does not exist or is undefined, the optional default is returned.\r\n */  \r\nconst get = (obj, path, def) =>\r\n  _.get(obj, path, def);\r\n\r\nconst valueOrDefault = (value, def) => \r\n  Type.isNullOrUndefined(value) ? def : value;\r\n\r\n/**\r\n * Performs an optimized deep comparison between the two objects, \r\n * to determine if they should be considered equal.\r\n */  \r\nconst isEqual = (obj, other) => \r\n  _.isEqual(obj, other);\r\n\r\n/**\r\n * Tells you if the keys and values in properties are contained in object.\r\n */  \r\nconst isMatch = (obj, props) => \r\n  _.isMatch(obj, props);\r\n\r\n/**\r\n * Shallowly copy all of the properties in the source objects over to the destination object, \r\n * and return the destination object. Any nested objects or arrays will be copied by reference, not duplicated. \r\n * It's in-order, so the last source will override properties of the same name in previous arguments.\r\n */  \r\nconst extend = (obj, sources) => \r\n  _.extendOwn(obj, sources);\r\n\r\n/**\r\n * Returns a copy of the object where the keys have become the values and the values the keys. \r\n * For this to work, all of your object's values should be unique and string serializable.\r\n */  \r\nconst invert = (obj) => \r\n  _.invert(obj);\r\n\r\nexport default {\r\n  has,\r\n  get,\r\n  valueOrDefault,\r\n  isEqual,\r\n  isMatch,\r\n  extend,\r\n  invert\r\n}","import $ from 'jquery';\r\nimport Str from './Str';\r\nimport Obj from './Obj';\r\nimport func from './func';\r\nimport lists from './lists';\r\n\r\nconst mapCache = {};\r\nconst makeMap = lists.makeMap, each = lists.each, explode = Str.explode;\r\n\r\nconst specialElements = {};\r\n\r\nconst makeSchema = () => {\r\n  const transparentContent = \r\n    'a ins del canvas map';\r\n  const blockContent = \r\n    'address blockquote div dl fieldset form h1 h2 h3 h4 h5 h6 hr menu ol p pre table ul ' +\r\n    'center dir isindex noframes ' + \r\n    'article aside details dialog figure main header footer hgroup section nav ' + transparentContent;\r\n  const phrasingContent = \r\n    'a abbr b bdo br button cite code del dfn em embed i iframe img input ins kbd ' +\r\n    'label map noscript object q s samp script select small span strong sub sup ' +\r\n    'audio canvas command datalist mark meter output picture progress time wbr video ruby bdi keygen svg ' +\r\n    'acronym applet basefont big font strike tt textarea u var #text #comment';\r\n  const flowContent = \r\n    [ blockContent, phrasingContent ].join(' ');\r\n\r\n  const schema = {};\r\n  \r\n  const addElement = (name, children) => {\r\n    schema[name] = {\r\n      children: lists.makeMap(children)\r\n    };\r\n  };\r\n\r\n  const add = (name, children = '') => {\r\n    children = children?.trim();\r\n    const childNames = children ? children.trim().split(' ') : [];\r\n    const names = name.trim().split(' ');\r\n    let ni = names.length;\r\n    while (ni--) {\r\n      addElement(names[ni], childNames);\r\n    }\r\n  };\r\n\r\n  add('html', 'head body');\r\n  add('head', 'base command link meta noscript script style title');\r\n  add('body', flowContent);\r\n  add('dd div address dt caption', flowContent);\r\n  add('h1 h2 h3 h4 h5 h6 pre p abbr code var samp kbd sub sup i b u bdo span legend em strong small s cite dfn', phrasingContent);\r\n  add('ol li', 'li');\r\n  add('li blockquote', flowContent);\r\n  add('dl', 'dt dd');\r\n  add('a ins del iframe', flowContent);\r\n  add('object', [ flowContent, 'param' ].join(' '));\r\n  add('map', [ flowContent, 'area' ].join(' '));\r\n  add('table', 'caption colgroup thead tfoot tbody tr');\r\n  add('colgroup', 'col');\r\n  add('tbody thead tfoot', 'tr');\r\n  add('tr', 'td th');\r\n  add('td th', flowContent);\r\n  add('form', flowContent);\r\n  add('fieldset', [ flowContent, 'legend' ].join(' '));\r\n  add('label button q', phrasingContent);\r\n  add('select', 'option optgroup');\r\n  add('optgroup', 'option');\r\n  add('menu', [ flowContent, 'li' ].join(' '));\r\n  add('noscript', flowContent);\r\n  add('wbr');\r\n  add('ruby', [ phrasingContent, 'rt rp' ].join(' '));\r\n  add('figcaption', flowContent);\r\n  add('mark rt rp bdi', phrasingContent);\r\n  add('summary', [ phrasingContent, 'h1 h2 h3 h4 h5 h6' ].join(' '));\r\n  add('canvas', flowContent);\r\n  add('video', [ flowContent, 'track source' ].join(' '));\r\n  add('audio', [ flowContent, 'track source' ].join(' '));\r\n  add('picture', 'img source');\r\n  add('datalist', [ phrasingContent, 'option' ].join(' '));\r\n  add('article section nav aside main header footer', flowContent);\r\n  add('hgroup', 'h1 h2 h3 h4 h5 h6');\r\n  add('figure', [ flowContent, 'figcaption' ].join(' '));\r\n  add('time output progress meter', phrasingContent);\r\n  add('dialog', flowContent);\r\n  add('details', [ flowContent, 'summary' ].join(' '));\r\n\r\n  // Video/audio elements cannot have nested children\r\n  each([ schema.video, schema.audio ], (item) => {\r\n    delete item.children.audio;\r\n    delete item.children.video;\r\n  });\r\n\r\n  // Delete children of the same name from it's parent\r\n  // For example: form can't have a child of the name form\r\n  each('a form meter progress dfn'.split(' '), (name) => {\r\n    if (schema[name]) {\r\n      delete schema[name].children[name];\r\n    }\r\n  });\r\n\r\n  // Caption can't have tables\r\n  delete schema.caption.children.table;\r\n\r\n  // Delete scripts by default due to possible XSS\r\n  delete schema.script;\r\n\r\n  // TODO: LI:s can only have value if parent is OL\r\n\r\n  return schema;\r\n};\r\n\r\nconst createMap = (defaultValue, extendWith) => {\r\n  let value = makeMap(defaultValue, ' ', makeMap(defaultValue.toUpperCase(), ' '));\r\n  return $.extend(value, extendWith);\r\n};\r\n\r\n// Creates an lookup table map object for the specified option or the default value\r\nconst createLookupTable = (option, defaultValue, extendWith) => {\r\n  let newValue = mapCache[option];\r\n  if (!newValue) {\r\n    newValue = createMap(defaultValue, extendWith);\r\n    mapCache[option] = newValue;\r\n  }\r\n  return newValue;\r\n};\r\n\r\n// Setup document schema\r\nconst schemaItems = makeSchema();\r\nconst children = {}; // e.g. { div: { p:{}, h1:{} } }\r\neach(schemaItems, (element, name) => {\r\n  children[name] = element.children;\r\n});\r\n\r\n// Setup map objects\r\nconst whitespaceElementsMap = createLookupTable(\r\n  'whitespace_elements',\r\n  'pre script noscript style textarea video audio iframe object code'\r\n);\r\nconst selfClosingElementsMap = createLookupTable('self_closing_elements', 'colgroup dd dt li option p td tfoot th thead tr');\r\nconst voidElementsMap = createLookupTable('void_elements', 'area audio base basefont br col frame hr iframe img input isindex link meta param embed source video wbr track');\r\nconst boolAttrMap = createLookupTable('boolean_attributes', 'checked compact declare defer disabled ismap multiple nohref noresize ' +\r\n  'noshade nowrap readonly selected autoplay loop controls allowfullscreen');\r\n\r\nconst nonEmptyOrMoveCaretBeforeOnEnter = 'td th iframe video audio object script code';\r\nconst nonEmptyElementsMap = createLookupTable('non_empty_elements', nonEmptyOrMoveCaretBeforeOnEnter + ' pre svg', voidElementsMap);\r\nconst moveCaretBeforeOnEnterElementsMap = createLookupTable('move_caret_before_on_enter_elements', nonEmptyOrMoveCaretBeforeOnEnter + ' table', voidElementsMap);\r\n\r\nconst headings = 'h1 h2 h3 h4 h5 h6';\r\nconst headingElementsMap = createLookupTable('heading_elements', headings);\r\nconst textBlockElementsMap = createLookupTable('text_block_elements', headings + ' p div li address pre form ' +\r\n  'blockquote center dir fieldset header footer article section hgroup aside main nav figure');\r\n//const textBlockElementsMap = createLookupTable('text_block_elements', headings + ' p div li');\r\nconst blockElementsMap = createLookupTable('block_elements', 'hr table tbody thead tfoot ' +\r\n  'th tr td li ol ul caption dl dt dd noscript menu isindex option ' +\r\n  'datalist select optgroup figcaption details summary html body multicol listing', textBlockElementsMap);\r\nconst textInlineElementsMap = createLookupTable('text_inline_elements', 'span strong b em i font s strike u var cite ' +\r\n  'dfn code mark q sup sub samp');\r\nconst textRootBlockElementsMap = createLookupTable('text_root_block_elements', 'td th li dt dd figcaption caption details summary', textBlockElementsMap);\r\n\r\nconst transparentElementsMap = createLookupTable('transparent_elements', 'a ins del canvas map');\r\n\r\nconst wrapBlockElementsMap = createLookupTable('wrap_block_elements', 'pre ' + headings);\r\n\r\n// See https://html.spec.whatwg.org/multipage/parsing.html#parsing-html-fragments\r\neach(('script noscript iframe noframes noembed title style textarea xmp plaintext').split(' '), (name) => {\r\n  specialElements[name] = new RegExp('<\\/' + name + '[^>]*>', 'gi');\r\n});\r\n\r\n/**\r\n * Returns a map with heading elements.\r\n */\r\nconst getHeadingElements = func.constant(headingElementsMap);\r\n/**\r\n * Returns a map with block elements.\r\n */\r\nconst getBlockElements = func.constant(blockElementsMap);\r\n/**\r\n * Returns a map with boolean attributes.\r\n */\r\nconst getBoolAttrs = func.constant(boolAttrMap);\r\n/**\r\n * Returns a map with text block elements. For example: <code>&#60;p&#62;</code>, <code>&#60;h1&#62;</code> to <code>&#60;h6&#62;</code>, <code>&#60;div&#62;</code> or <code>&#60;address&#62;</code>.\r\n */\r\nconst getTextBlockElements = func.constant(textBlockElementsMap);\r\nconst getTextRootBlockElements = func.constant(textRootBlockElementsMap);\r\n\r\n/**\r\n * Returns a map of inline text format nodes. For example: <code>&#60;strong&#62;</code>, <code>&#60;span&#62;</code> or <code>&#60;ins&#62;</code>.\r\n */\r\nconst getTextInlineElements = func.constant(textInlineElementsMap);\r\n/**\r\n * Returns a map with void elements. For example: <code>&#60;br&#62;</code> or <code>&#60;img&#62;</code>.\r\n */\r\nconst getVoidElements = func.constant(Object.seal(voidElementsMap));\r\n/**\r\n * Returns a map with self closing tags. For example: <code>&#60;li&#62;</code>.\r\n */\r\nconst getSelfClosingElements = func.constant(selfClosingElementsMap);\r\n/**\r\n * Returns a map with elements that should be treated as contents regardless if it has text\r\n * content in them or not. For example: <code>&#60;td&#62;</code>, <code>&#60;video&#62;</code> or <code>&#60;img&#62;</code>.\r\n */\r\nconst getNonEmptyElements = func.constant(nonEmptyElementsMap);\r\n/**\r\n * Returns a map with elements that the caret should be moved in front of after enter is pressed.\r\n */\r\nconst getMoveCaretBeforeOnEnterElements = func.constant(moveCaretBeforeOnEnterElementsMap);\r\n/**\r\n * Returns a map with elements where white space is to be preserved. For example: <code>&#60;pre&#62;</code> or <code>&#60;script&#62;</code>.\r\n */\r\nconst getWhitespaceElements = func.constant(whitespaceElementsMap);\r\n/**\r\n * Returns a map with elements that should be treated as transparent.\r\n *\r\n * @method getTransparentElements\r\n * @return {Object} Name/value lookup map for special elements.\r\n */\r\nconst getTransparentElements = func.constant(transparentElementsMap);\r\nconst getWrapBlockElements = func.constant(wrapBlockElementsMap);\r\n/**\r\n * Returns a map with special elements. These are elements that needs to be parsed\r\n * in a special way such as script, style, textarea etc. The map object values\r\n * are regexps used to find the end of the element.\r\n */\r\nconst getSpecialElements = func.constant(Object.seal(specialElements));\r\n\r\n/**\r\n * Returns true/false if the specified element and it's child is valid or not\r\n * according to the schema.\r\n *\r\n * @method isValidChild\r\n * @param {String} name Element name to check for.\r\n * @param {String} child Element child to verify.\r\n * @return {Boolean} True/false if the element is a valid child of the specified parent.\r\n */\r\nconst isValidChild = (name, child) => {\r\n  const parent = children[name.toLowerCase()];\r\n  // Treat missing entries as valid.\r\n  return !!(!parent || parent[child.toLowerCase()]);\r\n}\r\n\r\nconst isBlock = (name) => Obj.has(blockElementsMap, name);\r\n\r\n// Check if name starts with # to detect non-element node names like #text and #comment\r\nconst isInline = (name) => !Str.startsWith(name, '#') && !Obj.has(blockElementsMap, name);\r\n\r\nconst isWrapper = (name) => Obj.has(wrapBlockElementsMap, name) || isInline(name);\r\nconst isVoid = (name) => Obj.has(voidElementsMap, name);\r\n\r\nconst isTransparentElementName = (name) => Obj.has(getTransparentElements(), name);\r\nconst isTransparentElement = (node) => dom.isElement(node) && isTransparentElementName(node.nodeName);\r\n\r\nexport default {\r\n  getHeadingElements,\r\n  getBlockElements,\r\n  getVoidElements,\r\n  getTextBlockElements,\r\n  getTextInlineElements,\r\n  getTextRootBlockElements,\r\n  getBoolAttrs,\r\n  getSelfClosingElements,\r\n  getNonEmptyElements,\r\n  getMoveCaretBeforeOnEnterElements,\r\n  getWhitespaceElements,\r\n  getTransparentElements,\r\n  getWrapBlockElements,\r\n  getSpecialElements,\r\n  isValidChild,\r\n  isBlock,\r\n  isInline,\r\n  isWrapper,\r\n  isVoid,\r\n  isTransparentElementName,\r\n  isTransparentElement\r\n};","import $ from 'jquery';\r\nimport Type from './Type';\r\nimport Obj from './Obj';\r\nimport Str from './Str';\r\nimport func from './func';\r\nimport lists from './lists';\r\nimport env from './env';\r\nimport schema from './schema';\r\n\r\n// const beautifyOpts = {\r\n//   indent_size: 2,\r\n//   indent_with_tabs: true,\r\n//   indent_char: \" \",\r\n//   max_preserve_newlines: \"2\",\r\n//   preserve_newlines: true,\r\n//   keep_array_indentation: false,\r\n//   break_chained_methods: false,\r\n//   indent_scripts: \"normal\",\r\n//   brace_style: \"collapse\",\r\n//   space_before_conditional: true,\r\n//   unescape_strings: false,\r\n//   jslint_happy: false,\r\n//   end_with_newline: false,\r\n//   wrap_line_length: \"140\",\r\n//   indent_inner_html: true,\r\n//   comma_first: false,\r\n//   e4x: false,\r\n//   indent_empty_lines: false\r\n// };\r\n\r\n// #region Private utils\r\n\r\n// Private\r\nconst getNode = (node) =>\r\n  Type.isJquery(node) ? node.get(0) : node;\r\n\r\n// Private\r\nconst isUpperNodeName = (str) => {\r\n  const code = str?.charCodeAt(0);\r\n  return code >= 65 && code <= 90;\r\n};\r\n\r\nconst getComputedStyle = (node, name) => {\r\n  if (isElement(node)) {\r\n    const win = node.ownerDocument.defaultView;\r\n    if (win) {\r\n      const computed = win.getComputedStyle(node, null);\r\n      return computed ? computed.getPropertyValue(name) : null;\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\n// Private\r\nconst matchNodeName = (name) => {\r\n  const upperCasedName = name.toUpperCase();\r\n\r\n  return (node) =>\r\n    Type.isAssigned(node) && (isUpperNodeName(node.nodeName) ? node.nodeName : node.nodeName.toUpperCase()) === upperCasedName;\r\n};\r\n\r\n// #endregion\r\n\r\n\r\n// #region Matchers\r\n\r\nconst matchNodeNames = (names) => {\r\n  if (Type.isString(names)) {\r\n    names = Str.explode(names, ' ');\r\n  }\r\n\r\n  if (names.length === 0 || names === '*') {\r\n    return func.ok;\r\n  } else if (names.length == 1) {\r\n    return matchNodeName(names[0]);\r\n  }\r\n\r\n  const upperCasedNames = names.map((s) => s.toUpperCase());\r\n\r\n  return (node) => {\r\n    if (node && node.nodeName) {\r\n      const nodeName = isUpperNodeName(node.nodeName) ? node.nodeName : node.nodeName.toUpperCase();\r\n      return lists.contains(upperCasedNames, nodeName);\r\n    }\r\n\r\n    return false;\r\n  };\r\n};\r\n\r\nconst matchSchemaMap = (map) => {\r\n  return (node) =>\r\n    node && Obj.has(map, node.nodeName)\r\n};\r\n\r\nconst matchStyleValues = (name, values) => {\r\n  const items = values.toLowerCase().split(' ');\r\n\r\n  return (node) => {\r\n    const styleValue = getComputedStyle(node, name);\r\n    return styleValue && lists.contains(items, styleValue);\r\n  };\r\n};\r\n\r\nconst matchClass = (className) => {\r\n  return (node) => {\r\n    return node && $(node).hasClass(className);\r\n  };\r\n};\r\n\r\nconst matchAttribute = (attrName) => {\r\n  return (node) => {\r\n    return isElement(node) && node.hasAttribute(attrName);\r\n  };\r\n};\r\n\r\nconst matchAttributeValue = (attrName, attrValue) => {\r\n  return (node) => {\r\n    return isElement(node) && node.getAttribute(attrName) === attrValue;\r\n  };\r\n};\r\n\r\nconst matchContentEditableState = (value) => {\r\n  return (node) => {\r\n    if (isHTMLElement(node)) {\r\n      if (node.contentEditable === value) {\r\n        return true;\r\n      }\r\n\r\n      if (node.getAttribute('data-note-contenteditable') === value) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n};\r\n\r\n/**\r\n * Creates a callback if given selector is string or just returns the selector function.\r\n * \r\n * @param {Function|string|Node} selector - The selector string, function or node to match. If string, `Node.matches()` will be called internally.\r\n * @param {Function} [defaultSelector] - The default function selector to use if `selector` is null or invalid.\r\n */\r\nconst matchSelector = (selector, defaultSelector) => {\r\n  if (Type.isFunction(selector)) {\r\n    return selector;\r\n  }\r\n  else if (isNode(selector)) {\r\n    return func.eq(selector);\r\n  }\r\n  else if (Type.isString(selector)) {\r\n    return selector.length ? (node) => node.matches && node.matches(selector) : defaultSelector;\r\n  } \r\n  else {\r\n    return defaultSelector;\r\n  }\r\n};\r\n\r\n// #endregion\r\n\r\n\r\n// #region Is*\r\n\r\n// Private\r\nconst isNodeType = (type) => {\r\n  return (node) => !!node && node.nodeType === type;\r\n};\r\n\r\nconst isNode = node => Type.isNumber(node?.nodeType);\r\nconst isElement = isNodeType(1);\r\nconst isText = isNodeType(3);\r\nconst isCData = isNodeType(4);\r\nconst isPi = isNodeType(7);\r\nconst isComment = isNodeType(8);\r\nconst isDocument = isNodeType(9);\r\nconst isDocumentFragment = isNodeType(11);\r\nconst isSVGElement = node => isElement(node) && node.namespaceURI === 'http://www.w3.org/2000/svg';\r\nconst isHTMLElement = func.and(isElement, func.not(isSVGElement));\r\n\r\n// Firefox can allow you to get a selection on a restricted node, such as file/number inputs. These nodes\r\n// won't implement the Object prototype, so Object.getPrototypeOf() will return null or something similar.\r\nconst isRestrictedNode = (node) => !!node && !Object.getPrototypeOf(node);\r\n\r\nconst isBody = matchNodeName('BODY');\r\nconst isPre = matchNodeName('PRE');\r\nconst isLi = matchNodeName('LI');\r\nconst isTable = matchNodeName('TABLE');\r\nconst isData = matchNodeName('DATA');\r\nconst isHr = matchNodeName('HR');\r\nconst isListItem = matchNodeName('LI');\r\nconst isDetails = matchNodeName('DETAILS');\r\nconst isSummary = matchNodeName('SUMMARY');\r\nconst isBlockquote = matchNodeName('BLOCKQUOTE');\r\nconst isAnchor = matchNodeName('A');\r\nconst isDiv = matchNodeName('DIV');\r\nconst isSpan = matchNodeName('SPAN');\r\nconst isB = matchNodeName('B');\r\nconst isU = matchNodeName('U');\r\nconst isBR = matchNodeName('BR');\r\nconst isImg = matchNodeName('IMG');\r\nconst isFigure = matchNodeName('FIGURE');\r\nconst isTextarea = matchNodeName('TEXTAREA');\r\n\r\nconst isTextareaOrInput = matchNodeNames(['TEXTAREA', 'INPUT', 'SELECT']);\r\nconst isList = matchNodeNames(['UL', 'OL']);\r\nconst isCell = matchNodeNames(['TD', 'TH']);\r\nconst isCellOrRow = matchNodeNames(['TR', 'TD', 'TH']);\r\nconst isCellOrCaption = matchNodeNames(['TD', 'TH', 'CAPTION']);\r\nconst isMedia = matchNodeNames(['VIDEO', 'AUDIO', 'OBJECT', 'EMBED']);\r\nconst isHeading = matchSchemaMap(schema.getHeadingElements());\r\nconst isPara = (node) => Obj.has(schema.getTextBlockElements(), node.nodeName) && !isEditableRoot(node);\r\nconst isParaNoBlockquote = (node) => isPara(node) && !isBlockquote(node);\r\nconst isPurePara = (node) => isParaNoBlockquote(node) && !isLi(node);\r\nconst isInline = (node) => schema.isInline(node.nodeName);\r\nconst isBlock = (node) => schema.isBlock(node.nodeName);\r\nconst isParaInline = (node) => (isText(node) || isInline(node)) && !!closest(node, isPara);\r\nconst isParaInlineNoBlockQuote = (node) => (isText(node) || isInline(node)) && !!closest(node, isParaNoBlockquote);\r\nconst isBodyInline = (node) => (isText(node) || isInline(node)) && !closest(node, isPara);\r\nconst isBodyInlineNoBlockQuote = (node) => (isText(node) || isInline(node)) && !closest(node, isParaNoBlockquote);\r\nconst isBodyContainer = (node) => isCell(node) || isBlockquote(node) || isEditableRoot(node);\r\n\r\nconst isBookmarkNode = func.and(matchNodeName('SPAN'), matchAttributeValue('data-note-type', 'bookmark'))\r\nconst isVoid = (node) => node && schema.isVoid(node.nodeName);\r\nconst isEmptyAnchor = (node) => isAnchor(node) && isEmpty(node);\r\n\r\nconst matches = (node, selector) => matchSelector(selector)(node);\r\n\r\n// Perf\r\nconst isControlSizing = (node) => node?.classList && node.nodeName === 'DIV' && node.classList.contains('note-control-sizing');\r\n\r\n/**\r\n * Checks whether node is given tag\r\n *\r\n * @param {Node} node\r\n * @param {String|Array} tagName - Either a single tag as string or an array of tag names to check\r\n */\r\nconst isTag = (node, tag) => matchNodeNames(tag)(node);\r\n\r\nconst isWhiteSpace = (node, allowSpaces = false) => {\r\n  if (isText(node)) {\r\n    // If spaces are allowed, treat them as a non-breaking space\r\n    const data = allowSpaces ? node.data.replace(/ /g, '\\u00a0') : node.data;\r\n    return Str.isAllWhitespace(data);\r\n  }\r\n  return false;\r\n};\r\n\r\n// #endregion\r\n\r\n\r\n// #region ContentEditable\r\n\r\n/**\r\n * Gets the root editable node.\r\n */\r\nconst getEditableRoot = (node) => $(node).closest('.note-editable')[0];\r\n\r\n// Perf\r\nconst isEditableRoot = (node) => node?.classList && node.nodeName === 'DIV' && node.classList.contains('note-editable');\r\n\r\nconst isContentEditable = (node) => {\r\n  if (node) {\r\n    const scope = isElement(node) ? node : node.parentElement;\r\n    return !!scope && scope.isContentEditable;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst getContentEditable = (node) => {\r\n  if (node && isHTMLElement(node)) {\r\n    // Check for fake content editable\r\n    const contentEditable = node.getAttribute('data-note-contenteditable');\r\n    if (contentEditable && contentEditable !== 'inherit') {\r\n      return contentEditable;\r\n    }\r\n\r\n    // Check for real content editable\r\n    return node.contentEditable !== 'inherit' ? node.contentEditable : null;\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst getContentEditableParent = (node) => {\r\n  const root = getEditableRoot(node);\r\n  let state = null;\r\n\r\n  for (let tempNode = node; tempNode && tempNode !== root; tempNode = tempNode.parentNode) {\r\n    state = getContentEditable(tempNode);\r\n\r\n    if (state !== null) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\n// #endregion\r\n\r\n\r\n// #region Utils\r\n\r\n/**\r\n * blank HTML for cursor position\r\n * - [workaround] old IE only works with &nbsp;\r\n * - [workaround] IE11 and other browser works with bogus br\r\n */\r\nconst blankHTML = env.isMSIE && env.browserVersion < 11 ? '&nbsp;' : '<br>';\r\n\r\nconst createText = (text) => document.createTextNode(text);\r\n\r\nconst create = (nodeName, attrs = null, html = null) => {\r\n  const node = document.createElement(nodeName);\r\n  \r\n  if (Type.isObject(attrs)) {\r\n    lists.each(attrs, (value, name) => {\r\n      setAttr(node, name, value);\r\n    });\r\n  }\r\n\r\n  if (html) {\r\n    if (!Type.isString(html) && html.nodeType) {\r\n      node.appendChild(html);\r\n    } \r\n    else if (Type.isString(html) && html.length) {\r\n      node.innerHTML = html;\r\n    }    \r\n  }\r\n\r\n  return node;\r\n};\r\n\r\nconst createFragment = (html = null) => {\r\n  const container = document.createElement('div');\r\n  const frag = document.createDocumentFragment();\r\n\r\n  // Append the container to the fragment so as to remove it from\r\n  // the current document context\r\n  frag.appendChild(container);\r\n\r\n  if (html) {\r\n    container.innerHTML = html;\r\n  }\r\n\r\n  let node;\r\n  while ((node = container.firstChild)) {\r\n    frag.appendChild(node);\r\n  }\r\n\r\n  // Remove the container now that all the children have been transferred\r\n  frag.removeChild(container);\r\n\r\n  return frag;\r\n};\r\n\r\n\r\n/**\r\n * Gets the value of an HTML attribute\r\n *\r\n * @param {any} node - an HTML DOM node or jQuery object\r\n * @param {String} name - the attribute name\r\n * @return {String|null}\r\n */\r\nconst getAttr = (node, name) => {\r\n  node = getNode(node);\r\n  if (node) {\r\n    return node.getAttribute(name);\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * Sets an HTML attribute\r\n *\r\n * @param {any} node - an HTML DOM node or jQuery object\r\n * @param {String} name - the attribute name\r\n * @param {String} value - the attribute value. If null or undefined, attribute will be removed.\r\n */\r\nconst setAttr = (node, name, value) => {\r\n  node = getNode(node);\r\n  if (node) {\r\n    if (!!value)\r\n      node.setAttribute(name, value)\r\n    else\r\n      node.removeAttribute(name);\r\n  }\r\n}\r\n\r\n/**\r\n * Apply all attributes to node\r\n *\r\n * @param {any} node - an HTML DOM node or jQuery object\r\n * @param {Object} attrs - All attributes\r\n */\r\nconst setAttrs = (node, attrs) => {\r\n  node = getNode(node);\r\n  if (node && attrs.hasOwnProperty()) {\r\n    Object.keys(attrs).forEach((key) => {\r\n      const value = attrs[key];\r\n      Type.isNullOrUndefined(value) ? node.removeAttribute(key) : node.setAttribute(key, value);\r\n    });\r\n  }\r\n}\r\n\r\nconst removeAllAttrs = (node) => {\r\n  const attrs = node.attributes;\r\n  for (let i = attrs.length - 1; i >= 0; i--) {\r\n    node.removeAttributeNode(attrs.item(i));\r\n  }\r\n}\r\n\r\n/**\r\n * Returns the current style or runtime/computed value of an element.\r\n *\r\n * @method getStyle\r\n * @param {JQuery/Element} node HTML element or jQuery object to get style from.\r\n * @param {String} name Style name to return.\r\n * @param {Boolean} computed Get computed style?.\r\n * @return {String} Current style or computed style value of an element.\r\n */\r\nconst getStyle = (node, name, computed = false) => {\r\n  if (computed) {\r\n    return getComputedStyle(getNode(node), Str.camelCaseToHyphens(name));\r\n  } else {\r\n    return $(node).css(name);\r\n  }\r\n};\r\n\r\n/**\r\n * Sets the CSS style value on a HTML element. The name can be a camelcase string or the CSS style name like background-color.\r\n */\r\nconst setStyle = (node, name, value) => {\r\n  $(node).css(name, value);\r\n};\r\n\r\n/**\r\n * Sets multiple styles on the specified element(s).\r\n */\r\nconst setStyles = (node, styleMap) => {\r\n  $(node).css(styleMap);\r\n};\r\n\r\nconst hasClass = (node, name) => {\r\n  return $(node).hasClass(name);\r\n};\r\n\r\nconst addClass = (node, name) => {\r\n  $(node).addClass(name);\r\n};\r\n\r\nconst removeClass = (node, name) => {\r\n  $(node).removeClass(name);\r\n  cleanClass(node);\r\n};\r\n\r\nconst toggleClass = (node, name, state) => {\r\n  $(node).toggleClass(name, state);\r\n  cleanClass(node);\r\n};\r\n\r\nconst cleanClass = (node) => {\r\n  if (node.classList && node.classList.length === 0) {\r\n    node.removeAttribute('class');\r\n  }\r\n};\r\n\r\nconst parseStyle = (node) => {\r\n  const result = {};\r\n  for (let i = 0, len = node?.style?.length; i < len; i++) {\r\n    const name = node.style[i];\r\n    result[name] = node.style.getPropertyValue(name);\r\n  }\r\n  return result;\r\n};\r\n\r\n/**\r\n * Gets #text's text size or element's childNodes size\r\n */\r\nconst nodeLength = (node) => {\r\n  if (isText(node)) {\r\n    return node.nodeValue.length;\r\n  } else if (node) {\r\n    return node.childNodes.length;\r\n  }\r\n  return 0;\r\n}\r\n\r\n/**\r\n * Checks whether node is empty or not.\r\n */\r\nconst isEmpty = (node) => {\r\n  // TODO: Implement Tiny's DOMUtils.isEmpty().\r\n  const len = nodeLength(node);\r\n\r\n  if (len === 0) {\r\n    return true;\r\n  } \r\n  else if (!isText(node) && len === 1 && node.innerHTML.trim() === blankHTML) {\r\n    // ex) <p><br></p>, <span><br></span>\r\n    return true;\r\n  }\r\n  else if (isText(node) && node.textContent.trim() === '') {\r\n    return true;\r\n  }\r\n  else if (lists.all(node.childNodes, isText) && node.innerHTML === '') {\r\n    // ex) <p></p>, <span></span>\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Checks whether deepest child node is empty or not.\r\n */\r\nconst deepestChildIsEmpty = (node) => {\r\n  do {\r\n    if (node.firstElementChild === null || node.firstElementChild.innerHTML === '') break;\r\n  } while ((node = node.firstElementChild));\r\n  return isEmpty(node);\r\n}\r\n\r\n/**\r\n * Check whether node2 is closest sibling of node1\r\n */\r\nconst isClosestSibling = (node1, node2) =>\r\n  node1.nextSibling === node2 || node1.previousSibling === node2;\r\n\r\n\r\nconst isChildOf = (node, parentSelector, deep, ignoreSelf) => {\r\n  const pred = matchSelector(parentSelector);\r\n\r\n  if (pred(node)) { // node === parent\r\n    return !ignoreSelf;\r\n  }\r\n  else if (deep) {\r\n    for (let n = node.parentNode; n; n = n.parentNode) {\r\n      if (pred(n)) return true;\r\n    }\r\n  }\r\n  else {\r\n    return pred(node.parentNode);\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\n/**\r\n * Checks whether node is left edge of parent or not.\r\n *\r\n * @param {Node} node\r\n * @param {Node} parent\r\n */\r\nconst isLeftEdgeOf = (node, parent) => {\r\n  while (node && node !== parent) {\r\n    if (position(node) !== 0) {\r\n      return false;\r\n    }\r\n    node = node.parentNode;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n/**\r\n * Checks whether node is right edge of parent or not.\r\n *\r\n * @param {Node} node\r\n * @param {Node} parent\r\n */\r\nconst isRightEdgeOf = (node, parent) => {\r\n  if (!parent) {\r\n    return false;\r\n  }\r\n  while (node && node !== parent) {\r\n    if (position(node) !== nodeLength(node.parentNode) - 1) {\r\n      return false;\r\n    }\r\n    node = node.parentNode;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n/**\r\n * Gets offset from parent.\r\n */\r\nconst position = (node, normalized) => {\r\n  let idx = 0;\r\n\r\n  if (node) {\r\n    for (let lastNodeType = node.nodeType, tempNode = node.previousSibling; tempNode; tempNode = tempNode.previousSibling) {\r\n      const nodeType = tempNode.nodeType;\r\n\r\n      // Normalize text nodes\r\n      if (normalized && isText(tempNode)) {\r\n        if (nodeType === lastNodeType || !tempNode.data.length) {\r\n          continue;\r\n        }\r\n      }\r\n      idx++;\r\n      lastNodeType = nodeType;\r\n    }\r\n  }\r\n\r\n  return idx;\r\n}\r\n\r\nconst hasChildren = (node) => {\r\n  return !!(node && node.childNodes && node.childNodes.length);\r\n}\r\n  \r\nconst getRangeNode = (container, offset) => {\r\n  if (isElement(container) && container.hasChildNodes()) {\r\n    const childNodes = container.childNodes;\r\n    const safeOffset = func.clamp(offset, 0, childNodes.length - 1);\r\n    return childNodes[safeOffset];\r\n  }\r\n  else {\r\n    return container;\r\n  }\r\n}\r\n\r\nconst skipEmptyTextNodes = (node, forwards) => {\r\n  const orig = node;\r\n  while (node && isText(node) && node.length === 0) {\r\n    node = forwards ? node.nextSibling : node.previousSibling;\r\n  }\r\n  return node || orig;  \r\n}\r\n\r\n/**\r\n * @param {jQuery|Node} $node\r\n * @param {Boolean} [stripLinebreaks] - default: false\r\n */\r\nconst value = (node, stripLinebreaks) => {\r\n  const val = isTextarea(getNode(node)) ? $(node).val() : $(node).html();\r\n  if (stripLinebreaks) {\r\n    return val.replace(/[\\n\\r]/g, '');\r\n  }\r\n  return val;\r\n}\r\n\r\nconst outerHtml = (node) => {\r\n  if (Type.isNode(node)) {\r\n    if (isElement(node)) {\r\n      return node.outerHTML;\r\n    } else {\r\n      const container = create('div');\r\n      append(container, node.cloneNode(true));\r\n      return container.innerHTML;\r\n    }\r\n  } else {\r\n    return '';\r\n  }\r\n}\r\n\r\nconst posFromPlaceholder = (placeholder) => {\r\n  const $placeholder = $(placeholder);\r\n  const pos = $placeholder.offset();\r\n  const height = $placeholder.outerHeight(true); // include margin\r\n\r\n  return {\r\n    left: pos.left,\r\n    top: pos.top + height,\r\n  };\r\n}\r\n\r\nconst attachEvents = ($node, events) => {\r\n  Object.keys(events).forEach(function(key) {\r\n    $node.on(key, events[key]);\r\n  });\r\n}\r\n\r\nconst detachEvents = ($node, events) => {\r\n  Object.keys(events).forEach(function(key) {\r\n    $node.off(key, events[key]);\r\n  });\r\n}\r\n\r\n/**\r\n * @method isCustomStyleTag\r\n * Assert if a node contains a \"note-styletag\" class,\r\n * which implies that's a custom-made style tag node\r\n *\r\n * @param {Node} an HTML DOM node\r\n */\r\nconst isCustomStyleTag = (node) => {\r\n  return node && !isText(node) && lists.contains(node.classList, 'note-styletag');\r\n}\r\n\r\n// #endregion\r\n\r\n\r\n// #region Traverse\r\n\r\nconst select = (node, selector) => {\r\n  const elm = getNode(node);\r\n  if (elm) {\r\n    return elm.querySelectorAll ? lists.from(elm.querySelectorAll(selector)) : [];\r\n  }\r\n  return [];\r\n};\r\n\r\n/**\r\n * Finds closest parent that matches the given selector.\r\n *\r\n * @param {Function|String} selector - Selector function, string or node.\r\n * @param {boolean} [includeSelf] - Whether to start bubbling with given `node`. Default is true.\r\n */\r\nconst closest = (node, selector, includeSelf = true) => {\r\n  node = getNode(includeSelf ? node : node.parentNode);\r\n  if (node) {\r\n    const pred = matchSelector(selector);\r\n    while (node) {\r\n      if (pred(node)) return node;\r\n      if (isEditableRoot(node)) break;\r\n      node = node.parentNode;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n/**\r\n * Finds closest parent that has only a single child and matches the given selector.\r\n *\r\n * @param {Function|String} selector - Selector function or string.\r\n */\r\nfunction closestSingleParent(node, selector) {\r\n  node = getNode(node)?.parentNode;\r\n  if (node) {\r\n    const pred = matchSelector(selector);\r\n    while (node) {\r\n      if (nodeLength(node) !== 1) break;\r\n      if (pred(node)) return node;\r\n      if (isEditableRoot(node)) break;\r\n\r\n      node = node.parentNode;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * Gets array of parent nodes until selector hit (including start and hit node).\r\n *\r\n * @param {Function|String} [selector] - Selector function or string.\r\n * @param {bool} [includeSelf] - Whether to start with `node`. Default is true.\r\n */\r\nconst parents = (node, selector, includeSelf = true) => {\r\n  const pred = matchSelector(selector, func.fail);\r\n  const parents = [];\r\n\r\n  closest(node, (el) => {\r\n    if (!isEditableRoot(el)) {\r\n      parents.push(el);\r\n    }\r\n\r\n    return pred(el);\r\n  }, includeSelf);\r\n\r\n  return parents;\r\n}\r\n\r\n/**\r\n * Gets array of parent nodes that match the given selector until \r\n * optional rootSelector hit (including start and excluding root).\r\n *\r\n * @param {Function|String} [optional] selector - Selector function or string.\r\n * @param {Function|String} [optional] rootSelector - Selector function or string for the farthest root.\r\n */\r\nconst parentsWhile = (node, selector = null, rootSelector = null) => {\r\n  const pred = matchSelector(selector, func.ok);\r\n  const rootPred = matchSelector(rootSelector, isEditableRoot);\r\n  const parents = [];\r\n  \r\n  closest(node, (el) => {\r\n    if (rootPred(el)) return false;\r\n    if (pred(el)) parents.push(el);\r\n    return true;\r\n  });\r\n\r\n  return parents;\r\n}\r\n\r\n/**\r\n * Finds farthest parent that matches the given selector.\r\n *\r\n * @param {Function|String} [optional] selector - Selector function or string.\r\n */\r\nconst farthestParent = (node, selector) => {\r\n  const pred = matchSelector(selector);\r\n  const nodes = parents(node);\r\n  return lists.last(nodes.filter(pred));\r\n}\r\n\r\n/**\r\n * Finds the common parent node for two nodes. \r\n * If both nodes are equal, this node is the common parent.\r\n */\r\nconst commonParent = (node1, node2) => {\r\n  if (Type.isNullOrUndefined(node1) || Type.isNullOrUndefined(node2)) {\r\n    return null;\r\n  }\r\n\r\n  node1 = getNode(node1);\r\n  node2 = getNode(node2);\r\n  if (Type.isNode(node1) && node1 === node2) {\r\n    return node1;\r\n  }\r\n\r\n  let ancestors = [], n;\r\n  for (n = node1; n; n = n.parentNode) {\r\n    ancestors.push(n);\r\n    if (isEditableRoot(n)) break;\r\n  }\r\n\r\n  for (n = node2; n; n = n.parentNode) {\r\n    if (ancestors.indexOf(n) > -1) return n;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n/**\r\n * Gets array with prev sibling, node and next sibling.\r\n *\r\n * @param {Node} node - the center node.\r\n * @param {Function|String} [optional] selector - Selector function or string for the siblings.\r\n * @return {Node[]} - an array that contains 1-3 node items.\r\n */\r\nconst withClosestSiblings = (node, selector) => {\r\n  const pred = matchSelector(selector, func.ok);\r\n  const siblings = [];\r\n\r\n  node = getNode(node);\r\n  if (node) {\r\n    if (node.previousSibling && pred(node.previousSibling)) {\r\n      siblings.push(node.previousSibling);\r\n    }\r\n    siblings.push(node);\r\n    if (node.nextSibling && pred(node.nextSibling)) {\r\n      siblings.push(node.nextSibling);\r\n    }\r\n  }\r\n  return siblings;\r\n}\r\n\r\n// Private\r\nconst siblings = (node, selector, next) => {\r\n  const pred = matchSelector(selector, func.fail);\r\n  const siblings = [];\r\n\r\n  node = getNode(node);\r\n  if (node) {\r\n    while (node) {\r\n      if (pred(node)) { break; }\r\n      siblings.push(node);\r\n      node = next ? node.nextSibling : node.previousSibling;\r\n    }\r\n  }\r\n  return siblings;\r\n}\r\n\r\n/**\r\n * Gets array of previous sibling nodes until selector hit (including start and hit node).\r\n *\r\n * @param {Function|String} [optional] selector - Selector function or string.\r\n */\r\nconst prevSiblings = (node, selector) => siblings(node, selector, false);\r\n\r\n/**\r\n * Gets array of next sibling nodes until selector hit (including start and hit node).\r\n *\r\n * @param {Function|String} [optional] selector - Selector function or string.\r\n */\r\nconst nextSiblings = (node, selector) => siblings(node, selector, true);\r\n\r\n/**\r\n * Gets array of child nodes that match the given (optional) selector.\r\n *\r\n * @param {Function|String} [optional] selector - Selector function or string.\r\n * @param {bool} deep - If `true`, traverses all sub-children also. Default: true.\r\n */\r\nconst children = (node, selector, deep = true) => {\r\n  const pred = matchSelector(selector, func.ok);\r\n  const nodes = [];\r\n\r\n  node = getNode(node);\r\n  if (node) {\r\n    (function walk(current, d) {\r\n      if (node !== current && pred(current)) {\r\n        nodes.push(current);\r\n      }\r\n      \r\n      if (d) {\r\n        for (let idx = 0, len = current.childNodes.length; idx < len; idx++) {\r\n          walk(current.childNodes[idx], d);\r\n        }\r\n      }\r\n    })(node, deep);\r\n  }\r\n\r\n  return nodes;\r\n}\r\n\r\n/*\r\n* Gets the next text node index or null if not found.\r\n*/\r\nconst getNextTextNode = (actual) => {\r\n  actual = getNode(actual);\r\n  if(!actual?.nextSibling) return undefined;\r\n  if(actual.parent !== actual.nextSibling.parent) return undefined;\r\n\r\n  if (isBookmarkNode(actual)) {\r\n    actual = actual.nextSibling;\r\n    if (!actual) return undefined;\r\n  }\r\n\r\n  return isText(actual.nextSibling) \r\n    ? actual.nextSibling \r\n    : getNextTextNode(actual.nextSibling);\r\n}\r\n\r\n/**\r\n * Get offset path (array of offset) from parent.\r\n *\r\n * @param {Node} parent - parent node\r\n * @param {Node} node\r\n */\r\nconst makeOffsetPath = (parent, node) => {\r\n  const nodes = parents(node, parent);\r\n  return nodes.map(position).reverse();\r\n}\r\n\r\n/**\r\n * Gets element from offset path (array of offset).\r\n *\r\n * @param {Node} parent - parent node\r\n * @param {array} offsets - offset path\r\n */\r\nfunction fromOffsetPath(parent, offsets) {\r\n  let current = parent;\r\n  for (let i = 0, len = offsets.length; i < len; i++) {\r\n    if (current.childNodes.length <= offsets[i]) {\r\n      current = current.childNodes[current.childNodes.length - 1];\r\n    } else {\r\n      current = current.childNodes[offsets[i]];\r\n    }\r\n  }\r\n  return current;\r\n}\r\n\r\nconst findPara = (node) => closest(node, isPara);\r\n\r\n// #endregion\r\n\r\n\r\n// #region Manipulation\r\n\r\n/**\r\n * Wrap node with new tag.\r\n *\r\n * @param {Node} node\r\n * @param {Node} tagName of wrapper\r\n * @return {Node} - wrapper\r\n */\r\nconst wrap = (node, wrapperName) => {\r\n  const parent = node.parentNode;\r\n  const wrapper = create(wrapperName);\r\n\r\n  parent.insertBefore(wrapper, node);\r\n  wrapper.appendChild(node);\r\n\r\n  return wrapper;\r\n}\r\n\r\n/**\r\n * Unwrap node.\r\n *\r\n * @param {Node} node\r\n * @return {NodeList} - The unwrapped child nodes.\r\n */\r\nconst unwrap = (node) => {\r\n  const parent = node.parentNode;\r\n  const children = parent.childNodes;\r\n  parent.replaceWith(...children);\r\n  return children.length == 1 ? children.item(0) : node;\r\n}\r\n\r\n/**\r\n * Appends `element` to `parent`.\r\n * \r\n * @return {Node} - The appended child (`element`).\r\n */\r\nconst append = (parent, element) => {\r\n  return parent.appendChild(element);\r\n};\r\n\r\n/**\r\n * Prepends `element` to `parent`.\r\n * \r\n * @return {Node} - The prepended child (`element`).\r\n */\r\nconst prepend = (parent, element) => {\r\n  const firstChild = parent.firstChild;\r\n  if (firstChild == null) {\r\n    return append(parent, element);\r\n  }\r\n  else {\r\n    return parent.insertBefore(element, firstChild);\r\n  }\r\n};\r\n\r\n/**\r\n * Inserts `element` before `marker`.\r\n * \r\n * @return {Node} - The inserted sibling (`element`).\r\n */\r\nconst insertBefore = (marker, element) => {\r\n  return marker.parentNode.insertBefore(element, marker);\r\n};\r\n\r\n/**\r\n * Inserts `element` after `marker`.\r\n * \r\n * @return {Node} - The inserted sibling (`element`).\r\n */\r\nconst insertAfter = (marker, element) => {\r\n  const sibling = marker.nextSibling;\r\n  if (marker.parentNode) {\r\n    if (sibling) {\r\n      return insertBefore(sibling, element);\r\n    }\r\n    else {\r\n      return append(marker.parentNode, element);\r\n    }\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\n/**\r\n * Append child elements to given node.\r\n *\r\n * @param {Node} node\r\n * @param {Collection} children\r\n */\r\nconst appendChildNodes = (node, children, skipPaddingBlankHtml) => {\r\n  lists.each(children, (child) => {\r\n    if (isElement(node)) {\r\n      // special case: appending a pure UL/OL to a LI element creates inaccessible LI element\r\n      // e.g. press enter in last LI which has UL/OL-subelements\r\n      // Therefore, if current node is LI element with no child nodes (text-node) and appending a list, add a br before\r\n      if (!skipPaddingBlankHtml && isLi(node) && node.firstChild === null && isList(child)) {\r\n        node.appendChild(create(\"br\"));\r\n      }\r\n\r\n      node.appendChild(child);\r\n    }  \r\n  });\r\n\r\n  return node;\r\n}\r\n\r\n/**\r\n * Remove node, (deep: remove children also?)\r\n *\r\n * @param {Node} node\r\n * @param {Boolean} deep\r\n */\r\nconst remove = (node, deep) => {\r\n  if (!node || !node.parentNode) { return; }\r\n  //if (node.removeNode) { return node.removeNode(deep); }\r\n\r\n  const parent = node.parentNode;\r\n  if (!deep) {\r\n    const keptNodes = [];\r\n    for (let i = 0, len = node.childNodes.length; i < len; i++) {\r\n      const child = node.childNodes[i];\r\n      if (isText(child) && child.length === 0) {\r\n        // Delete anyway\r\n        node.removeChild(child);\r\n      }\r\n      else {\r\n        keptNodes.push(child);\r\n      }\r\n    }\r\n\r\n    for (let i = 0, len = keptNodes.length; i < len; i++) {\r\n      parent.insertBefore(keptNodes[i], node);\r\n    }\r\n  }\r\n\r\n  parent.removeChild(node);\r\n}\r\n\r\nconst removeWhile = (node, selector) => {\r\n  const pred = matchSelector(selector);\r\n  while (node) {\r\n    if (isEditableRoot(node) || !pred(node)) {\r\n      break;\r\n    }\r\n    const parent = node.parentNode;\r\n    remove(node);\r\n    node = parent;\r\n  }\r\n}\r\n\r\n/**\r\n * Replaces the node `oldElm` with given node `newElm`.\r\n *\r\n * @param {Node} newElm - The new replacee.\r\n * @param {Node} oldElm - The node to replace.\r\n * @return {Node} - The replace (`newElm`)\r\n */\r\nconst replace = (newElm, oldElm, keepChildren) => {\r\n  // Copy children\r\n  if (keepChildren) {\r\n    while (oldElm.firstChild) {\r\n      newElm.appendChild(oldElm.firstChild);\r\n    }\r\n  }\r\n\r\n  // Replace node\r\n  oldElm.parentNode?.replaceChild(newElm, oldElm);\r\n  return newElm;\r\n}\r\n\r\n/**\r\n * @method replace\r\n *\r\n * Returns a copy of node. If `deep` is true, the copy also includes the node's descendants.\r\n *\r\n * @param {Node} node - The node to clone.\r\n * @param {boolean} [deep] - Whether to copy also node's descendants.\r\n * @return {Node} - The new clone node\r\n */\r\nconst clone = (node, deep) => node.cloneNode(deep);\r\n\r\n/**\r\n * @method rename\r\n *\r\n * Rename node with provided nodeName\r\n *\r\n * @param {Node} node\r\n * @param {String} nodeName\r\n * @return {Node} - Node\r\n */\r\nconst rename = (node, nodeName) => {\r\n  if (!isElement(node) || node.nodeName.toUpperCase() === nodeName.toUpperCase()) {\r\n    return node;\r\n  }\r\n\r\n  const newNode = create(nodeName);\r\n\r\n  // Copy attributes\r\n  [...node.attributes].map(({ name, value }) => {\r\n    newNode.setAttribute(name, value);\r\n  });\r\n\r\n  return replace(newNode, node, true);\r\n}\r\n\r\n// #endregion\r\n\r\n\r\nexport default {\r\n  /** @property {String} blank */\r\n  blank: blankHTML,\r\n  /** @property {String} emptyPara */\r\n  emptyPara: `<p>${blankHTML}</p>`,\r\n  matchSelector,\r\n  matchNodeNames,\r\n  matchClass,\r\n  matchStyleValues,\r\n  matchAttribute,\r\n  matchContentEditableState,\r\n  matches,\r\n  getEditableRoot,\r\n  isEditableRoot,\r\n  isContentEditable,\r\n  getContentEditable,\r\n  getContentEditableParent,\r\n  isControlSizing,\r\n  isNode,\r\n  isText,\r\n  isElement,\r\n  isBookmarkNode,\r\n  isCData,\r\n  isPi,\r\n  isComment,\r\n  isDocument,\r\n  isDocumentFragment,\r\n  isSVGElement,\r\n  isHTMLElement,\r\n  isRestrictedNode,\r\n  isVoid,\r\n  isTag,\r\n  isPara,\r\n  isWhiteSpace,\r\n  findPara,\r\n  isPurePara,\r\n  isParaNoBlockquote,\r\n  isHeading,\r\n  isInline,\r\n  isInlineOrText: func.or(isInline, isText),\r\n  isBlock,\r\n  isBodyInline,\r\n  isBodyInlineNoBlockQuote,\r\n  isBody,\r\n  isParaInline,\r\n  isParaInlineNoBlockQuote,\r\n  isPre,\r\n  isList,\r\n  isTable,\r\n  isData,\r\n  isHr,\r\n  isListItem,\r\n  isDetails,\r\n  isSummary,\r\n  isCell,\r\n  isCellOrRow,\r\n  isCellOrCaption,\r\n  isMedia,\r\n  isBlockquote,\r\n  isBodyContainer,\r\n  isAnchor,\r\n  isDiv,\r\n  isLi,\r\n  isBR,\r\n  isSpan,\r\n  isB,\r\n  isU,\r\n  isImg,\r\n  isFigure,\r\n  isTextarea,\r\n  isTextareaOrInput,\r\n  isEmpty,\r\n  isEmptyAnchor,\r\n  isClosestSibling,\r\n  deepestChildIsEmpty,\r\n  withClosestSiblings,\r\n  nodeLength,\r\n  isLeftEdgeOf,\r\n  isRightEdgeOf,\r\n  select,\r\n  closest,\r\n  ancestor: closest, // Alias\r\n  closestSingleParent,\r\n  parents,\r\n  ancestors: parents, // Alias\r\n  parentsWhile,\r\n  farthestParent,\r\n  commonParent,\r\n  prevSiblings,\r\n  nextSiblings,\r\n  children,\r\n  isChildOf,\r\n  wrap,\r\n  unwrap,\r\n  insertAfter,\r\n  insertBefore,\r\n  append,\r\n  prepend,\r\n  appendChildNodes,\r\n  position,\r\n  hasChildren,\r\n  skipEmptyTextNodes,\r\n  makeOffsetPath,\r\n  fromOffsetPath,\r\n  getRangeNode,\r\n  getNextTextNode,\r\n  create,\r\n  createText,\r\n  createFragment,\r\n  remove,\r\n  removeWhile,\r\n  clone,\r\n  rename,\r\n  replace,\r\n  value,\r\n  outerHtml,\r\n  posFromPlaceholder,\r\n  attachEvents,\r\n  detachEvents,\r\n  isCustomStyleTag,\r\n  setAttr,\r\n  setAttrs,\r\n  removeAllAttrs,\r\n  getAttr,\r\n  getStyle,\r\n  setStyle,\r\n  setStyles,\r\n  hasClass,\r\n  addClass,\r\n  removeClass,\r\n  toggleClass,\r\n  parseStyle\r\n};\r\n","import $ from 'jquery';\r\nimport Str from './core/Str';\r\nimport Type from './core/Type';\r\nimport func from './core/func';\r\nimport lists from './core/lists';\r\nimport dom from './core/dom';\r\n\r\nexport default class Context {\r\n  /**\r\n   * @param {jQuery} $note\r\n   * @param {Object} options\r\n   */\r\n  constructor($note, options) {\r\n    this.$note = $note;\r\n\r\n    this.memos = {};\r\n    this.modules = {};\r\n    this.layoutInfo = {};\r\n    this.options = $.extend(true, {}, options);\r\n\r\n    // init ui with options\r\n    $.summernote.ui = $.summernote.ui_template(this.options);\r\n    this.ui = $.summernote.ui;\r\n\r\n    this.initialize();\r\n  }\r\n\r\n  /**\r\n   * create layout and initialize modules and other resources\r\n   */\r\n  initialize() {\r\n    this.layoutInfo = this.ui.createLayout(this.$note);\r\n    this._initialize();\r\n    this.$note.hide();\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * destroy modules and other resources and remove layout\r\n   */\r\n  destroy() {\r\n    this._destroy();\r\n    this.$note.removeData('summernote');\r\n    this.ui.removeLayout(this.$note, this.layoutInfo);\r\n  }\r\n\r\n  /**\r\n   * destory modules and other resources and initialize it again\r\n   */\r\n  reset() {\r\n    const disabled = this.isDisabled();\r\n    this.code(dom.emptyPara);\r\n    this._destroy();\r\n    this._initialize();\r\n\r\n    if (disabled) {\r\n      this.disable();\r\n    }\r\n  }\r\n\r\n  _initialize() {\r\n    // set own id\r\n    this.options.id = func.uniqueId($.now());\r\n    // set default container for tooltips, popovers, and dialogs\r\n    this.options.container = this.options.container || this.layoutInfo.editor;\r\n\r\n    // add optional buttons\r\n    const buttons = $.extend({}, this.options.buttons);\r\n    Object.keys(buttons).forEach((key) => {\r\n      this.memo('button.' + key, buttons[key]);\r\n    });\r\n\r\n    const modules = $.extend({}, this.options.modules, $.summernote.plugins || {});\r\n\r\n    // add and initialize modules\r\n    Object.keys(modules).forEach((key) => {\r\n      this.module(key, modules[key], true);\r\n    });\r\n\r\n    Object.keys(this.modules).forEach((key) => {\r\n      this.initializeModule(key);\r\n    });\r\n  }\r\n\r\n  _destroy() {\r\n    // destroy modules with reversed order\r\n    Object.keys(this.modules).reverse().forEach((key) => {\r\n      this.removeModule(key);\r\n    });\r\n\r\n    Object.keys(this.memos).forEach((key) => {\r\n      this.removeMemo(key);\r\n    });\r\n    // trigger custom onDestroy callback\r\n    this.triggerEvent('destroy', this);\r\n  }\r\n\r\n  code(html) {\r\n    const isCodeView = this.invoke('codeview.isActivated');\r\n\r\n    if (html === undefined) {\r\n      // Get\r\n      this.invoke('codeview.sync');\r\n      return isCodeView ? this.layoutInfo.codable.val() : this.layoutInfo.editable.html();\r\n    } else {\r\n      // Set\r\n      if (isCodeView) {\r\n        this.invoke('codeview.sync', html);\r\n      } \r\n      else {\r\n        this.layoutInfo.editable.html(html);\r\n      }\r\n\r\n      this.$note.val(html);\r\n      this.triggerEvent('change', this.layoutInfo.editable);\r\n    }\r\n  }\r\n\r\n  isDisabled() {\r\n    return this.layoutInfo.editable.attr('contenteditable') === 'false';\r\n  }\r\n\r\n  enable() {\r\n    this.layoutInfo.editable.attr('contenteditable', true);\r\n    this.invoke('toolbar.activate', true);\r\n    this.triggerEvent('disable', false);\r\n    this.options.editing = true;\r\n  }\r\n\r\n  disable() {\r\n    // close codeview if codeview is open\r\n    if (this.invoke('codeview.isActivated')) {\r\n      this.invoke('codeview.deactivate');\r\n    }\r\n    this.layoutInfo.editable.attr('contenteditable', false);\r\n    this.options.editing = false;\r\n    this.invoke('toolbar.deactivate', true);\r\n\r\n    this.triggerEvent('disable', true);\r\n  }\r\n\r\n  triggerEvent() {\r\n    const name = lists.head(arguments);\r\n    const args = lists.tail(lists.from(arguments));\r\n\r\n    const callback = this.options.callbacks[Str.namespaceToCamel(name, 'on')];\r\n    if (callback) {\r\n      callback.apply(this.$note[0], args);\r\n    }\r\n\r\n    this.$note.trigger('summernote.' + name, args);\r\n  }\r\n\r\n  initializeModule(key) {\r\n    const module = this.modules[key];\r\n    module.shouldInitialize = module.shouldInitialize || func.ok;\r\n    if (!module.shouldInitialize()) {\r\n      return;\r\n    }\r\n\r\n    // initialize module\r\n    if (module.initialize) {\r\n      module.initialize();\r\n    }\r\n\r\n    // attach events\r\n    if (module.events) {\r\n      dom.attachEvents(this.$note, module.events);\r\n    }\r\n  }\r\n\r\n  module(key, ModuleClass, withoutIntialize) {\r\n    if (arguments.length === 1) {\r\n      return this.modules[key];\r\n    }\r\n\r\n    this.modules[key] = new ModuleClass(this);\r\n\r\n    if (!withoutIntialize) {\r\n      this.initializeModule(key);\r\n    }\r\n  }\r\n\r\n  removeModule(key) {\r\n    const module = this.modules[key];\r\n    if (module.shouldInitialize()) {\r\n      if (module.events) {\r\n        dom.detachEvents(this.$note, module.events);\r\n      }\r\n\r\n      if (module.destroy) {\r\n        module.destroy();\r\n      }\r\n    }\r\n\r\n    delete this.modules[key];\r\n  }\r\n\r\n  memo(key, obj) {\r\n    if (arguments.length === 1) {\r\n      return this.memos[key];\r\n    }\r\n    this.memos[key] = obj;\r\n  }\r\n\r\n  removeMemo(key) {\r\n    if (this.memos[key] && this.memos[key].destroy) {\r\n      this.memos[key].destroy();\r\n    }\r\n\r\n    delete this.memos[key];\r\n  }\r\n\r\n  /**\r\n   * Some buttons need to change their visual style immediately once they get pressed\r\n   */\r\n  createInvokeHandlerAndUpdateState(namespace, value) {\r\n    return (event) => {\r\n      this.createInvokeHandler(namespace, value)(event);\r\n      this.invoke('buttons.updateCurrentStyle');\r\n    };\r\n  }\r\n\r\n  createInvokeHandler(namespace, value) {\r\n    return (event) => {\r\n      event.preventDefault();\r\n      const $target = $(event.target);\r\n      this.invoke(namespace, value || $target.closest('[data-value]').data('value'), $target);\r\n    };\r\n  }\r\n\r\n  invoke() {\r\n    // TODO: Allow multiple splits, e.g. \"editor.selection.getRange\"\r\n    const namespace = lists.head(arguments);\r\n    const args = lists.tail(lists.from(arguments));\r\n\r\n    const splits = namespace.split('.');\r\n    const moduleName = splits.length > 1 && splits[0];\r\n    const propertyName = splits.length > 2 ? splits[1] : null; // e.g.: editor.*selection*.getRange\r\n    const methodName = splits.length > 1 ? lists.last(splits) : splits[0]; // e.g.: editor.*unlink*\r\n    let module = this.modules[moduleName || 'editor'];\r\n\r\n    if (!moduleName && this[methodName]) {\r\n      return this[methodName].apply(this, args);\r\n    } \r\n    else if (module && module[propertyName || methodName] && module.shouldInitialize()) {\r\n      if (propertyName) {\r\n        // Get editor.*selection*\r\n        module = Type.isFunction(module[propertyName]) ? module[propertyName].apply(module) : module[propertyName];\r\n      }\r\n\r\n      return module[methodName].apply(module, args);\r\n    }\r\n  }\r\n}\r\n","import $ from 'jquery';\r\nimport env from './core/env';\r\nimport Type from './core/Type';\r\nimport lists from './core/lists';\r\nimport Context from './Context';\r\n\r\n$.fn.extend({\r\n  /**\r\n   * Summernote API\r\n   *\r\n   * @param {Object|String}\r\n   * @return {this}\r\n   */\r\n  summernote: function() {\r\n    const param = lists.head(arguments);\r\n    const hasOptions = Type.isNullOrUndefined() || Type.isPlainObject(param);\r\n\r\n    let options;\r\n    if (hasOptions) {\r\n      options = $.extend({}, $.summernote.options, param || {});\r\n\r\n      // Update options\r\n      options.langInfo = $.extend(true, {}, $.summernote.lang['en-US'], $.summernote.lang[options.lang]);\r\n      options.icons = $.extend(true, {}, $.summernote.options.icons, options.icons);\r\n      options.tooltip = options.tooltip === 'auto' ? !env.isSupportTouch : options.tooltip;\r\n    }\r\n\r\n    if (options) {\r\n      this.each((_i, el) => {\r\n        let $note = $(el);\r\n        let context = $note.data('summernote');\r\n\r\n        if (!context) {\r\n          context = new Context($note, options);\r\n          $note.data('summernote', context);\r\n          context.triggerEvent('init', context.layoutInfo);\r\n        }\r\n      });\r\n    }\r\n\r\n    const $note = this.first();\r\n    if ($note.length) {\r\n      const context = $note.data('summernote');\r\n      if (context) {\r\n        if (Type.isString(param)) {\r\n          return context.invoke.apply(context, lists.from(arguments));\r\n        } \r\n        else if (options.focus) {\r\n          context.invoke('editor.focus');\r\n        }\r\n      }\r\n    }\r\n\r\n    return this;\r\n  },\r\n});\r\n","const alignLeft = '<svg viewBox=\"0 0 448 512\"><path d=\"M24 40C10.7 40 0 50.7 0 64S10.7 88 24 88H264c13.3 0 24-10.7 24-24s-10.7-24-24-24H24zm0 128c-13.3 0-24 10.7-24 24s10.7 24 24 24H424c13.3 0 24-10.7 24-24s-10.7-24-24-24H24zM0 320c0 13.3 10.7 24 24 24H264c13.3 0 24-10.7 24-24s-10.7-24-24-24H24c-13.3 0-24 10.7-24 24zM24 424c-13.3 0-24 10.7-24 24s10.7 24 24 24H424c13.3 0 24-10.7 24-24s-10.7-24-24-24H24z\"/></svg>';\r\nconst rollback = '<svg viewBox=\"0 0 512 512\"><path d=\"M140.8 122.9C171.7 96.2 212 80 256 80c97.2 0 176 78.8 176 176s-78.8 176-176 176c-39.7 0-76.2-13.1-105.6-35.2c-10.6-8-25.6-5.8-33.6 4.8s-5.8 25.6 4.8 33.6C159 463.3 205.6 480 256 480c123.7 0 224-100.3 224-224S379.7 32 256 32c-57.3 0-109.6 21.5-149.2 56.9L76.3 58.3C69.7 51.7 60.7 48 51.3 48C31.8 48 16 63.8 16 83.3V200c0 13.3 10.7 24 24 24H156.7c19.5 0 35.3-15.8 35.3-35.3c0-9.4-3.7-18.3-10.3-25l-40.8-40.8zm-76.8-9L126.1 176H64V113.9z\"/></svg>';\r\n\r\nexport default {\r\n    //'align': 'fa fa-align-left',\r\n    'align': alignLeft,\r\n    //'alignCenter': 'fa fa-align-center',\r\n    'alignCenter': '<svg viewBox=\"0 0 448 512\"><path d=\"M120 40c-13.3 0-24 10.7-24 24s10.7 24 24 24H328c13.3 0 24-10.7 24-24s-10.7-24-24-24H120zM24 168c-13.3 0-24 10.7-24 24s10.7 24 24 24H424c13.3 0 24-10.7 24-24s-10.7-24-24-24H24zM96 320c0 13.3 10.7 24 24 24H328c13.3 0 24-10.7 24-24s-10.7-24-24-24H120c-13.3 0-24 10.7-24 24zM24 424c-13.3 0-24 10.7-24 24s10.7 24 24 24H424c13.3 0 24-10.7 24-24s-10.7-24-24-24H24z\"/></svg>',\r\n    //'alignJustify': 'fa fa-align-justify',\r\n    'alignJustify': '<svg viewBox=\"0 0 448 512\"><path d=\"M24 40C10.7 40 0 50.7 0 64S10.7 88 24 88H424c13.3 0 24-10.7 24-24s-10.7-24-24-24H24zm0 128c-13.3 0-24 10.7-24 24s10.7 24 24 24H424c13.3 0 24-10.7 24-24s-10.7-24-24-24H24zM0 320c0 13.3 10.7 24 24 24H424c13.3 0 24-10.7 24-24s-10.7-24-24-24H24c-13.3 0-24 10.7-24 24zM24 424c-13.3 0-24 10.7-24 24s10.7 24 24 24H424c13.3 0 24-10.7 24-24s-10.7-24-24-24H24z\"/></svg>',\r\n    //'alignLeft': 'fa fa-align-left',\r\n    'alignLeft': alignLeft,\r\n    //'alignRight': 'fa fa-align-right',\r\n    'alignRight': '<svg viewBox=\"0 0 448 512\"><path d=\"M424 40c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24H424zm0 128c13.3 0 24 10.7 24 24s-10.7 24-24 24H24c-13.3 0-24-10.7-24-24s10.7-24 24-24H424zm24 152c0 13.3-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24H424c13.3 0 24 10.7 24 24zM424 424c13.3 0 24 10.7 24 24s-10.7 24-24 24H24c-13.3 0-24-10.7-24-24s10.7-24 24-24H424z\"/></svg>',\r\n    //'floatLeft': 'fa fa-align-left',\r\n    'floatLeft': '<svg viewBox=\"0 0 512 512\"><path d=\"M0 24C0 10.7 10.7 0 24 0S48 10.7 48 24l0 464c0 13.3-10.7 24-24 24s-24-10.7-24-24L0 24zM176 176l288 0 0-64-288 0 0 64zm-48-64c0-26.5 21.5-48 48-48l288 0c26.5 0 48 21.5 48 48l0 64c0 26.5-21.5 48-48 48l-288 0c-26.5 0-48-21.5-48-48l0-64zm48 288l160 0 0-64-160 0 0 64zm-48-64c0-26.5 21.5-48 48-48l160 0c26.5 0 48 21.5 48 48l0 64c0 26.5-21.5 48-48 48l-160 0c-26.5 0-48-21.5-48-48l0-64z\"/></svg>',\r\n    //'floatRight': 'fa fa-align-right',\r\n    'floatRight': '<svg viewBox=\"0 0 512 512\"><path d=\"M512 24c0-13.3-10.7-24-24-24s-24 10.7-24 24l0 464c0 13.3 10.7 24 24 24s24-10.7 24-24l0-464zM336 176L48 176l0-64 288 0 0 64zm48-64c0-26.5-21.5-48-48-48L48 64C21.5 64 0 85.5 0 112l0 64c0 26.5 21.5 48 48 48l288 0c26.5 0 48-21.5 48-48l0-64zM336 400l-160 0 0-64 160 0 0 64zm48-64c0-26.5-21.5-48-48-48l-160 0c-26.5 0-48 21.5-48 48l0 64c0 26.5 21.5 48 48 48l160 0c26.5 0 48-21.5 48-48l0-64z\"/></svg>',\r\n    //'floatNone': 'fa fa-align-justify',\r\n    'floatNone': rollback,\r\n    'flipV': '<svg viewBox=\"0 0 512 512\"><path d=\"M0 256c0-13.3 10.7-24 24-24l464 0c13.3 0 24 10.7 24 24s-10.7 24-24 24L24 280c-13.3 0-24-10.7-24-24zM166.6 464l178.7 0L256 374.6 166.6 464zM128 512c-12.9 0-24.6-7.8-29.6-19.8s-2.2-25.7 6.9-34.9l128-128c12.5-12.5 32.8-12.5 45.3 0l128 128c9.2 9.2 11.9 22.9 6.9 34.9s-16.6 19.8-29.6 19.8l-256 0zM256 137.4L345.4 48 166.6 48 256 137.4zM98.4 19.8C103.4 7.8 115.1 0 128 0L384 0c12.9 0 24.6 7.8 29.6 19.8s2.2 25.7-6.9 34.9l-128 128c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-9.2-9.2-11.9-22.9-6.9-34.9z\"/></svg>',\r\n    'flipH': '<svg viewBox=\"0 0 512 512\"><path d=\"M256 0c13.3 0 24 10.7 24 24l0 464c0 13.3-10.7 24-24 24s-24-10.7-24-24l0-464c0-13.3 10.7-24 24-24zM48 166.6l0 178.7L137.4 256 48 166.6zM0 128c0-12.9 7.8-24.6 19.8-29.6s25.7-2.2 34.9 6.9l128 128c12.5 12.5 12.5 32.8 0 45.3l-128 128c-9.2 9.2-22.9 11.9-34.9 6.9S0 396.9 0 384L0 128zM374.6 256L464 345.4l0-178.7L374.6 256zM492.2 98.4c12 5 19.8 16.6 19.8 29.6l0 256c0 12.9-7.8 24.6-19.8 29.6s-25.7 2.2-34.9-6.9l-128-128c-12.5-12.5-12.5-32.8 0-45.3l128-128c9.2-9.2 22.9-11.9 34.9-6.9z\"/></svg>',\r\n    //'rowBelow': 'note-icon-row-below',\r\n    'rowBelow': '<svg viewBox=\"0 0 14 14\"><path d=\"m 1e-4,5.3181 c 0,0.2901 0.1688,0.5229 0.3789,0.5229 l 13.242,0 c 0.21,0 0.3789,-0.2328 0.3789,-0.5229 l 0,-4.7928 C 13.9999,0.2353 13.831,1e-4 13.621,1e-4 l -13.242,0 C 0.1689,1e-4 1e-4,0.2353 1e-4,0.5253 l 0,4.7928 z m 1.1582,-0.687 0,-3.4211 3.2168,0 0,3.4211 -3.2168,0 z m 4.2852,0 0,-3.4211 3.2148,0 0,3.4211 -3.2148,0 z m 4.2832,0 0,-3.4211 3.2148,0 0,3.4211 -3.2148,0 z m -6.7266,5.337 q 0,-0.264 0.1915,-0.4658 L 3.5798,9.1141 q 0.1966,-0.1965 0.4709,-0.1965 0.2795,0 0.4658,0.1965 l 1.5217,1.5164 0,-3.6436 q 0,-0.2691 0.194,-0.4372 0.1941,-0.1683 0.4684,-0.1683 l 0.6625,0 q 0.2743,0 0.4684,0.1683 0.1941,0.1681 0.1941,0.4372 l 0,3.6436 1.5216,-1.5164 q 0.1863,-0.1965 0.4658,-0.1965 0.2795,0 0.4658,0.1965 l 0.3882,0.3882 q 0.1966,0.1967 0.1966,0.4658 0,0.2742 -0.1966,0.471 l -3.3693,3.3692 q -0.1812,0.1916 -0.4658,0.1916 -0.2795,0 -0.471,-0.1916 L 3.1916,10.4391 Q 3.0001,10.2372 3.0001,9.9681 Z\"/></svg>',\r\n    //'colBefore': 'note-icon-col-before',\r\n    'colBefore': '<svg viewBox=\"0 0 14 14\"><path d=\"M 8.6819,1e-4 C 8.3918,1e-4 8.159,0.1689 8.159,0.379 l 0,13.242 c 0,0.21 0.2328,0.3789 0.5229,0.3789 l 4.7928,0 c 0.29,0 0.5252,-0.1689 0.5252,-0.3789 l 0,-13.242 c 0,-0.2101 -0.2352,-0.3789 -0.5252,-0.3789 l -4.7928,0 z m 0.687,1.1582 3.4211,0 0,3.2168 -3.4211,0 0,-3.2168 z m 0,4.2852 3.4211,0 0,3.2148 -3.4211,0 0,-3.2148 z m 0,4.2832 3.4211,0 0,3.2148 -3.4211,0 0,-3.2148 z M 4.0319,3.0001 q 0.264,0 0.4658,0.1915 l 0.3882,0.3882 q 0.1965,0.1966 0.1965,0.4709 0,0.2795 -0.1965,0.4658 l -1.5164,1.5217 3.6436,0 q 0.2691,0 0.4372,0.194 0.1683,0.1941 0.1683,0.4684 l 0,0.6625 q 0,0.2743 -0.1683,0.4684 -0.1681,0.1941 -0.4372,0.1941 l -3.6436,0 1.5164,1.5216 q 0.1965,0.1863 0.1965,0.4658 0,0.2795 -0.1965,0.4658 L 4.4977,10.867 q -0.1967,0.1966 -0.4658,0.1966 -0.2742,0 -0.471,-0.1966 L 0.1917,7.4977 Q 1e-4,7.3165 1e-4,7.0319 1e-4,6.7524 0.1917,6.5609 L 3.5609,3.1916 Q 3.7628,3.0001 4.0319,3.0001 Z\"/></svg>',\r\n    //'colAfter': 'note-icon-col-after',\r\n    'colAfter': '<svg viewBox=\"0 0 14 14\"><path d=\"m 5.3165569,14.0019 c 0.2900213,0 0.5227581,-0.1688 0.5227581,-0.3789 l 0,-13.2422 c 0,-0.21 -0.2327368,-0.3789 -0.5227581,-0.3789 l -4.7914999,0 C 0.235136,0.0019 0,0.1708 0,0.3808 L 0,13.623 c 0,0.2101 0.235136,0.3789 0.525057,0.3789 l 4.7914999,0 z m -0.6868135,-1.1582 -3.4201714,0 0,-3.2168 3.4201714,0 0,3.2168 z m 0,-4.2852 -3.4201714,0 0,-3.2148 3.4201714,0 0,3.2148 z m 0,-4.2832 -3.4201714,0 0,-3.2148 3.4201714,0 0,3.2148 z m 5.3395506,6.7583 q -0.2639283,0 -0.4656736,-0.1915 L 9.1155258,10.4539 Q 8.9190791,10.2573 8.9190791,9.983 q 0,-0.2795 0.1964467,-0.4658 l 1.5159882,-1.5217 -3.642611,0 q -0.269027,0 -0.4370814,-0.194 Q 6.3835673,7.6074 6.3835673,7.3331 l 0,-0.6625 q 0,-0.2743 0.1682543,-0.4684 Q 6.719876,6.0081 6.988903,6.0081 l 3.642611,0 L 9.1155258,4.4865 Q 8.9190791,4.3002 8.9190791,4.0207 q 0,-0.2795 0.1964467,-0.4658 L 9.5036204,3.1667 Q 9.7002671,2.9701 9.969294,2.9701 q 0.274126,0 0.470872,0.1966 L 13.808452,6.536 Q 14,6.7172 14,7.0018 q 0,0.2795 -0.191548,0.471 l -3.368286,3.3693 q -0.201845,0.1915 -0.470872,0.1915 z\"/></svg>',\r\n    //'rowAbove': 'note-icon-row-above',\r\n    'rowAbove': '<svg viewBox=\"0 0 14 14\"><path d=\"m 13.9999,8.6819 c 0,-0.2901 -0.1688,-0.5229 -0.3789,-0.5229 l -13.242,0 c -0.21,0 -0.3789,0.2328 -0.3789,0.5229 l 0,4.7928 c 0,0.29 0.1689,0.5252 0.3789,0.5252 l 13.242,0 c 0.2101,0 0.3789,-0.2352 0.3789,-0.5252 l 0,-4.7928 z m -1.1582,0.687 0,3.4211 -3.2168,0 0,-3.4211 3.2168,0 z m -4.2852,0 0,3.4211 -3.2148,0 0,-3.4211 3.2148,0 z m -4.2832,0 0,3.4211 -3.2148,0 0,-3.4211 3.2148,0 z m 6.7266,-5.337 q 0,0.264 -0.1915,0.4658 l -0.3882,0.3882 q -0.1966,0.1965 -0.4709,0.1965 -0.2795,0 -0.4658,-0.1965 l -1.5217,-1.5164 0,3.6436 q 0,0.2691 -0.194,0.4372 -0.1941,0.1683 -0.4684,0.1683 l -0.6625,0 Q 6.3626,7.6186 6.1685,7.4503 5.9744,7.2822 5.9744,7.0131 l 0,-3.6436 -1.5216,1.5164 Q 4.2665,5.0824 3.987,5.0824 3.7075,5.0824 3.5212,4.8859 L 3.133,4.4977 Q 2.9364,4.301 2.9364,4.0319 q 0,-0.2742 0.1966,-0.471 L 6.5023,0.1917 Q 6.6835,1e-4 6.9681,1e-4 q 0.2795,0 0.471,0.1916 l 3.3693,3.3692 q 0.1915,0.2019 0.1915,0.471 z\"/></svg>',\r\n    //'rowRemove': 'note-icon-row-remove',\r\n    'rowRemove': '<svg viewBox=\"0 0 14 14\"><path d=\"m 13.9999,8.68029 c 0,-0.29019 -0.1688,-0.52307 -0.3789,-0.52307 l -13.242,0 c -0.21,0 -0.3789,0.23288 -0.3789,0.52307 l 0,4.79434 C 1e-4,13.76472 0.169,14 0.379,14 l 13.242,0 c 0.2101,0 0.3789,-0.23528 0.3789,-0.52537 l 0,-4.79434 z m -1.1582,0.68722 0,3.4222 -3.2168,0 0,-3.4222 3.2168,0 z m -4.2852,0 0,3.4222 -3.2148,0 0,-3.4222 3.2148,0 z m -4.2832,0 0,3.4222 -3.2148,0 0,-3.4222 3.2148,0 z M 4.6999,7.59994 q -0.2558,0 -0.4348,-0.17911 L 3.3953,6.5508 Q 3.2162,6.37168 3.2162,6.11579 q 0,-0.2559 0.1791,-0.43501 L 5.2755,3.79997 3.3953,1.91917 Q 3.2162,1.74005 3.2162,1.48416 q 0,-0.2559 0.1791,-0.43501 L 4.2651,0.17912 Q 4.4441,0 4.6999,0 4.9557,0 5.1348,0.17912 L 7.015,2.05992 8.8952,0.17912 Q 9.0742,0 9.33,0 9.5858,0 9.7649,0.17912 l 0.8698,0.87003 q 0.179,0.17911 0.179,0.43501 0,0.25589 -0.179,0.43501 l -1.8802,1.8808 1.8802,1.88081 q 0.179,0.17911 0.179,0.43501 0,0.25589 -0.179,0.43501 L 9.7649,7.42083 Q 9.5858,7.59994 9.33,7.59994 q -0.2558,0 -0.4348,-0.17911 L 7.015,5.54002 5.1348,7.42083 Q 4.9557,7.59994 4.6999,7.59994 Z\"/></svg>',\r\n    //'colRemove': 'note-icon-col-remove',\r\n    'colRemove': '<svg viewBox=\"0 0 14 14\"><path d=\"m 5.31971,13.9999 c 0.29019,0 0.52307,-0.1688 0.52307,-0.3789 l 0,-13.242 C 5.84278,0.169 5.6099,1e-4 5.31971,1e-4 l -4.79434,0 C 0.23528,1e-4 0,0.169 0,0.379 l 0,13.242 c 0,0.2101 0.23528,0.3789 0.52537,0.3789 l 4.79434,0 z m -0.68722,-1.1582 -3.4222,0 0,-3.2168 3.4222,0 0,3.2168 z m 0,-4.2852 -3.4222,0 0,-3.2148 3.4222,0 0,3.2148 z m 0,-4.2832 -3.4222,0 0,-3.2148 3.4222,0 0,3.2148 z m 1.76757,0.4266 q 0,-0.2558 0.17911,-0.4348 L 7.4492,3.3953 q 0.17912,-0.1791 0.43501,-0.1791 0.2559,0 0.43501,0.1791 l 1.88081,1.8802 1.8808,-1.8802 q 0.17912,-0.1791 0.43501,-0.1791 0.2559,0 0.43501,0.1791 l 0.87003,0.8698 Q 14,4.4441 14,4.6999 14,4.9557 13.82088,5.1348 l -1.8808,1.8802 1.8808,1.8802 Q 14,9.0742 14,9.33 14,9.5858 13.82088,9.7649 l -0.87003,0.8698 q -0.17911,0.179 -0.43501,0.179 -0.25589,0 -0.43501,-0.179 l -1.8808,-1.8802 -1.88081,1.8802 q -0.17911,0.179 -0.43501,0.179 -0.25589,0 -0.43501,-0.179 L 6.57917,9.7649 Q 6.40006,9.5858 6.40006,9.33 q 0,-0.2558 0.17911,-0.4348 L 8.45998,7.015 6.57917,5.1348 Q 6.40006,4.9557 6.40006,4.6999 Z\"/></svg>',\r\n    //'indent': 'fa fa-indent',\r\n    'indent': '<svg viewBox=\"0 0 448 512\"><path d=\"M0 64C0 77.3 10.7 88 24 88H424c13.3 0 24-10.7 24-24s-10.7-24-24-24H24C10.7 40 0 50.7 0 64zM192 192c0 13.3 10.7 24 24 24H424c13.3 0 24-10.7 24-24s-10.7-24-24-24H216c-13.3 0-24 10.7-24 24zm24 104c-13.3 0-24 10.7-24 24s10.7 24 24 24H424c13.3 0 24-10.7 24-24s-10.7-24-24-24H216zM0 448c0 13.3 10.7 24 24 24H424c13.3 0 24-10.7 24-24s-10.7-24-24-24H24c-13.3 0-24 10.7-24 24zM121 268.4c7.8-6.4 7.8-18.3 0-24.7L26.2 165.6C15.7 157 0 164.4 0 177.9V334.1c0 13.5 15.7 20.9 26.2 12.4L121 268.4z\"/></svg>',\r\n    //'outdent': 'fa fa-outdent',\r\n    'outdent': '<svg viewBox=\"0 0 448 512\"><path d=\"M0 64C0 50.7 10.7 40 24 40H424c13.3 0 24 10.7 24 24s-10.7 24-24 24H24C10.7 88 0 77.3 0 64zM192 192c0-13.3 10.7-24 24-24H424c13.3 0 24 10.7 24 24s-10.7 24-24 24H216c-13.3 0-24-10.7-24-24zm24 104H424c13.3 0 24 10.7 24 24s-10.7 24-24 24H216c-13.3 0-24-10.7-24-24s10.7-24 24-24zM0 448c0-13.3 10.7-24 24-24H424c13.3 0 24 10.7 24 24s-10.7 24-24 24H24c-13.3 0-24-10.7-24-24zM7 268.4C-.8 262-.8 250 7 243.6l94.8-78.1c10.4-8.6 26.2-1.2 26.2 12.4V334.1c0 13.5-15.7 20.9-26.2 12.4L7 268.4z\"/></svg>',\r\n    //'arrowsAlt': 'fa fa-expand',\r\n    'arrowsAlt': '<svg viewBox=\"0 0 448 512\"><path d=\"M136 32c13.3 0 24 10.7 24 24s-10.7 24-24 24H48v88c0 13.3-10.7 24-24 24s-24-10.7-24-24V56C0 42.7 10.7 32 24 32H136zM0 344c0-13.3 10.7-24 24-24s24 10.7 24 24v88h88c13.3 0 24 10.7 24 24s-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V344zM424 32c13.3 0 24 10.7 24 24V168c0 13.3-10.7 24-24 24s-24-10.7-24-24V80H312c-13.3 0-24-10.7-24-24s10.7-24 24-24H424zM400 344c0-13.3 10.7-24 24-24s24 10.7 24 24V456c0 13.3-10.7 24-24 24H312c-13.3 0-24-10.7-24-24s10.7-24 24-24h88V344z\"/></svg>',\r\n    //'bold': 'fa fa-bold',\r\n    'bold': '<svg viewBox=\"0 0 384 512\"><path d=\"M0 64C0 46.3 14.3 32 32 32H80 96 224c70.7 0 128 57.3 128 128c0 31.3-11.3 60.1-30 82.3c37.1 22.4 62 63.1 62 109.7c0 70.7-57.3 128-128 128H96 80 32c-17.7 0-32-14.3-32-32s14.3-32 32-32H48V256 96H32C14.3 96 0 81.7 0 64zM224 224c35.3 0 64-28.7 64-64s-28.7-64-64-64H112V224H224zM112 288V416H256c35.3 0 64-28.7 64-64s-28.7-64-64-64H224 112z\"/></svg>',\r\n    //'caret': 'fa fa-caret-down',\r\n    'caret': 'fa fa-caret-down',\r\n    //'circle': 'far fa-circle',\r\n    'circle': '<svg viewBox=\"0 0 512 512\"><path d=\"M464 256A208 208 0 1 0 48 256a208 208 0 1 0 416 0zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256z\"/></svg>',\r\n    //'close': 'fa fa-times',\r\n    'close': '<svg viewBox=\"0 0 448 512\"><path d=\"M41 39C31.6 29.7 16.4 29.7 7 39S-2.3 63.6 7 73l183 183L7 439c-9.4 9.4-9.4 24.6 0 33.9s24.6 9.4 33.9 0l183-183L407 473c9.4 9.4 24.6 9.4 33.9 0s9.4-24.6 0-33.9l-183-183L441 73c9.4-9.4 9.4-24.6 0-33.9s-24.6-9.4-33.9 0l-183 183L41 39z\"/></svg>',\r\n    //'code': 'fa fa-code',\r\n    'code': '<svg viewBox=\"0 0 640 512\"><path d=\"M399.1 1.1c-12.7-3.9-26.1 3.1-30 15.8l-144 464c-3.9 12.7 3.1 26.1 15.8 30s26.1-3.1 30-15.8l144-464c3.9-12.7-3.1-26.1-15.8-30zm71.4 118.5c-9.1 9.7-8.6 24.9 1.1 33.9L580.9 256 471.6 358.5c-9.7 9.1-10.2 24.3-1.1 33.9s24.3 10.2 33.9 1.1l128-120c4.8-4.5 7.6-10.9 7.6-17.5s-2.7-13-7.6-17.5l-128-120c-9.7-9.1-24.9-8.6-33.9 1.1zm-301 0c-9.1-9.7-24.3-10.2-33.9-1.1l-128 120C2.7 243 0 249.4 0 256s2.7 13 7.6 17.5l128 120c9.7 9.1 24.9 8.6 33.9-1.1s8.6-24.9-1.1-33.9L59.1 256 168.4 153.5c9.7-9.1 10.2-24.3 1.1-33.9z\"/></svg>',\r\n    'inlineCode': '<svg viewBox=\"0 0 576 512\"><path d=\"M6.3 72.2c-9-9.8-8.3-24.9 1.4-33.9s24.9-8.3 33.9 1.4l184 200c8.5 9.2 8.5 23.3 0 32.5l-184 200c-9 9.8-24.2 10.4-33.9 1.4s-10.4-24.2-1.4-33.9L175.4 256 6.3 72.2zM248 432H552c13.3 0 24 10.7 24 24s-10.7 24-24 24H248c-13.3 0-24-10.7-24-24s10.7-24 24-24z\"/></svg>',\r\n    //'eraser': 'fa fa-eraser',\r\n    'eraser': '<svg viewBox=\"0 0 640 512\"><path d=\"M38.8 5.1C28.4-3.1 13.3-1.2 5.1 9.2S-1.2 34.7 9.2 42.9l592 464c10.4 8.2 25.5 6.3 33.7-4.1s6.3-25.5-4.1-33.7l-281.9-221L396.4 80H521.3l-8.5 34.2c-3.2 12.9 4.6 25.9 17.5 29.1s25.9-4.6 29.1-17.5l11-44.1C576.6 56.5 557.5 32 531.5 32h-335c-18.4 0-34.4 12.5-38.8 30.3l-7.5 30.1L38.8 5.1zM191.5 124.8L202.7 80H346.5L308.1 216.2 191.5 124.8zm129 223.7l-40.8-32.1L248.9 425.5l-1.8 6.5H192c-13.3 0-24 10.7-24 24s10.7 24 24 24H352c13.3 0 24-10.7 24-24s-10.7-24-24-24H296.9l23.6-83.5z\"/></svg>',\r\n    'paintbrush': 'fa fa-paintbrush',\r\n    //'paintbrush': '<svg viewBox=\"0 0 576 512\"><path d=\"M278 219.5L356.5 298 524.7 73.6c4.8-6.4 4.1-15.3-1.5-20.9s-14.5-6.3-20.9-1.5L278 219.5zM199.1 321.6c-4.9-1-9.9-1.6-15.1-1.6c-39.8 0-72 32.2-72 72c0 3.8 .3 7.5 .8 11.1c3.3 21.4-2.2 43.1-13.8 60l-.7 .9 85.6 0c39.8 0 72-32.2 72-72c0-5.2-.5-10.2-1.6-15.1l-55.4-55.4zM384 341.3c-19.1 25.5-48.6 41.1-80.3 42.6c.2 2.7 .3 5.4 .3 8.1c0 66.3-53.7 120-120 120L32 512c-17.7 0-32-14.3-32-32s14.3-32 32-32l6 0c18.1 0 30.1-19.8 27.4-37.6c-.9-6-1.4-12.1-1.4-18.4c0-66.3 53.7-120 120-120c2.7 0 5.4 .1 8.1 .3c1.5-31.7 17-61.1 42.5-80.3L473.5 12.8C499-6.3 534.6-3.8 557.2 18.7s25.1 58.2 6 83.7L384 341.3z\"/></svg>',\r\n    'font': '<svg viewBox=\"0 0 448 512\"><path d=\"M246.2 46.9C242.5 37.9 233.8 32 224 32s-18.5 5.9-22.2 14.9L44.6 432H24c-13.3 0-24 10.7-24 24s10.7 24 24 24H136c13.3 0 24-10.7 24-24s-10.7-24-24-24H96.5l32.7-80H318.9l32.7 80H312c-13.3 0-24 10.7-24 24s10.7 24 24 24H424c13.3 0 24-10.7 24-24s-10.7-24-24-24H403.4L246.2 46.9zM299.3 304H148.7L224 119.5 299.3 304z\"/></svg>',\r\n    //'frame': 'far fa-window-maximize',\r\n    'frame': '<svg viewBox=\"0 0 512 512\"><path d=\"M160 64v64H480V96c0-17.7-14.3-32-32-32H160zm-32 0H64C46.3 64 32 78.3 32 96v32h96V64zM32 160V416c0 17.7 14.3 32 32 32H448c17.7 0 32-14.3 32-32V160H144 32zM0 96C0 60.7 28.7 32 64 32H448c35.3 0 64 28.7 64 64V416c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V96z\"/></svg>',\r\n    //'italic': 'fa fa-italic',\r\n    'italic': '<svg viewBox=\"0 0 384 512\"><path d=\"M128 56c0-13.3 10.7-24 24-24H360c13.3 0 24 10.7 24 24s-10.7 24-24 24H291.3L144.7 432H232c13.3 0 24 10.7 24 24s-10.7 24-24 24H24c-13.3 0-24-10.7-24-24s10.7-24 24-24H92.7L239.3 80H152c-13.3 0-24-10.7-24-24z\"/></svg>',\r\n    //'link': 'fa fa-link',\r\n    'link': '<svg viewBox=\"0 0 640 512\"><path d=\"M580.3 267.2c56.2-56.2 56.2-147.3 0-203.5C526.8 10.2 440.9 7.3 383.9 57.2l-6.1 5.4c-10 8.7-11 23.9-2.3 33.9s23.9 11 33.9 2.3l6.1-5.4c38-33.2 95.2-31.3 130.9 4.4c37.4 37.4 37.4 98.1 0 135.6L433.1 346.6c-37.4 37.4-98.2 37.4-135.6 0c-35.7-35.7-37.6-92.9-4.4-130.9l4.7-5.4c8.7-10 7.7-25.1-2.3-33.9s-25.1-7.7-33.9 2.3l-4.7 5.4c-49.8 57-46.9 142.9 6.6 196.4c56.2 56.2 147.3 56.2 203.5 0L580.3 267.2zM59.7 244.8C3.5 301 3.5 392.1 59.7 448.2c53.6 53.6 139.5 56.4 196.5 6.5l6.1-5.4c10-8.7 11-23.9 2.3-33.9s-23.9-11-33.9-2.3l-6.1 5.4c-38 33.2-95.2 31.3-130.9-4.4c-37.4-37.4-37.4-98.1 0-135.6L207 165.4c37.4-37.4 98.1-37.4 135.6 0c35.7 35.7 37.6 92.9 4.4 130.9l-5.4 6.1c-8.7 10-7.7 25.1 2.3 33.9s25.1 7.7 33.9-2.3l5.4-6.1c49.9-57 47-142.9-6.5-196.5c-56.2-56.2-147.3-56.2-203.5 0L59.7 244.8z\"/></svg>',\r\n    //'unlink': 'fa fa-unlink',\r\n    'unlink': '<svg viewBox=\"0 0 640 512\"><path d=\"M38.8 5.1C28.4-3.1 13.3-1.2 5.1 9.2S-1.2 34.7 9.2 42.9l592 464c10.4 8.2 25.5 6.3 33.7-4.1s6.3-25.5-4.1-33.7L489.3 358.2l91-91c56.2-56.2 56.2-147.3 0-203.5C526.8 10.2 440.9 7.3 383.9 57.2l-6.1 5.4c-10 8.7-11 23.9-2.3 33.9s23.9 11 33.9 2.3l6.1-5.4c38-33.2 95.2-31.3 130.9 4.4c37.4 37.4 37.4 98.1 0 135.6l-95.1 95.1-45.5-35.7c24.2-53.3 14.1-117.9-29.3-161.3c-52.1-52.1-134.4-55.9-190.8-11.2L38.8 5.1zm186.3 146c36.9-22.3 85.6-17.6 117.4 14.3c26 26 34 63.3 23.7 96.4L225.1 151.1zM352.6 373.8c-20.2-2.7-39.7-11.7-55.2-27.3c-9.8-9.8-17-21.2-21.7-33.3l-54.2-42.7c-2.2 39.6 11.9 79.9 41.9 109.9c38.8 38.8 94.2 50.8 143.4 36l-54.2-42.7zm-236-186L59.7 244.8C3.5 301 3.5 392.1 59.7 448.2c53.6 53.6 139.5 56.4 196.5 6.5l6.1-5.4c10-8.7 11-23.9 2.3-33.9s-23.9-11-33.9-2.3l-6.1 5.4c-38 33.2-95.2 31.3-130.9-4.4c-37.4-37.4-37.4-98.1 0-135.6l60.9-60.9-38-29.9z\"/></svg>',\r\n    //'magic': 'fa fa-magic',\r\n    'magic': '<svg viewBox=\"0 0 576 512\"><path d=\"M234.7 42.7L197 56.8c-3 1.1-5 4-5 7.2s2 6.1 5 7.2l37.7 14.1L248.8 123c1.1 3 4 5 7.2 5s6.1-2 7.2-5l14.1-37.7L315 71.2c3-1.1 5-4 5-7.2s-2-6.1-5-7.2L277.3 42.7 263.2 5c-1.1-3-4-5-7.2-5s-6.1 2-7.2 5L234.7 42.7zM461.4 48L496 82.6 386.2 192.3l-34.6-34.6L461.4 48zM80 429.4L317.7 191.7l34.6 34.6L114.6 464 80 429.4zM427.4 14.1L46.1 395.4c-18.7 18.7-18.7 49.1 0 67.9l34.6 34.6c18.7 18.7 49.1 18.7 67.9 0L529.9 116.5c18.7-18.7 18.7-49.1 0-67.9L495.3 14.1c-18.7-18.7-49.1-18.7-67.9 0zM7.5 117.2C3 118.9 0 123.2 0 128s3 9.1 7.5 10.8L64 160l21.2 56.5c1.7 4.5 6 7.5 10.8 7.5s9.1-3 10.8-7.5L128 160l56.5-21.2c4.5-1.7 7.5-6 7.5-10.8s-3-9.1-7.5-10.8L128 96 106.8 39.5C105.1 35 100.8 32 96 32s-9.1 3-10.8 7.5L64 96 7.5 117.2zm352 256c-4.5 1.7-7.5 6-7.5 10.8s3 9.1 7.5 10.8L416 416l21.2 56.5c1.7 4.5 6 7.5 10.8 7.5s9.1-3 10.8-7.5L480 416l56.5-21.2c4.5-1.7 7.5-6 7.5-10.8s-3-9.1-7.5-10.8L480 352l-21.2-56.5c-1.7-4.5-6-7.5-10.8-7.5s-9.1 3-10.8 7.5L416 352l-56.5 21.2z\"/></svg>',\r\n    'paragraph': '<svg viewBox=\"0 0 448 512\"><path d=\"M32 192c0-88.4 71.6-160 160-160h64H424c13.3 0 24 10.7 24 24s-10.7 24-24 24H384l0 376c0 13.3-10.7 24-24 24s-24-10.7-24-24l0-376H288V456c0 13.3-10.7 24-24 24s-24-10.7-24-24V352H192c-88.4 0-160-71.6-160-160zM240 304V80H192C130.1 80 80 130.1 80 192s50.1 112 112 112h48z\"/></svg>',\r\n    'menuCheck': 'fa fa-check',\r\n    //'menuCheck': '<svg viewBox=\"0 0 448 512\"><path d=\"M441 103c9.4 9.4 9.4 24.6 0 33.9L177 401c-9.4 9.4-24.6 9.4-33.9 0L7 265c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0l119 119L407 103c9.4-9.4 24.6-9.4 33.9 0z\"/></svg>',\r\n    //'minus': 'fa fa-minus',\r\n    'minus': '<svg viewBox=\"0 0 448 512\"><path d=\"M432 256c0 13.3-10.7 24-24 24L40 280c-13.3 0-24-10.7-24-24s10.7-24 24-24l368 0c13.3 0 24 10.7 24 24z\"/></svg>',\r\n    //'orderedlist': 'fa fa-list-ol',\r\n    'orderedlist': '<svg viewBox=\"0 0 512 512\"><path d=\"M24 56c0-13.3 10.7-24 24-24H80c13.3 0 24 10.7 24 24V176h16c13.3 0 24 10.7 24 24s-10.7 24-24 24H40c-13.3 0-24-10.7-24-24s10.7-24 24-24H56V80H48C34.7 80 24 69.3 24 56zM86.7 341.2c-6.5-7.4-18.3-6.9-24 1.2L51.5 357.9c-7.7 10.8-22.7 13.3-33.5 5.6s-13.3-22.7-5.6-33.5l11.1-15.6c23.7-33.2 72.3-35.6 99.2-4.9c21.3 24.4 20.8 60.9-1.1 84.7L86.8 432H120c13.3 0 24 10.7 24 24s-10.7 24-24 24H32c-9.5 0-18.2-5.6-22-14.4s-2.1-18.9 4.3-25.9l72-78c5.3-5.8 5.4-14.6 .3-20.5zM216 72H488c13.3 0 24 10.7 24 24s-10.7 24-24 24H216c-13.3 0-24-10.7-24-24s10.7-24 24-24zm0 160H488c13.3 0 24 10.7 24 24s-10.7 24-24 24H216c-13.3 0-24-10.7-24-24s10.7-24 24-24zm0 160H488c13.3 0 24 10.7 24 24s-10.7 24-24 24H216c-13.3 0-24-10.7-24-24s10.7-24 24-24z\"/></svg>',\r\n    //'pencil': 'fa fa-pencil',\r\n    'pencil': '<svg viewBox=\"0 0 512 512\"><path d=\"M36.4 360.9L13.4 439 1 481.2C-1.5 489.7 .8 498.8 7 505s15.3 8.5 23.7 6.1L73 498.6l78.1-23c10.4-3 20.1-8 28.6-14.5l.3 .2 .5-.8c1.4-1.1 2.7-2.2 4-3.3c1.4-1.2 2.7-2.5 4-3.8L492.7 149.3c21.9-21.9 24.6-55.6 8.2-80.5c-2.3-3.5-5.1-6.9-8.2-10L453.3 19.3c-25-25-65.5-25-90.5 0L58.6 323.5c-2.5 2.5-4.9 5.2-7.1 8l-.8 .5 .2 .3c-6.5 8.5-11.4 18.2-14.5 28.6zM383 191L197.4 376.6l-49.6-12.4-12.4-49.6L321 129 383 191zM97 358.9l7.7 31c2.1 8.6 8.9 15.3 17.5 17.5l31 7.7-7.4 11.2c-2.6 1.4-5.3 2.6-8.1 3.4l-23.4 6.9L59.4 452.6l16.1-54.8 6.9-23.4c.8-2.8 2-5.6 3.4-8.1L97 358.9zM315.3 218.7c6.2-6.2 6.2-16.4 0-22.6s-16.4-6.2-22.6 0l-96 96c-6.2 6.2-6.2 16.4 0 22.6s16.4 6.2 22.6 0l96-96z\"/></svg>',\r\n    //'picture': 'far fa-image',\r\n    'picture': '<svg viewBox=\"0 0 512 512\"><path d=\"M448 80c8.8 0 16 7.2 16 16V415.8l-5-6.5-136-176c-4.5-5.9-11.6-9.3-19-9.3s-14.4 3.4-19 9.3L202 340.7l-30.5-42.7C167 291.7 159.8 288 152 288s-15 3.7-19.5 10.1l-80 112L48 416.3l0-.3V96c0-8.8 7.2-16 16-16H448zM64 32C28.7 32 0 60.7 0 96V416c0 35.3 28.7 64 64 64H448c35.3 0 64-28.7 64-64V96c0-35.3-28.7-64-64-64H64zm80 192a48 48 0 1 0 0-96 48 48 0 1 0 0 96z\"/></svg>',\r\n    //'question': 'fa fa-question',\r\n    'question': '<svg viewBox=\"0 0 320 512\"><path d=\"M64 160c0-44.2 35.8-80 80-80h32c44.2 0 80 35.8 80 80v4.6c0 24.1-12 46.6-32.1 59.9l-52.3 34.9C149.4 274.2 136 299.2 136 326v2c0 13.3 10.7 24 24 24s24-10.7 24-24v-2c0-10.7 5.3-20.7 14.2-26.6l52.3-34.9c33.4-22.3 53.4-59.7 53.4-99.8V160c0-70.7-57.3-128-128-128H144C73.3 32 16 89.3 16 160c0 13.3 10.7 24 24 24s24-10.7 24-24zm96 320a32 32 0 1 0 0-64 32 32 0 1 0 0 64z\"/></svg>',\r\n    //'redo': 'fa fa-redo',\r\n    'redo': '<svg viewBox=\"0 0 512 512\"><path d=\"M472 224c13.3 0 24-10.7 24-24V56c0-13.3-10.7-24-24-24s-24 10.7-24 24v80.1l-20-23.5C387 63.4 325.1 32 256 32C132.3 32 32 132.3 32 256s100.3 224 224 224c50.4 0 97-16.7 134.4-44.8c10.6-8 12.7-23 4.8-33.6s-23-12.7-33.6-4.8C332.2 418.9 295.7 432 256 432c-97.2 0-176-78.8-176-176s78.8-176 176-176c54.3 0 102.9 24.6 135.2 63.4l.1 .2 0 0L418.9 176H328c-13.3 0-24 10.7-24 24s10.7 24 24 24H472z\"/></svg>',\r\n    //'square': 'far fa-square',\r\n    'square': 'far fa-square',\r\n    //'strikethrough': 'fa fa-strikethrough',\r\n    'strikethrough': '<svg viewBox=\"0 0 512 512\"><path d=\"M145.5 138c4-21.5 17.9-37.4 41.7-47.4c24.7-10.4 59.4-13.7 99.9-7.5c12.8 2 52.4 9.5 64.9 12.8c12.8 3.3 25.9-4.3 29.3-17.2s-4.3-25.9-17.2-29.3c-14.7-3.8-56.1-11.7-69.7-13.8c-46.2-7.1-90.4-4.1-125.7 10.7c-36.1 15.1-63.3 43.1-70.5 83.9c-.1 .4-.1 .9-.2 1.3c-2.8 23.4 .5 44.2 9.8 62.2c9.2 17.8 23.2 31.2 38.8 41.5c2.4 1.6 5 3.2 7.5 4.7H24c-13.3 0-24 10.7-24 24s10.7 24 24 24H488c13.3 0 24-10.7 24-24s-10.7-24-24-24H295.8c-9.9-3.1-19.7-6-29.2-8.8l-.3-.1c-37.7-11.1-70.5-20.7-93.3-35.8c-10.9-7.2-18.2-14.9-22.6-23.5c-4.2-8.2-6.6-18.9-4.9-33.8zM364 337.1c3.7 8.6 5.5 20.1 2.6 36.3c-3.8 21.8-17.8 37.9-41.8 48c-24.7 10.4-59.4 13.7-99.8 7.5c-20.1-3.2-54.3-14.6-81.2-23.6l0 0 0 0c-5.9-2-11.4-3.8-16.3-5.4c-12.6-4.1-26.1 2.8-30.3 15.4s2.8 26.2 15.4 30.3c4 1.3 8.8 2.9 14 4.7c26.6 8.9 66.4 22.2 90.9 26.2l.1 0c46.2 7.1 90.4 4.1 125.7-10.7c36.1-15.1 63.3-43.1 70.5-83.9c4-22.9 2.4-43.5-5-61.7H351.6c5.7 5.3 9.7 11 12.3 17.1z\"/></svg>',\r\n    //'subscript': 'fa fa-subscript',\r\n    'subscript': '<svg viewBox=\"0 0 512 512\"><path d=\"M24 64C10.7 64 0 74.7 0 88s10.7 24 24 24H51.2l96 144-96 144H24c-13.3 0-24 10.7-24 24s10.7 24 24 24H64c8 0 15.5-4 20-10.7l92-138 92 138C272.5 444 280 448 288 448h40c13.3 0 24-10.7 24-24s-10.7-24-24-24H300.8l-96-144 96-144H328c13.3 0 24-10.7 24-24s-10.7-24-24-24H288c-8 0-15.5 4-20 10.7l-92 138L84 74.7C79.5 68 72 64 64 64H24zM472 312c0-8-3.9-15.4-10.5-19.9s-15-5.4-22.4-2.4l-40 16c-12.3 4.9-18.3 18.9-13.4 31.2s18.9 18.3 31.2 13.4l7.1-2.8V464H408c-13.3 0-24 10.7-24 24s10.7 24 24 24h40 40c13.3 0 24-10.7 24-24s-10.7-24-24-24H472V312z\"/></svg>',\r\n    //'superscript': 'fa fa-superscript',\r\n    'superscript': '<svg viewBox=\"0 0 512 512\"><path d=\"M472 24c0-8-3.9-15.4-10.5-19.9s-15-5.4-22.4-2.4l-40 16c-12.3 4.9-18.3 18.9-13.4 31.2s18.9 18.3 31.2 13.4l7.1-2.8V176H408c-13.3 0-24 10.7-24 24s10.7 24 24 24h40 40c13.3 0 24-10.7 24-24s-10.7-24-24-24H472V24zM24 64C10.7 64 0 74.7 0 88s10.7 24 24 24H51.2l96 144-96 144H24c-13.3 0-24 10.7-24 24s10.7 24 24 24H64c8 0 15.5-4 20-10.7l92-138 92 138C272.5 444 280 448 288 448h40c13.3 0 24-10.7 24-24s-10.7-24-24-24H300.8l-96-144 96-144H328c13.3 0 24-10.7 24-24s-10.7-24-24-24H288c-8 0-15.5 4-20 10.7l-92 138L84 74.7C79.5 68 72 64 64 64H24z\"/></svg>',\r\n    //'table': 'fa fa-table',\r\n    'table': '<svg viewBox=\"0 0 512 512\"><path d=\"M48 264V160H232V264H48zm0 48H232V432H64c-8.8 0-16-7.2-16-16V312zM280 432V312H464V416c0 8.8-7.2 16-16 16H280zM464 264H280V160H464V264zM64 32C28.7 32 0 60.7 0 96V416c0 35.3 28.7 64 64 64H448c35.3 0 64-28.7 64-64V96c0-35.3-28.7-64-64-64H64z\"/></svg>',\r\n    //'textHeight': 'fa fa-text-height',\r\n    'textHeight': '<svg viewBox=\"0 0 576 512\"><path d=\"M48 128V80h88l0 352H88c-13.3 0-24 10.7-24 24s10.7 24 24 24H232c13.3 0 24-10.7 24-24s-10.7-24-24-24H184l0-352h88v48c0 13.3 10.7 24 24 24s24-10.7 24-24V72c0-22.1-17.9-40-40-40H40C17.9 32 0 49.9 0 72v56c0 13.3 10.7 24 24 24s24-10.7 24-24zM497 39c-9.4-9.4-24.6-9.4-33.9 0l-64 64c-9.4 9.4-9.4 24.6 0 33.9s24.6 9.4 33.9 0l23-23V398.1l-23-23c-9.4-9.4-24.6-9.4-33.9 0s-9.4 24.6 0 33.9l64 64c9.4 9.4 24.6 9.4 33.9 0l64-64c9.4-9.4 9.4-24.6 0-33.9s-24.6-9.4-33.9 0l-23 23V113.9l23 23c9.4 9.4 24.6 9.4 33.9 0s9.4-24.6 0-33.9L497 39z\"/></svg>',\r\n    //'trash': 'far fa-trash-can',\r\n    'trash': '<svg viewBox=\"0 0 448 512\"><path d=\"M177.1 48h93.7c2.7 0 5.2 1.3 6.7 3.6l19 28.4h-145l19-28.4c1.5-2.2 4-3.6 6.7-3.6zM354.2 80L317.5 24.9C307.1 9.4 289.6 0 270.9 0H177.1c-18.7 0-36.2 9.4-46.6 24.9L93.8 80H80.1 32 24C10.7 80 0 90.7 0 104s10.7 24 24 24H35.6L59.6 452.7c2.5 33.4 30.3 59.3 63.8 59.3H324.6c33.5 0 61.3-25.9 63.8-59.3L412.4 128H424c13.3 0 24-10.7 24-24s-10.7-24-24-24h-8H367.9 354.2zm10.1 48L340.5 449.2c-.6 8.4-7.6 14.8-16 14.8H123.4c-8.4 0-15.3-6.5-16-14.8L83.7 128H364.3z\"/></svg>',\r\n    //'underline': 'fa fa-underline',\r\n    'underline': '<svg viewBox=\"0 0 448 512\"><path d=\"M16 56c0-13.3 10.7-24 24-24h96c13.3 0 24 10.7 24 24s-10.7 24-24 24H112V224c0 61.9 50.1 112 112 112s112-50.1 112-112V80H312c-13.3 0-24-10.7-24-24s10.7-24 24-24h96c13.3 0 24 10.7 24 24s-10.7 24-24 24H384V224c0 88.4-71.6 160-160 160s-160-71.6-160-160V80H40C26.7 80 16 69.3 16 56zM0 456c0-13.3 10.7-24 24-24H424c13.3 0 24 10.7 24 24s-10.7 24-24 24H24c-13.3 0-24-10.7-24-24z\"/></svg>',\r\n    //'undo': 'fa fa-undo',\r\n    'undo': '<svg viewBox=\"0 0 512 512\"><path d=\"M40 224c-13.3 0-24-10.7-24-24V56c0-13.3 10.7-24 24-24s24 10.7 24 24v80.1l20-23.5C125 63.4 186.9 32 256 32c123.7 0 224 100.3 224 224s-100.3 224-224 224c-50.4 0-97-16.7-134.4-44.8c-10.6-8-12.7-23-4.8-33.6s23-12.7 33.6-4.8C179.8 418.9 216.3 432 256 432c97.2 0 176-78.8 176-176s-78.8-176-176-176c-54.3 0-102.9 24.6-135.2 63.4l-.1 .2 0 0L93.1 176H184c13.3 0 24 10.7 24 24s-10.7 24-24 24H40z\"/></svg>',\r\n    //'rollback': 'fa fa-rotate-left',\r\n    'rollback': rollback,\r\n    //'unorderedlist': 'fa fa-list-ul',\r\n    'unorderedlist': '<svg viewBox=\"0 0 512 512\"><path d=\"M64 64a32 32 0 1 0 0 64 32 32 0 1 0 0-64zm120 8c-13.3 0-24 10.7-24 24s10.7 24 24 24H488c13.3 0 24-10.7 24-24s-10.7-24-24-24H184zm0 160c-13.3 0-24 10.7-24 24s10.7 24 24 24H488c13.3 0 24-10.7 24-24s-10.7-24-24-24H184zm0 160c-13.3 0-24 10.7-24 24s10.7 24 24 24H488c13.3 0 24-10.7 24-24s-10.7-24-24-24H184zM96 256a32 32 0 1 0 -64 0 32 32 0 1 0 64 0zM64 384a32 32 0 1 0 0 64 32 32 0 1 0 0-64z\"/></svg>',\r\n    //'video': 'fa fa-video',\r\n    'video': '<svg viewBox=\"0 0 512 512\"><path d=\"M48 416c0 8.8 7.2 16 16 16H448c8.8 0 16-7.2 16-16V208H48V416zM336 160h64l64-64c0-8.8-7.2-16-16-16H416l-80 80zm-96 0l80-80H256l-80 80h64zM80 160l80-80H96L48 128v32H80zM512 96v64 24 24V416c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V208 184 160 96C0 60.7 28.7 32 64 32H448c35.3 0 64 28.7 64 64zM216.5 241.9c5.2-2.8 11.5-2.5 16.4 .8l96 64c4.4 3 7.1 8 7.1 13.3s-2.7 10.3-7.1 13.3l-96 64c-4.9 3.3-11.2 3.6-16.4 .8s-8.5-8.2-8.5-14.1V256c0-5.9 3.2-11.3 8.5-14.1z\"/></svg>',\r\n    'css': '<svg viewBox=\"0 0 512 512\"><path d=\"M480 32l-64 368-223.3 80L0 400l19.6-94.8h82l-8 40.6L210 390.2l134.1-44.4 18.8-97.1H29.5l16-82h333.7l10.5-52.7H56.3l16.3-82H480z\"/></svg>',\r\n    'ellipsis': '<svg viewBox=\"0 0 448 512\"><path d=\"M432 256a48 48 0 1 1 -96 0 48 48 0 1 1 96 0zm-160 0a48 48 0 1 1 -96 0 48 48 0 1 1 96 0zM64 304a48 48 0 1 1 0-96 48 48 0 1 1 0 96z\"/></svg>',\r\n    'spellCheck': '<svg viewBox=\"0 0 576 512\"><path d=\"M134.1 14.6C130.4 5.8 121.6 0 112 0s-18.3 5.8-22.1 14.6l-88 208c-5.2 12.2 .5 26.3 12.8 31.5s26.3-.5 31.5-12.8L56.8 216H167.2l10.7 25.4c5.2 12.2 19.2 17.9 31.5 12.8s17.9-19.2 12.8-31.5l-88-208zM146.9 168H77.1L112 85.6 146.9 168zM256 24V128 232c0 13.3 10.7 24 24 24h92c42 0 76-34 76-76c0-24.6-11.7-46.4-29.8-60.3C426.9 107.3 432 92.2 432 76c0-42-34-76-76-76H280c-13.3 0-24 10.7-24 24zm100 80H304V48h52c15.5 0 28 12.5 28 28s-12.5 28-28 28zm-52 48h52 16c15.5 0 28 12.5 28 28s-12.5 28-28 28H304V152zM568.6 313.3c9.6-9.2 9.9-24.4 .7-33.9s-24.4-9.9-33.9-.7l-183 175.7L265 367c-9.4-9.4-24.6-9.4-33.9 0s-9.4 24.6 0 33.9L335 505c9.2 9.2 24.2 9.4 33.6 .3l200-192z\"/></svg>',\r\n    'gear': '<svg viewBox=\"0 0 512 512\"><path d=\"M256 0c17 0 33.6 1.7 49.8 4.8c7.9 1.5 21.8 6.1 29.4 20.1c2 3.7 3.6 7.6 4.6 11.8l9.3 38.5C350.5 81 360.3 86.7 366 85l38-11.2c4-1.2 8.1-1.8 12.2-1.9c16.1-.5 27 9.4 32.3 15.4c22.1 25.1 39.1 54.6 49.9 86.3c2.6 7.6 5.6 21.8-2.7 35.4c-2.2 3.6-4.9 7-8 10L459 246.3c-4.2 4-4.2 15.5 0 19.5l28.7 27.3c3.1 3 5.8 6.4 8 10c8.2 13.6 5.2 27.8 2.7 35.4c-10.8 31.7-27.8 61.1-49.9 86.3c-5.3 6-16.3 15.9-32.3 15.4c-4.1-.1-8.2-.8-12.2-1.9L366 427c-5.7-1.7-15.5 4-16.9 9.8l-9.3 38.5c-1 4.2-2.6 8.2-4.6 11.8c-7.7 14-21.6 18.5-29.4 20.1C289.6 510.3 273 512 256 512s-33.6-1.7-49.8-4.8c-7.9-1.5-21.8-6.1-29.4-20.1c-2-3.7-3.6-7.6-4.6-11.8l-9.3-38.5c-1.4-5.8-11.2-11.5-16.9-9.8l-38 11.2c-4 1.2-8.1 1.8-12.2 1.9c-16.1 .5-27-9.4-32.3-15.4c-22-25.1-39.1-54.6-49.9-86.3c-2.6-7.6-5.6-21.8 2.7-35.4c2.2-3.6 4.9-7 8-10L53 265.7c4.2-4 4.2-15.5 0-19.5L24.2 218.9c-3.1-3-5.8-6.4-8-10C8 195.3 11 181.1 13.6 173.6c10.8-31.7 27.8-61.1 49.9-86.3c5.3-6 16.3-15.9 32.3-15.4c4.1 .1 8.2 .8 12.2 1.9L146 85c5.7 1.7 15.5-4 16.9-9.8l9.3-38.5c1-4.2 2.6-8.2 4.6-11.8c7.7-14 21.6-18.5 29.4-20.1C222.4 1.7 239 0 256 0zM218.1 51.4l-8.5 35.1c-7.8 32.3-45.3 53.9-77.2 44.6L97.9 120.9c-16.5 19.3-29.5 41.7-38 65.7l26.2 24.9c24 22.8 24 66.2 0 89L59.9 325.4c8.5 24 21.5 46.4 38 65.7l34.6-10.2c31.8-9.4 69.4 12.3 77.2 44.6l8.5 35.1c24.6 4.5 51.3 4.5 75.9 0l8.5-35.1c7.8-32.3 45.3-53.9 77.2-44.6l34.6 10.2c16.5-19.3 29.5-41.7 38-65.7l-26.2-24.9c-24-22.8-24-66.2 0-89l26.2-24.9c-8.5-24-21.5-46.4-38-65.7l-34.6 10.2c-31.8 9.4-69.4-12.3-77.2-44.6l-8.5-35.1c-24.6-4.5-51.3-4.5-75.9 0zM208 256a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 96a96 96 0 1 1 0-192 96 96 0 1 1 0 192z\"/></svg>',\r\n    'fill': '<svg  viewBox=\"0 0 576 512\"><path d=\"M39 7C48.4-2.3 63.6-2.3 73 7l89.4 89.4 58.7-58.7c28.1-28.1 73.7-28.1 101.8 0L474.3 189.1c28.1 28.1 28.1 73.7 0 101.8L283.9 481.4c-37.5 37.5-98.3 37.5-135.8 0L30.6 363.9c-37.5-37.5-37.5-98.3 0-135.8l97.8-97.8L39 41C29.7 31.6 29.7 16.4 39 7zM231 233l-68.7-68.7L64.6 262.1c-7.3 7.3-11.8 16.4-13.4 25.9H409.4l31-31c9.4-9.4 9.4-24.6 0-33.9L289 71.6c-9.4-9.4-24.6-9.4-33.9 0l-58.7 58.7L265 199c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0zM512 512c-35.3 0-64-28.7-64-64c0-25.2 32.6-79.6 51.2-108.7c6-9.4 19.5-9.4 25.5 0C543.4 368.4 576 422.8 576 448c0 35.3-28.7 64-64 64z\"/></svg>',\r\n    'face': '<svg viewBox=\"0 0 512 512\"><path d=\"M464 256A208 208 0 1 0 48 256a208 208 0 1 0 416 0zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm177.6 62.1C192.8 334.5 218.8 352 256 352s63.2-17.5 78.4-33.9c9-9.7 24.2-10.4 33.9-1.4s10.4 24.2 1.4 33.9c-22 23.8-60 49.4-113.6 49.4s-91.7-25.5-113.6-49.4c-9-9.7-8.4-24.9 1.4-33.9s24.9-8.4 33.9 1.4zM144.4 208a32 32 0 1 1 64 0 32 32 0 1 1 -64 0zm192-32a32 32 0 1 1 0 64 32 32 0 1 1 0-64z\"/></svg>',\r\n    'omega': '<svg viewBox=\"0 0 448 512\"><path d=\"M224 80C126.8 80 48 158.8 48 256c0 63.7 33.8 119.5 84.6 150.4c11.4 7 19.4 19.6 19.4 34.2c0 21.8-17.6 39.4-39.4 39.4H24c-13.3 0-24-10.7-24-24s10.7-24 24-24H85.4C33.4 391 0 327.4 0 256C0 132.3 100.3 32 224 32s224 100.3 224 224c0 71.4-33.4 135-85.4 176H424c13.3 0 24 10.7 24 24s-10.7 24-24 24H335.4c-21.8 0-39.4-17.6-39.4-39.4c0-14.6 8-27.2 19.4-34.2C366.2 375.5 400 319.7 400 256c0-97.2-78.8-176-176-176z\"/></svg>',\r\n    'layout': '<svg  viewBox=\"0 0 448 512\"><path d=\"M48 80V240h96V80H48zM0 80C0 53.5 21.5 32 48 32h96c26.5 0 48 21.5 48 48V240c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80zM304 272V432h96V272H304zm-48 0c0-26.5 21.5-48 48-48h96c26.5 0 48 21.5 48 48V432c0 26.5-21.5 48-48 48H304c-26.5 0-48-21.5-48-48V272zM144 368H48v64h96V368zM48 320h96c26.5 0 48 21.5 48 48v64c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V368c0-26.5 21.5-48 48-48zM304 80v64h96V80H304zm-48 0c0-26.5 21.5-48 48-48h96c26.5 0 48 21.5 48 48v64c0 26.5-21.5 48-48 48H304c-26.5 0-48-21.5-48-48V80z\"/></svg>',\r\n}","import func from './func';\r\nimport lists from './lists';\r\nimport dom from './dom';\r\n\r\nconst NBSP_CHAR = String.fromCharCode(160);\r\nconst ZERO_WIDTH_NBSP_CHAR = '\\uFEFF';\r\nconst SOFT_HYPHEN = '\\u00AD';\r\n\r\nconst CharTypes = {\r\n  UNKNOWN: -1,\r\n  SPACE: 0,\r\n  PUNC: 1,\r\n  CHAR: 2 \r\n};\r\n\r\n// Private\r\n/**\r\n * Padding blankHTML if node is empty (for cursor position)\r\n */\r\nconst paddingBlankHTML = (node) => {\r\n  if (!dom.isVoid(node) && !dom.nodeLength(node)) {\r\n    node.innerHTML = dom.blank;\r\n  }\r\n}\r\n\r\n/**\r\n * Checks whether boundary point is left edge or not.\r\n * \r\n  * @param {BoundaryPoint} point\r\n */\r\nconst isLeftEdgePoint = (point) => point.offset === 0;\r\n\r\n/**\r\n * Checks whether boundary point is right edge or not.\r\n *\r\n * @param {BoundaryPoint} point\r\n */\r\n//const isRightEdgePoint = (point) => point.offset === dom.nodeLength(point.node);\r\nconst isRightEdgePoint = (point) => { \r\n  return point.offset === dom.nodeLength(point.node); \r\n};\r\n\r\n/**\r\n * Checks whether boundary point is edge or not.\r\n *\r\n * @param {BoundaryPoint} point\r\n */\r\nconst isEdgePoint = (point) => isLeftEdgePoint(point) || isRightEdgePoint(point);\r\n\r\n/**\r\n * Checks whether point is left edge of parent or not.\r\n * @param {BoundaryPoint} point\r\n * @param {Node} parent\r\n * @return {Boolean}\r\n */\r\nconst isLeftEdgePointOf = (point, parent) =>\r\n  isLeftEdgePoint(point) && dom.isLeftEdgeOf(point.node, parent);\r\n\r\n/**\r\n * Checks whether point is right edge of parent or not.\r\n * @param {BoundaryPoint} point\r\n * @param {Node} parent\r\n * @return {Boolean}\r\n */\r\nconst isRightEdgePointOf = (point, parent) => {\r\n  return isRightEdgePoint(point) && dom.isRightEdgeOf(point.node, parent);\r\n}\r\n\r\n/**\r\n * Gets previous boundary point of given node.\r\n *\r\n * @param {Node} node\r\n * @return {BoundaryPoint}\r\n */\r\nconst pointBeforeNode = (node) => {\r\n  return { node: node.parentNode, offset: dom.position(node) };\r\n}\r\n\r\n/**\r\n * Gets next boundary point of given node.\r\n *\r\n * @param {Node} node\r\n * @return {BoundaryPoint}\r\n */\r\nconst pointAfterNode = (node) => {\r\n  return { node: node.parentNode, offset: dom.position(node) + 1 };\r\n}\r\n\r\n/**\r\n * Gets previous boundary point.\r\n *\r\n * @param {BoundaryPoint} point\r\n * @param {Boolean} skipInnerOffset\r\n * @return {BoundaryPoint}\r\n */\r\nconst prevPoint = (point, skipInnerOffset) => {\r\n  let node, offset;\r\n\r\n  if (point.offset === 0) {\r\n    if (dom.isEditableRoot(point.node)) {\r\n      return null;\r\n    }\r\n    node = point.node.parentNode;\r\n    offset = dom.position(point.node);\r\n  } else if (dom.hasChildren(point.node)) {\r\n    node = point.node.childNodes[point.offset - 1];\r\n    offset = dom.nodeLength(node);\r\n  } else {\r\n    node = point.node;\r\n    offset = skipInnerOffset ? 0 : point.offset - 1;\r\n  }\r\n\r\n  return { node: node, offset: offset };\r\n}\r\n\r\n/**\r\n * Gets next boundary point.\r\n *\r\n * @param {BoundaryPoint} point\r\n * @param {Boolean} skipInnerOffset\r\n * @return {BoundaryPoint}\r\n */\r\nconst nextPoint = (point, skipInnerOffset) => {\r\n  let node, offset;\r\n  if (point.offset === dom.nodeLength(point.node)) {\r\n    if (dom.isEditableRoot(point.node)) {\r\n      return null;\r\n    }\r\n\r\n    let nextTextNode = dom.getNextTextNode(point.node);\r\n    if (nextTextNode) {\r\n      node = nextTextNode;\r\n      offset = 0;\r\n    } else {\r\n      node = point.node.parentNode;\r\n      offset = dom.position(point.node) + 1;\r\n    }\r\n  } else if (dom.hasChildren(point.node)) {\r\n    node = point.node.childNodes[point.offset];\r\n    offset = 0;\r\n  } else {\r\n    node = point.node;\r\n    offset = skipInnerOffset ? dom.nodeLength(point.node) : point.offset + 1;\r\n  }\r\n\r\n  return { node: node, offset: offset };\r\n}\r\n\r\n/**\r\n * Finds next boundary point with empty node\r\n *\r\n * @param {BoundaryPoint} point\r\n * @param {Boolean} skipInnerOffset\r\n * @return {BoundaryPoint}\r\n */\r\nconst nextPointWithEmptyNode = (point, skipInnerOffset) => {\r\n  let node, offset = 0;\r\n\r\n  if (point.offset === dom.nodeLength(point.node)) {\r\n    if (dom.isEditableRoot(point.node)) {\r\n      return null;\r\n    }\r\n\r\n    node = point.node.parentNode;\r\n    offset = dom.position(point.node) + 1;\r\n\r\n    // if parent node is editable,  return current node's sibling node.\r\n    if (dom.isEditableRoot(node)) {\r\n      node = point.node.nextSibling;\r\n      offset = 0;\r\n    }\r\n  } else if (dom.hasChildren(point.node)) {\r\n    node = point.node.childNodes[point.offset];\r\n    offset = 0;\r\n  } else {\r\n    node = point.node;\r\n    offset = skipInnerOffset ? dom.nodeLength(point.node) : point.offset + 1;\r\n  }\r\n\r\n  return { node: node, offset: offset };\r\n}\r\n\r\n// Private\r\nconst pointUntil = (point, pred, next) => {\r\n  while (point) {\r\n    if (pred(point)) return point;\r\n    point = next ? nextPoint(point) : prevPoint(point);\r\n  }\r\n  return null;\r\n}\r\n\r\nconst pointWhile = (point, pred, next) => {\r\n  let prev = point;\r\n  while (point) {\r\n    if (!pred(point)) return prev;\r\n    prev = point;\r\n    point = next ? nextPoint(point) : prevPoint(point);\r\n  }\r\n  return null;\r\n}\r\n\r\nconst prevPointUntil = (point, pred) => pointUntil(point, pred, false);\r\nconst nextPointUntil = (point, pred) => pointUntil(point, pred, true);\r\nconst prevPointWhile = (point, pred) => pointWhile(point, pred, false);\r\nconst nextPointWhile = (point, pred) => pointWhile(point, pred, true);\r\n\r\n/**\r\n * @method walkPoint - Preorder / depth first traversal of the DOM\r\n *\r\n * @param {BoundaryPoint} startPoint\r\n * @param {BoundaryPoint} endPoint\r\n * @param {Function} handler\r\n * @param {Boolean} skipInnerOffset\r\n */\r\nconst walkPoint = (startPoint, endPoint, handler, skipInnerOffset) => {\r\n  let point = startPoint;\r\n\r\n  while (point && point.node) {\r\n    handler(point);\r\n\r\n    if (equals(point, endPoint)) {\r\n      break;\r\n    }\r\n\r\n    const skipOffset = skipInnerOffset &&\r\n      startPoint.node !== point.node &&\r\n      endPoint.node !== point.node;\r\n    point = nextPointWithEmptyNode(point, skipOffset);\r\n  }\r\n}\r\n\r\nconst comparePoints = (point1, point2) => {\r\n  // See http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-Comparing\r\n  const nodeA = point1.node, offsetA = point1.offset, nodeB = point2.node, offsetB = point2.offset;\r\n  let nodeC, root, childA, childB, n;\r\n  if (nodeA == nodeB) {\r\n    // Case 1: nodes are the same\r\n    return offsetA === offsetB ? 0 : (offsetA < offsetB) ? -1 : 1;\r\n  } else if ((nodeC = dom.closest(nodeB, nodeA))) {\r\n    // Case 2: node C (container B or an ancestor) is a child node of A\r\n    return offsetA <= dom.position(nodeC) ? -1 : 1;\r\n  } else if ((nodeC = dom.closest(nodeA, nodeB))) {\r\n    // Case 3: node C (container A or an ancestor) is a child node of B\r\n    return dom.position(nodeC) < offsetB ? -1 : 1;\r\n  } else {\r\n    root = getCommonAncestor(nodeA, nodeB);\r\n    if (!root) {\r\n      throw new Error(\"comparePoints error: nodes have no common ancestor\");\r\n    }\r\n\r\n    // Case 4: containers are siblings or descendants of siblings\r\n    childA = (nodeA === root) ? root : dom.closest(nodeA, root);\r\n    childB = (nodeB === root) ? root : dom.closest(nodeB, root);\r\n\r\n    if (childA === childB) {\r\n      // This shouldn't be possible\r\n      throw new Error(\"comparePoints got to case 4 and childA and childB are the same!\");\r\n    } else {\r\n      n = root.firstChild;\r\n      while (n) {\r\n        if (n === childA) {\r\n          return -1;\r\n        } else if (n === childB) {\r\n          return 1;\r\n        }\r\n        n = n.nextSibling;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Split element or #text\r\n *\r\n * @param {BoundaryPoint} point\r\n * @param {Object} [options]\r\n * @param {Boolean} [options.skipPaddingBlankHTML] - default: false\r\n * @param {Boolean} [options.skipEdgePoint] - default: false\r\n * @param {Boolean} [options.discardEmptySplits] - default: false\r\n * @return {Node} Right node of boundary point\r\n */\r\nconst splitNode = (point, options) => {\r\n  let skipPaddingBlankHTML = options && options.skipPaddingBlankHTML;\r\n  const skipEdgePoint = options && options.skipEdgePoint;\r\n  const discardEmptySplits = options && options.discardEmptySplits;\r\n\r\n  if (discardEmptySplits) {\r\n    skipPaddingBlankHTML = true;\r\n  }\r\n\r\n  // Edge case\r\n  if (isEdgePoint(point) && (dom.isText(point.node) || skipEdgePoint)) {\r\n    if (isLeftEdgePoint(point)) {\r\n      return point.node;\r\n    } else if (isRightEdgePoint(point)) {\r\n      return point.node.nextSibling;\r\n    }\r\n  }\r\n\r\n  // split #text\r\n  if (dom.isText(point.node)) {\r\n    //console.log('SplitNode isText', point);\r\n    return point.node.splitText(point.offset);\r\n  } else {\r\n    //console.log('SplitNode NoText', point.node.nodeName);\r\n    const childNode = point.node.childNodes[point.offset];\r\n    let childNodes = dom.nextSiblings(childNode);\r\n    // Remove empty nodes\r\n    //console.log('--- childNodes before', childNodes.length);\r\n    //childNodes = lists.filter(childNodes, func.not(dom.isEmpty));\r\n    //console.log('--- childNodes after', childNodes.length);\r\n\r\n    const clone = dom.insertAfter(point.node, point.node.cloneNode(false));\r\n    dom.appendChildNodes(clone, childNodes);\r\n\r\n    if (!skipPaddingBlankHTML) {\r\n      paddingBlankHTML(point.node);\r\n      paddingBlankHTML(clone);\r\n    }\r\n\r\n    if (discardEmptySplits) {\r\n      if (dom.isEmpty(point.node)) {\r\n        dom.remove(point.node);\r\n      }\r\n      if (dom.isEmpty(clone)) {\r\n        dom.remove(clone);\r\n        return point.node.nextSibling;\r\n      }\r\n    }\r\n\r\n    return clone;\r\n  }\r\n}\r\n\r\n/**\r\n * Split tree by point\r\n *\r\n * @param {Node} root - split root\r\n * @param {BoundaryPoint} point\r\n * @param {Object} [options]\r\n * @param {Boolean} [options.skipPaddingBlankHTML] - default: false\r\n * @param {Boolean} [options.skipEdgePoint] - default: false\r\n * @return {Node} Right node of boundary point\r\n */\r\nconst splitTree = (root, point, options) => {\r\n  // ex) [#text, <span>, <p>]\r\n  const rootPred = dom.matchSelector(root);\r\n  let parents = dom.parents(point.node, rootPred);\r\n  //console.log('splitTree', root.nodeName, point.node.nodeName, parents.length);\r\n\r\n  if (!parents.length) {\r\n    return null;\r\n  } else if (parents.length === 1) {\r\n    return splitNode(point, options);\r\n  }\r\n  // Filter elements with sibling elements\r\n  if (parents.length > 2) {\r\n    let domList = parents.slice(0, parents.length - 1);\r\n    let ifHasNextSibling = domList.find(item => item.nextSibling);\r\n    if (ifHasNextSibling && point.offset != 0 && isRightEdgePoint(point)) {\r\n      let nestSibling = ifHasNextSibling.nextSibling;\r\n      let textNode;\r\n      if (dom.isElement(nestSibling)) {\r\n        textNode = nestSibling.childNodes[0];\r\n        parents = dom.parents(textNode, rootPred);\r\n        point = { node: textNode, offset: 0 };\r\n      }\r\n      else if (dom.isText(nestSibling) && !nestSibling.data.match(/[\\n\\r]/g)) {\r\n        textNode = nestSibling;\r\n        parents = dom.parents(textNode, rootPred);\r\n        point = { node: textNode, offset: 0 };\r\n      }\r\n    }\r\n  }\r\n  return parents.reduce((node, parent) => {\r\n    if (node === point.node) {\r\n      node = splitNode(point, options);\r\n    }\r\n\r\n    return splitNode({\r\n      node: parent,\r\n      offset: node ? dom.position(node) : dom.nodeLength(parent),\r\n    }, options);\r\n  });\r\n}\r\n\r\n/**\r\n * Split point\r\n *\r\n * @param {Point} point\r\n * @param {Boolean} isInline\r\n * @return {Object}\r\n */\r\nconst splitPoint = (point, isInline) => {\r\n  // find splitRoot, container\r\n  //  - inline: splitRoot is a child of paragraph\r\n  //  - block: splitRoot is a child of bodyContainer\r\n  const pred = isInline ? dom.isPara : dom.isBodyContainer;\r\n  const parents = dom.parents(point.node, pred);\r\n  const topAncestor = lists.last(parents) || point.node;\r\n\r\n  let splitRoot, container;\r\n  if (pred(topAncestor)) {\r\n    splitRoot = parents[parents.length - 2];\r\n    container = topAncestor;\r\n  } else {\r\n    splitRoot = topAncestor;\r\n    container = splitRoot.parentNode;\r\n  }\r\n\r\n  // if splitRoot exists, split with splitTree\r\n  let pivot = splitRoot && splitTree(splitRoot, point, {\r\n    skipPaddingBlankHTML: isInline,\r\n    skipEdgePoint: isInline,\r\n  });\r\n\r\n  // if container is point.node, find pivot with point.offset\r\n  if (!pivot && container === point.node) {\r\n    pivot = point.node.childNodes[point.offset];\r\n  }\r\n\r\n  return { rightNode: pivot, container: container };\r\n}\r\n\r\n/**\r\n * Checks whether point1 and point2 are equal.\r\n *\r\n * @param {BoundaryPoint} point1\r\n * @param {BoundaryPoint} point2\r\n * @return {Boolean}\r\n */\r\nconst equals = (point1, point2) =>\r\n  point1.node === point2.node && point1.offset === point2.offset;\r\n\r\n/**\r\n * Checks whether point is visible (can set cursor).\r\n *\r\n * @param {BoundaryPoint} point\r\n * @return {Boolean}\r\n */\r\nconst isVisiblePoint = (point) => {\r\n  if (dom.isText(point.node) || !dom.hasChildren(point.node) || dom.isEmpty(point.node)) {\r\n    return true;\r\n  }\r\n\r\n  const leftNode = point.node.childNodes[point.offset - 1];\r\n  const rightNode = point.node.childNodes[point.offset];\r\n  if ((!leftNode || dom.isVoid(leftNode)) && (!rightNode || dom.isVoid(rightNode)) || dom.isTable(rightNode)) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/**\r\n * Gets the char type at given point.\r\n *\r\n * @param {Point} point\r\n * @return {Number} - -1 = unknown, 0 = space, 1 = interpunctuation, 2 = char\r\n */\r\nconst getCharType = (point) => {\r\n  if (!dom.isText(point.node)) {\r\n    return CharTypes.UNKNOWN;\r\n  }\r\n\r\n  const ch = point.node.nodeValue.charAt(point.offset - 1);\r\n  if (!ch) {\r\n    return CharTypes.UNKNOWN;\r\n  } else if (ch === NBSP_CHAR || ' \\f\\n\\r\\t\\v'.indexOf(ch) !== -1) {\r\n    return CharTypes.SPACE;\r\n  } else if (ch === '_') {\r\n    return CharTypes.CHAR;\r\n  } else if (/^\\p{P}$/u.test(ch)) {\r\n    return CharTypes.PUNC;\r\n  } else {\r\n    return CharTypes.CHAR;\r\n  }\r\n}\r\n\r\n/**\r\n * Returns whether point has character or not.\r\n *\r\n * @param {Point} point\r\n * @return {Boolean}\r\n */\r\nconst isCharPoint = (point) => getCharType(point) == CharTypes.CHAR;\r\n\r\n/**\r\n * Checks whether point has space or not.\r\n *\r\n * @param {Point} point\r\n * @return {Boolean}\r\n */\r\nconst isSpacePoint = (point) => getCharType(point) == CharTypes.SPACE;\r\n\r\nconst isZwsp = (char) => char === ZERO_WIDTH_NBSP_CHAR;\r\n\r\nconst removeZwsp = (s) => s.replace(/\\uFEFF/g, '');\r\n\r\n\r\nexport default {\r\n  /** @property {String} NBSP_CHAR */\r\n  NBSP_CHAR,\r\n  /** @property {String} ZERO_WIDTH_NBSP_CHAR */\r\n  ZERO_WIDTH_NBSP_CHAR,\r\n  SOFT_HYPHEN,\r\n  CharTypes,\r\n  isLeftEdgePoint,\r\n  isRightEdgePoint,\r\n  isEdgePoint,\r\n  isLeftEdgePointOf,\r\n  isRightEdgePointOf,\r\n  isLeftEdgePointOf,\r\n  isRightEdgePointOf,\r\n  prevPoint,\r\n  nextPoint,\r\n  pointBeforeNode,\r\n  pointAfterNode,\r\n  nextPointWithEmptyNode,\r\n  comparePoints,\r\n  equals,\r\n  isVisiblePoint,\r\n  prevPointUntil,\r\n  nextPointUntil,\r\n  prevPointWhile,\r\n  nextPointWhile,\r\n  isCharPoint,\r\n  isSpacePoint,\r\n  walkPoint,\r\n  splitTree,\r\n  splitPoint,\r\n  getCharType,\r\n  isCharPoint,\r\n  isSpacePoint,\r\n  isZwsp,\r\n  removeZwsp\r\n}","import $ from 'jquery';\r\nimport func from './func';\r\nimport lists from './lists';\r\nimport dom from './dom';\r\nimport Point from './Point';\r\nimport Type from './Type';\r\n// import * as NormalizeRange from '../util/NormalizeRange';\r\n// import schema from './schema';\r\n\r\nconst makeIsOn = (selector, root) => {\r\n  const pred = dom.matchSelector(selector);\r\n  return function() {\r\n    const ancestor = dom.closest(this.sc, pred, true, root);\r\n    return !!ancestor && (ancestor === dom.closest(this.ec, pred, true, root));\r\n  };\r\n};\r\n\r\nconst makeCharPredicate = (stopAtPunc) => {\r\n  // -1 = UNKNOWN, 0 = SPACE, 1 = PUNC, 2 = CHAR\r\n  if (stopAtPunc === true) {\r\n    return (pt) => [-1, 0, 1].indexOf(Point.getCharType(pt)) > -1; // Stop at space and punc\r\n  } \r\n  else {\r\n    return (pt) => [-1, 0].indexOf(Point.getCharType(pt)) > -1; // Stop at space only\r\n  }\r\n};\r\n\r\nconst detachRange = (rng) => {\r\n  try { rng.detach(); } catch {}\r\n};\r\n\r\nconst callNative = (rng, action) => {\r\n  let detach = false;\r\n  if (rng.isWrapper) {\r\n    rng = getNativeRange(rng);\r\n    detach = true;\r\n  }\r\n\r\n  const out = action(rng);\r\n\r\n  if (detach) detachRange(rng);\r\n  return out;\r\n};\r\n\r\nconst getNativeRange = (rng) => {\r\n  if (rng.isWrapper) {\r\n    const {sc, so, ec, eo} = rng;\r\n    rng = document.createRange();\r\n    rng.setStart(sc, so);\r\n    rng.setEnd(ec, eo);\r\n  }\r\n  return rng;\r\n};\r\n\r\nconst getWrappedRange = (rng) => {\r\n  return rng.isWrapper ? rng : createFromNativeRange(rng);\r\n};\r\n\r\n/**\r\n * Checks whether the given range is completely within the boundaries of the given node.\r\n */\r\nconst isFullyContainedInNode = (rng, node) => {\r\n  return dom.isChildOf(rng.startContainer, node, true) && (rng.endContainer == rng.startContainer || dom.isChildOf(rng.endContainer, node, true));\r\n}\r\n\r\n// Judge whether range is on editable or not\r\nconst isOnEditable = makeIsOn(dom.isEditableRoot, 'div.note-editing-area');\r\n// Judge whether range is on list node or not\r\nconst  isOnList = makeIsOn(dom.isList);\r\n// Judge whether range is on anchor node or not\r\nconst isOnAnchor = makeIsOn(dom.isAnchor);\r\n// Judge whether range is on cell node or not\r\nconst isOnCell = makeIsOn(dom.isCell);\r\n// Judge whether range is on data node or not\r\nconst isOnData = makeIsOn(dom.isData);\r\n\r\n\r\n/**\r\n * Create a `WrappedRange` object from a native `Range` object.\r\n *\r\n * @param {Range} nativeRange - The native range\r\n * @return {WrappedRange}\r\n */\r\nconst createFromNativeRange = (nativeRange) => {\r\n  const r = nativeRange;\r\n  return new WrappedRange(r.startContainer, r.startOffset, r.endContainer, r.endOffset);\r\n};\r\n\r\n/**\r\n * Create a `WrappedRange` object from boundary points.\r\n *\r\n * @param {Node} [sc] - Start container\r\n * @param {Number} [so] - Start offset\r\n * @param {Node} [ec] - End container\r\n * @param {Number} [eo] - End offset\r\n * @return {WrappedRange}\r\n */\r\nfunction create(sc, so, ec, eo) {\r\n  const len = arguments.length;\r\n  if (len === 2 || len === 4) {\r\n\r\n    if (len === 2) {\r\n      // Collapsed\r\n      ec = sc;\r\n      eo = so;\r\n    }\r\n\r\n    return new WrappedRange(sc, so, ec, eo);\r\n  }\r\n\r\n  let rng = createFromSelection();\r\n\r\n  if (!rng && len === 1) {\r\n    let bodyElement = arguments[0];\r\n    if (dom.isEditableRoot(sc)) {\r\n      bodyElement = bodyElement.lastChild;\r\n    }\r\n    \r\n    return createFromBodyElement(bodyElement, dom.emptyPara === arguments[0].innerHTML);\r\n  }\r\n\r\n  return rng;\r\n};\r\n\r\n/**\r\n * Create a `WrappedRange` object from start end end point objects.\r\n *\r\n * @return {WrappedRange}\r\n */\r\nconst createFromPoints = (startPoint, endPoint) => {\r\n  if (!endPoint) {\r\n    return new WrappedRange(startPoint.node, startPoint.offset);\r\n  } else {\r\n    return new WrappedRange(startPoint.node, startPoint.offset, endPoint.node, endPoint.offset);\r\n  }\r\n};\r\n\r\n/**\r\n * Create a `WrappedRange` object from the current browser selection.\r\n *\r\n * @return {WrappedRange}\r\n */\r\nconst createFromSelection = () => {\r\n  const selection = window.getSelection ? window.getSelection() : window.document.selection;\r\n  if (!selection || selection.rangeCount === 0) {\r\n    return null;\r\n  } else if (dom.isBody(selection.anchorNode)) {\r\n    // Firefox: returns entire body as range on initialization.\r\n    // We won't ever need it.\r\n    return null;\r\n  }\r\n\r\n  return createFromNativeRange(selection.getRangeAt(0));\r\n};\r\n\r\nconst createFromBodyElement = (bodyElement, collapseToStart = false) => {\r\n  var wrappedRange = createFromNode(bodyElement);\r\n  return wrappedRange.collapse(collapseToStart);\r\n};\r\n\r\n/**\r\n * Create a `WrappedRange` object from a DOM node.\r\n *\r\n * @return {WrappedRange}\r\n */\r\nconst createFromNode = (node) => {\r\n  let sc = node, so = 0, ec = node, eo = dom.nodeLength(ec);\r\n\r\n  // Browsers can't target a picture or void node\r\n  if (dom.isVoid(sc)) {\r\n    so = dom.prevSiblings(sc).length - 1;\r\n    sc = sc.parentNode;\r\n  }\r\n\r\n  if (dom.isBR(ec)) {\r\n    eo = dom.prevSiblings(ec).length - 1;\r\n    ec = ec.parentNode;\r\n  } else if (dom.isVoid(ec)) {\r\n    eo = dom.prevSiblings(ec).length;\r\n    ec = ec.parentNode;\r\n  }\r\n\r\n  return new WrappedRange(sc, so, ec, eo);\r\n};\r\n\r\n/**\r\n * Create a `WrappedRange` object from a DOM node, collapsed to start.\r\n *\r\n * @return {WrappedRange}\r\n */\r\nconst createFromNodeBefore = (node) => {\r\n  return createFromNode(node).collapse(true);\r\n};\r\n\r\n/**\r\n * Create a `WrappedRange` object from a DOM node, collapsed to end.\r\n *\r\n * @return {WrappedRange}\r\n */\r\nconst createFromNodeAfter = (node) => {\r\n  return createFromNode(node).collapse(false);\r\n};\r\n\r\n  /**\r\n   * Creates a new range from the list of element nodes.\r\n   *\r\n   * @param {Node[]} nodes - DOM element list\r\n   * @return {WrappedRange}\r\n   */\r\n  const createFromNodes = (nodes) => {\r\n    const startRange = createFromNodeBefore(lists.head(nodes));\r\n    const startPoint = startRange.getStartPoint();\r\n    const endRange = createFromNodeAfter(lists.last(nodes));\r\n    const endPoint = endRange.getEndPoint();\r\n\r\n    return create(\r\n      startPoint.node,\r\n      startPoint.offset,\r\n      endPoint.node,\r\n      endPoint.offset\r\n    );\r\n  }\r\n\r\n/**\r\n * Create a `WrappedRange` object from a bookmark.\r\n *\r\n * @return {WrappedRange}\r\n */\r\nconst createFromBookmark = (editable, bookmark) => {\r\n  const sc = dom.fromOffsetPath(editable, bookmark.s.path);\r\n  const so = bookmark.s.offset;\r\n  const ec = dom.fromOffsetPath(editable, bookmark.e.path);\r\n  const eo = bookmark.e.offset;\r\n  return new WrappedRange(sc, so, ec, eo);\r\n};\r\n\r\n/**\r\n * Create a `WrappedRange` object from a para bookmark.\r\n *\r\n * @return {WrappedRange}\r\n */\r\nconst createFromParaBookmark = (bookmark, paras) => {\r\n  const so = bookmark.s.offset;\r\n  const eo = bookmark.e.offset;\r\n  const sc = dom.fromOffsetPath(lists.head(paras), bookmark.s.path);\r\n  const ec = dom.fromOffsetPath(lists.last(paras), bookmark.e.path);\r\n  return new WrappedRange(sc, so, ec, eo);\r\n};\r\n\r\n// const skipEmptyTextNodes = (node, forwards) => {\r\n//   const orig = node;\r\n//   while (node && dom.isText(node) && node.length === 0) {\r\n//     node = forwards ? node.nextSibling : node.previousSibling;\r\n//   }\r\n//   return node || orig;  \r\n// }\r\n\r\n/**\r\n * Wrapped Range\r\n *\r\n  * @param {Node} startContainer - Start container\r\n  * @param {Number} startOffset - Start offset\r\n  * @param {Node} endContainer - End container\r\n  * @param {Number} endOffset - End offset\r\n */\r\nclass WrappedRange {\r\n  constructor(startContainer, startOffset, endContainer, endOffset) {\r\n    this.isWrapper = true;\r\n    this.startContainer = startContainer;\r\n    this.startOffset = startOffset;\r\n    this.endContainer = endContainer;\r\n    this.endOffset = endOffset;\r\n    this.collapsed = startContainer === endContainer && startOffset === endOffset;\r\n\r\n    // Judge whether range is on editable or not\r\n    this.isOnEditable = isOnEditable;\r\n    // Judge whether range is on list node or not\r\n    this.isOnList = isOnList;\r\n    // Judge whether range is on anchor node or not\r\n    this.isOnAnchor = isOnAnchor;\r\n    // Judge whether range is on cell node or not\r\n    this.isOnCell = isOnCell;\r\n    // Judge whether range is on data node or not\r\n    this.isOnData = isOnData;\r\n  }\r\n\r\n  updateStart(node, offset) {\r\n    if (node != this.startContainer) {\r\n      this._commonParent = undefined;\r\n    }\r\n    this.startContainer = node;\r\n    this.startOffset = offset;\r\n    this.collapsed = node === this.endContainer && offset === this.endOffset;\r\n  }\r\n\r\n  updateEnd(node, offset) {\r\n    if (node != this.endContainer) {\r\n      this._commonParent = undefined;\r\n    }\r\n    this.endContainer = node;\r\n    this.endOffset = offset;\r\n    this.collapsed = node === this.startContainer && offset === this.startOffset;\r\n  }\r\n\r\n  getNativeRange() {\r\n    return getNativeRange(this);\r\n  }\r\n\r\n  equals(other) {\r\n    if (other == this) {\r\n      return true;\r\n    }\r\n    else if (other instanceof WrappedRange || other instanceof Range) {\r\n      const { startContainer, startOffset, endContainer, endOffset } = other;\r\n      return this.startContainer === startContainer &&\r\n        this.startOffset === startOffset &&\r\n        this.endContainer === endContainer &&\r\n        this.endOffset === endOffset;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  startEquals(other) {\r\n    if (other == this) {\r\n      return true;\r\n    }\r\n    else if (other instanceof WrappedRange || other instanceof Range) {\r\n      return this.startContainer === other.startContainer && this.startOffset === other.startOffset;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  endEquals(other) {\r\n    if (other == this) {\r\n      return true;\r\n    }\r\n    else if (other instanceof WrappedRange || other instanceof Range) {\r\n      return this.endContainer === other.endContainer && this.endOffset === other.endOffset;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // #region Range like properties\r\n\r\n  // Legacy. Keep for compat reasons.\r\n  get sc() {\r\n    return this.startContainer;\r\n  }\r\n  get so() {\r\n    return this.startOffset;\r\n  }\r\n  set so(value) {\r\n    return this.updateStart(this.startContainer, value);\r\n  }\r\n\r\n  get ec() {\r\n    return this.endContainer;\r\n  }\r\n  get eo() {\r\n    return this.endOffset;\r\n  }\r\n  set eo(value) {\r\n    return this.updateEnd(this.endContainer, value);\r\n  }\r\n\r\n  isCollapsed() {\r\n    return this.collapsed;\r\n  }\r\n\r\n  // endregion\r\n\r\n\r\n  // #region Wrapped Range members\r\n\r\n  get commonAncestorContainer() {\r\n    if (!this._commonParent) {\r\n      this._commonParent = this.collapsed ? this.startContainer : dom.commonParent(this.startContainer, this.endContainer);\r\n    }\r\n    return this._commonParent\r\n  }\r\n\r\n  cloneContents() {\r\n    return callNative(this, x => x.cloneContents());\r\n  }\r\n\r\n  cloneRange() {\r\n    return new WrappedRange(this.startContainer, this.startOffset, this.endContainer, this.endOffset);\r\n  }\r\n\r\n  collapse(toStart) {\r\n    const node = toStart ? this.startContainer : this.endContainer;\r\n    const offset = toStart ? this.startOffset : this.endOffset;\r\n    this.updateStart(node, offset);\r\n    this.updateEnd(node, offset);\r\n    return this;\r\n  }\r\n\r\n  compareBoundaryPoints(how, sourceRange) {\r\n    //return callNative(this, x => x.compareBoundaryPoints(how, getNativeRange(sourceRange)));\r\n    var node1, offset1, node2, offset2;\r\n    var prefix1 = (how == Range.END_TO_START || how == Range.START_TO_START) ? \"start\" : \"end\";\r\n    var prefix2 = (how == Range.START_TO_END || how == Range.START_TO_START) ? \"start\" : \"end\";\r\n    node1 = this[prefix1 + \"Container\"];\r\n    offset1 = this[prefix1 + \"Offset\"];\r\n    node2 = sourceRange[prefix2 + \"Container\"];\r\n    offset2 = sourceRange[prefix2 + \"Offset\"];\r\n    return Point.comparePoints({ node: node1, offset: offset1 }, { node: node2, offset: offset2 } );\r\n  }\r\n\r\n  compareNode(referenceNode) {\r\n    return callNative(this, x => x.compareNode(referenceNode));\r\n  }\r\n\r\n  comparePoint(referenceNode, offset) {\r\n    return callNative(this, x => x.comparePoint(referenceNode, offset));\r\n  }\r\n\r\n  createContextualFragment(content) {\r\n    return callNative(this, x => x.createContextualFragment(content));\r\n  }\r\n\r\n  // deleteContents_temp() {\r\n  //   callNative(this, x => x.deleteContents());\r\n  //   return this;\r\n  // }\r\n\r\n  deleteContents() {\r\n    if (this.collapsed) {\r\n      return this;\r\n    }\r\n\r\n    const rng = this.splitText();\r\n    const nodes = rng.nodes(null, {\r\n      fullyContains: true,\r\n    });\r\n\r\n    // Find new cursor point\r\n    const point = Point.prevPointUntil(rng.getStartPoint(), (point) => {\r\n      return !lists.contains(nodes, point.node);\r\n    });\r\n\r\n    const emptyParents = [];\r\n    lists.each(nodes, (node) => {\r\n      // find empty parents\r\n      const parent = node.parentNode;\r\n      if (point.node !== parent && dom.nodeLength(parent) === 1) {\r\n        emptyParents.push(parent);\r\n      }\r\n      dom.remove(node, false);\r\n    });\r\n\r\n    // remove empty parents\r\n    lists.each(emptyParents, (node) => {\r\n      dom.remove(node, false);\r\n    });\r\n\r\n    return new WrappedRange(\r\n      point.node,\r\n      point.offset,\r\n      point.node,\r\n      point.offset\r\n    ).normalize();\r\n  }\r\n\r\n  detach() {\r\n    // Noop\r\n    return this;\r\n  }\r\n\r\n  extractContents() {\r\n    return callNative(this, x => x.extractContents());\r\n  }\r\n\r\n  getBoundingClientRect() {\r\n    return callNative(this, x => x.getBoundingClientRect());\r\n  }\r\n\r\n  getClientRects() {\r\n    return callNative(this, x => x.getClientRects());\r\n  }\r\n\r\n  /**\r\n   * Insert node at current cursor\r\n   *\r\n   * @param {Node} node\r\n   * @param {Boolean} [doNotInsertPara] - Default is false, removes added <p> that's added if true\r\n   * @return {Node}\r\n   */\r\n    insertNode(node, doNotInsertPara = false) {\r\n      let rng = this;\r\n  \r\n      if (dom.isInlineOrText(node)) {\r\n        rng = this.wrapBodyInlineWithPara().deleteContents();\r\n      }\r\n\r\n      const info = Point.splitPoint(rng.getStartPoint(), !dom.isBlock(node));\r\n\r\n      if (info.rightNode) {\r\n        info.rightNode.parentNode.insertBefore(node, info.rightNode);\r\n        if (dom.isEmpty(info.rightNode) && (doNotInsertPara || dom.isPara(node))) {\r\n          info.rightNode.parentNode.removeChild(info.rightNode);\r\n        }\r\n      } else if (info.container) {\r\n        info.container.appendChild(node);\r\n      }\r\n  \r\n      return node;\r\n    }\r\n\r\n  intersectsNode(referenceNode) {\r\n    return callNative(this, x => x.intersectsNode(referenceNode));\r\n  }\r\n\r\n  isPointInRange(referenceNode, offset) {\r\n    return callNative(this, x => x.isPointInRange(referenceNode, offset));\r\n  }\r\n\r\n  selectNode(referenceNode) {\r\n    const start = Point.pointBeforeNode(referenceNode);\r\n    const end = Point.pointAfterNode(referenceNode);\r\n    this.updateStart(start.node, start.offset);\r\n    this.updateEnd(end.node, end.offset);\r\n    return this;\r\n  }\r\n\r\n  selectNodeContents(referenceNode) {\r\n    this.updateStart(referenceNode, 0);\r\n    this.updateEnd(referenceNode, dom.nodeLength(referenceNode));\r\n    return this;\r\n  }\r\n\r\n  setEnd(endNode, endOffset) {\r\n    this.updateEnd(endNode, endOffset);\r\n    return this;\r\n  }\r\n\r\n  setEndAfter(referenceNode) {\r\n    const pt = Point.pointAfterNode(referenceNode);\r\n    this.updateEnd(pt.node, pt.offset);\r\n    return this;\r\n  }\r\n\r\n  setEndBefore(referenceNode) {\r\n    const pt = Point.pointBeforeNode(referenceNode);\r\n    this.updateEnd(pt.node, pt.offset);\r\n    return this;\r\n  }\r\n\r\n  setStart(startNode, startOffset) {\r\n    this.updateStart(startNode, startOffset);\r\n    return this;\r\n  }\r\n\r\n  setStartAfter(referenceNode) {\r\n    const pt = Point.pointAfterNode(referenceNode);\r\n    this.updateStart(pt.node, pt.offset);\r\n    return this;\r\n  }\r\n\r\n  setStartBefore(referenceNode) {\r\n    const pt = Point.pointBeforeNode(referenceNode);\r\n    this.updateStart(pt.node, pt.offset);\r\n    return this;\r\n  }\r\n\r\n  surroundContents(newParent) {\r\n    callNative(this, x => {\r\n      x.surroundContents(newParent);\r\n      this.updateStart(x.startContainer, x.startOffset);\r\n      this.updateEnd(x.endContainer, x.endOffset);    \r\n    });\r\n    return this;\r\n  }\r\n\r\n  toString() {\r\n    return callNative(this, x => x.toString());\r\n  }\r\n\r\n  // #endregion\r\n\r\n\r\n  // #region Sugar utils\r\n\r\n  // #endregion\r\n\r\n  getPoints() {\r\n    return {\r\n      sc: this.startContainer,\r\n      so: this.startOffset,\r\n      ec: this.endContainer,\r\n      eo: this.endOffset,\r\n    };\r\n  }\r\n\r\n  getStartPoint() {\r\n    return {\r\n      node: this.startContainer,\r\n      offset: this.startOffset,\r\n    };\r\n  }\r\n\r\n  getEndPoint() {\r\n    return {\r\n      node: this.endContainer,\r\n      offset: this.endOffset,\r\n    };\r\n  }\r\n\r\n  walk(callback, inline) {\r\n    const startOffset = this.startOffset;\r\n    const startContainer = inline ? dom.getRangeNode(this.startContainer, startOffset) : this.startContainer;\r\n    const endOffset = this.endOffset;\r\n    const endContainer = inline ? dom.getRangeNode(this.endContainer, endOffset - 1) : this.endContainer;\r\n\r\n    /**\r\n     * Excludes start/end text node if they are outside the range\r\n     *\r\n     * @private\r\n     * @param {Array} nodes Nodes to exclude items from.\r\n     * @return {Array} Array with nodes excluding the start/end container if needed.\r\n     */\r\n    const exclude = (nodes) => {\r\n      // First node is excluded\r\n      let firstNode = nodes[0];\r\n      if (dom.isText(firstNode) && firstNode === startContainer && startOffset >= firstNode.data.length) {\r\n        nodes.splice(0, 1);\r\n      }\r\n\r\n      // Last node is excluded\r\n      let lastNode = nodes[nodes.length - 1];\r\n      if (endOffset === 0 && nodes.length > 0 && lastNode === endContainer && dom.isText(lastNode)) {\r\n        nodes.splice(nodes.length - 1, 1);\r\n      }\r\n\r\n      // TODO: reject empty nodes: muss das sein?\r\n      // Reject all editor specific empty edge node\r\n      nodes = lists.reject(nodes, n => dom.isWhiteSpace(n) && (dom.isElement(n.previousSibling) || dom.isElement(n.nextSibling)));\r\n\r\n      return nodes;\r\n    };\r\n\r\n    const collectSiblings = (node, name = 'nextSibling' | 'previousSibling', endNode) => {\r\n      const siblings = [];\r\n  \r\n      for (; node && node !== endNode; node = node[name]) {\r\n        siblings.push(node);\r\n      }\r\n      \r\n      return siblings;\r\n    };\r\n\r\n    const findEndPoint = (node, root) => {\r\n      return dom.closest(node, n => n.parentNode === root);\r\n    };\r\n\r\n    const executeCallback = (nodes) => {\r\n      if (nodes && nodes.length) callback(nodes);\r\n    };\r\n      \r\n    const walkBoundary = (startNode, endNode, next) => {\r\n      const siblingName = next ? 'nextSibling' : 'previousSibling';\r\n  \r\n      for (let node = startNode, parent = node.parentNode; node && node !== endNode; node = parent) {\r\n        parent = node.parentNode;\r\n        const siblings = collectSiblings(node === startNode ? node : node[siblingName], siblingName);\r\n  \r\n        if (siblings.length) {\r\n          if (!next) {\r\n            siblings.reverse();\r\n          }\r\n          \r\n          executeCallback(exclude(siblings));\r\n        }\r\n      }\r\n    };\r\n\r\n    // Same container\r\n    if (startContainer === endContainer) {\r\n      return executeCallback(exclude([ startContainer ]));\r\n    }\r\n\r\n    // Find common ancestor and end points\r\n    const ancestor = dom.commonParent(startContainer, endContainer) || dom.getEditableRoot(startContainer);\r\n\r\n    // Process left side\r\n    if (dom.isChildOf(startContainer, endContainer)) {\r\n      return walkBoundary(startContainer, ancestor, true);\r\n    }\r\n\r\n    // Process right side\r\n    if (dom.isChildOf(endContainer, startContainer)) {\r\n      return walkBoundary(endContainer, ancestor);\r\n    }\r\n\r\n    // Find start/end point\r\n    const startPoint = findEndPoint(startContainer, ancestor) || startContainer;\r\n    const endPoint = findEndPoint(endContainer, ancestor) || endContainer;\r\n\r\n    // Walk left leaf\r\n    walkBoundary(startContainer, startPoint, true);\r\n\r\n    // Walk the middle from start to end point\r\n    const siblings = collectSiblings(\r\n      startPoint === startContainer ? startPoint : startPoint.nextSibling,\r\n      'nextSibling',\r\n      endPoint === endContainer ? endPoint.nextSibling : endPoint\r\n    );\r\n\r\n    if (siblings.length) {\r\n      executeCallback(exclude(siblings));\r\n    }\r\n\r\n    // Walk right leaf\r\n    walkBoundary(endContainer, endPoint);\r\n  }\r\n\r\n  /**\r\n   * Moves the scrollbar to start container(sc) of current range\r\n   */\r\n  scrollIntoView(container) {\r\n    const height = $(container).height();\r\n    if (container.scrollTop + height < this.startContainer.offsetTop) {\r\n      container.scrollTop += Math.abs(container.scrollTop + height - this.startContainer.offsetTop);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Normalizes the range by finding the closest best suitable caret location.\r\n   *\r\n   * @return {WrappedRange} - Current instance for chaining.\r\n   */\r\n  normalize() {\r\n    // const normRng = NormalizeRange.normalize(this);\r\n    // if (normRng) {\r\n    //   // this.setStart(normRng.startContainer, normRng.startOffset);\r\n    //   // this.setEnd(normRng.endContainer, normRng.endOffset);\r\n    //   return normRng;\r\n    // }\r\n\r\n    // return this;\r\n\r\n    /**\r\n     * @param {BoundaryPoint} point\r\n     * @param {Boolean} isLeftToRight - true: prefer to choose right node\r\n     *                                - false: prefer to choose left node\r\n     * @return {BoundaryPoint}\r\n     */\r\n    const getVisiblePoint = function(point, isLeftToRight) {\r\n      if (!point) {\r\n        return point;\r\n      }\r\n\r\n      // Just use the given point [XXX:Adhoc]\r\n      //  - case 01. if the point is on the middle of the node\r\n      //  - case 02. if the point is on the right edge and prefer to choose left node\r\n      //  - case 03. if the point is on the left edge and prefer to choose right node\r\n      //  - case 04. if the point is on the right edge and prefer to choose right node but the node is void\r\n      //  - case 05. if the point is on the left edge and prefer to choose left node but the node is void\r\n      //  - case 06. if the point is on the block node and there is no children\r\n      if (Point.isVisiblePoint(point)) {\r\n        if (!Point.isEdgePoint(point) ||\r\n            (Point.isRightEdgePoint(point) && !isLeftToRight) ||\r\n            (Point.isLeftEdgePoint(point) && isLeftToRight) ||\r\n            (Point.isRightEdgePoint(point) && isLeftToRight && dom.isVoid(point.node.nextSibling)) ||\r\n            (Point.isLeftEdgePoint(point) && !isLeftToRight && dom.isVoid(point.node.previousSibling)) ||\r\n            (dom.isBlock(point.node) && dom.isEmpty(point.node))) {\r\n          return point;\r\n        }\r\n      }\r\n\r\n      // point on block's edge\r\n      const block = dom.closest(point.node, dom.isBlock);\r\n      let hasRightNode = false;\r\n\r\n      if (!hasRightNode) {\r\n        const prevPoint = Point.prevPoint(point) || { node: null };\r\n        hasRightNode = (Point.isLeftEdgePointOf(point, block) || dom.isVoid(prevPoint.node)) && !isLeftToRight;\r\n      }\r\n\r\n      let hasLeftNode = false;\r\n      if (!hasLeftNode) {\r\n        const nextPoint = Point.nextPoint(point) || { node: null };\r\n        hasLeftNode = (Point.isRightEdgePointOf(point, block) || dom.isVoid(nextPoint.node)) && isLeftToRight;\r\n      }\r\n\r\n      if (hasRightNode || hasLeftNode) {\r\n        // returns point already on visible point\r\n        if (Point.isVisiblePoint(point)) {\r\n          return point;\r\n        }\r\n        // reverse direction\r\n        isLeftToRight = !isLeftToRight;\r\n      }\r\n\r\n      const nextPoint = isLeftToRight ? Point.nextPointUntil(Point.nextPoint(point), Point.isVisiblePoint)\r\n        : Point.prevPointUntil(Point.prevPoint(point), Point.isVisiblePoint);\r\n      return nextPoint || point;\r\n    };\r\n\r\n    const endPoint = getVisiblePoint(this.getEndPoint(), false);\r\n    const startPoint = this.collapsed ? endPoint : getVisiblePoint(this.getStartPoint(), true);\r\n\r\n    return new WrappedRange(\r\n      startPoint.node,\r\n      startPoint.offset,\r\n      endPoint.node,\r\n      endPoint.offset\r\n    );\r\n  }\r\n\r\n  /**\r\n   * returns matched nodes on range\r\n   *\r\n   * @param {Function|String|Node} [selector] - Selector function, string or node.\r\n   * @param {Object} [options]\r\n   * @param {Boolean} [options.includeAncestor]\r\n   * @param {Boolean} [options.fullyContains]\r\n   * @return {Node[]}\r\n   */\r\n  nodes(selector, options) {\r\n    const pred = dom.matchSelector(selector, func.ok);\r\n    const includeAncestor = options && options.includeAncestor;\r\n    const fullyContains = options && options.fullyContains;\r\n\r\n    // TODO compare points and sort\r\n    const startPoint = this.getStartPoint();\r\n    const endPoint = this.getEndPoint();\r\n\r\n    const nodes = [];\r\n    const leftEdgeNodes = [];\r\n    \r\n    Point.walkPoint(startPoint, endPoint, (point) => {\r\n      if (dom.isEditableRoot(point.node)) {\r\n        return;\r\n      }\r\n\r\n      let node;\r\n      if (fullyContains) {\r\n        if (Point.isLeftEdgePoint(point)) {\r\n          leftEdgeNodes.push(point.node);\r\n        }\r\n        if (Point.isRightEdgePoint(point) && lists.contains(leftEdgeNodes, point.node)) {\r\n          node = point.node;\r\n        }\r\n      } else if (includeAncestor) {\r\n        node = dom.closest(point.node, pred);\r\n      } else {\r\n        node = point.node;\r\n      }  \r\n\r\n      if (node && pred(node)) {\r\n        nodes.push(node);\r\n      }\r\n    }, true);\r\n\r\n    return lists.unique(nodes);\r\n  }\r\n\r\n  /**\r\n   * Gets expanded range by selector\r\n   *\r\n   * @param {Function|String|Node} selector - Selector function, string or node.\r\n   * @return {WrappedRange}\r\n   */\r\n  expand(selector) {\r\n    const pred = dom.matchSelector(selector);\r\n    const startAncestor = dom.closest(this.startContainer, pred);\r\n    const endAncestor = dom.closest(this.endContainer, pred);\r\n\r\n    if (!startAncestor && !endAncestor) {\r\n      return this;\r\n    }\r\n\r\n    const pts = this.getPoints();\r\n\r\n    if (startAncestor) {\r\n      pts.sc = startAncestor;\r\n      pts.so = 0;\r\n    }\r\n\r\n    if (endAncestor) {\r\n      pts.ec = endAncestor;\r\n      pts.eo = dom.nodeLength(endAncestor);\r\n    }\r\n\r\n    this.setStart(pts.sc, pts.so);\r\n    this.setEnd(pts.ec, pts.eo);\r\n\r\n    return this;\r\n  }\r\n\r\n  // /**\r\n  //  * Splits text on range and returns a new range.\r\n  //  */\r\n  // splitText_New() {\r\n  //   const pts = this.getPoints();\r\n\r\n  //   // Handle single text node\r\n  //   if (pts.sc === pts.ec && dom.isText(pts.sc)) {\r\n  //     if (pts.so > 0 && pts.so < pts.sc.data.length) {\r\n  //       pts.ec = pts.sc.splitText(pts.so);\r\n  //       pts.sc = pts.ec.previousSibling;\r\n\r\n  //       if (pts.eo > pts.so) {\r\n  //         pts.eo = pts.eo - pts.so;\r\n  //         const newContainer = pts.ec.splitText(pts.eo).previousSibling;\r\n  //         pts.sc = pts.ec = newContainer;\r\n  //         pts.eo = newContainer.data.length;\r\n  //         pts.so = 0;\r\n  //       } else {\r\n  //         pts.eo = 0;\r\n  //       }\r\n  //     }\r\n  //   } else {\r\n  //     // Split startContainer text node if needed\r\n  //     if (dom.isText(pts.sc) && pts.so > 0 && pts.so < pts.sc.data.length) {\r\n  //       pts.sc = pts.sc.splitText(pts.so);\r\n  //       pts.so = 0;\r\n  //     }\r\n\r\n  //     // Split endContainer text node if needed\r\n  //     if (dom.isText(pts.ec) && pts.eo > 0 && pts.eo < pts.ec.data.length) {\r\n  //       const newContainer = pts.ec.splitText(pts.eo).previousSibling;\r\n  //       pts.ec = newContainer;\r\n  //       pts.eo = newContainer.data.length;\r\n  //     }\r\n  //   }\r\n\r\n  //   return create(pts.sc, pts.so, pts.ec, pts.eo);\r\n  // }\r\n\r\n  splitText() {\r\n    const isSameContainer = this.sc === this.ec;\r\n    const pts = this.getPoints();\r\n\r\n    if (dom.isText(this.ec) && !Point.isEdgePoint(this.getEndPoint())) {\r\n      this.ec.splitText(this.eo);\r\n    }\r\n\r\n    if (dom.isText(this.sc) && !Point.isEdgePoint(this.getStartPoint())) {\r\n      pts.sc = this.sc.splitText(this.so);\r\n      pts.so = 0;\r\n\r\n      if (isSameContainer) {\r\n        pts.ec = pts.sc;\r\n        pts.eo = this.eo - this.so;\r\n      }\r\n    }\r\n\r\n    this.setStart(pts.sc, pts.so);\r\n    this.setEnd(pts.ec, pts.eo);\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @param {Function} pred\r\n   * @return {Boolean}\r\n   */\r\n  isLeftEdgeOf(selector) {\r\n    if (!Point.isLeftEdgePoint(this.getStartPoint())) {\r\n      return false;\r\n    }\r\n\r\n    const node = dom.closest(this.sc, selector);\r\n    return node && dom.isLeftEdgeOf(this.sc, node);\r\n  }\r\n\r\n  /**\r\n   * Checks whether range is within a single container\r\n   */\r\n  isSingleContainer() {\r\n    return this.startContainer === this.endContainer;\r\n  }\r\n\r\n  /**\r\n   * Wrap inline nodes which children of body with paragraph\r\n   *\r\n   * @return {WrappedRange} - A new `WrappedRange` instance.\r\n   */\r\n  wrapBodyInlineWithPara() {\r\n    if (dom.isBodyContainer(this.sc) && dom.isEmpty(this.sc)) {\r\n      this.sc.innerHTML = dom.emptyPara;\r\n      return create(this.sc.firstChild, 0, this.sc.firstChild, 0);\r\n    }\r\n\r\n    /**\r\n     * [workaround] firefox often create range on not visible point. so normalize here.\r\n     *  - firefox: |<p>text</p>|\r\n     *  - chrome: <p>|text|</p>\r\n     */\r\n    const rng = this.normalize();\r\n    if (dom.isParaInlineNoBlockQuote(this.sc) || dom.isParaNoBlockquote(this.sc)) {\r\n      return rng;\r\n    }\r\n\r\n    // find inline top ancestor\r\n    let topAncestor;\r\n    if (!dom.isBlock(rng.sc)) {\r\n      const ancestors = dom.parents(rng.sc, dom.isBlock);\r\n      topAncestor = lists.last(ancestors);\r\n      if (dom.isBlock(topAncestor)) {\r\n        topAncestor = ancestors[ancestors.length - 2] || rng.sc.childNodes[rng.so];\r\n      }\r\n    } else {\r\n      topAncestor = rng.sc.childNodes[rng.so > 0 ? rng.so - 1 : 0];\r\n    }\r\n\r\n    if (topAncestor) {\r\n      // siblings not in paragraph\r\n      let inlineSiblings = dom.prevSiblings(topAncestor, dom.isParaInlineNoBlockQuote).reverse();\r\n      inlineSiblings = inlineSiblings.concat(dom.nextSiblings(topAncestor.nextSibling, dom.isParaInlineNoBlockQuote));\r\n\r\n      // wrap with paragraph\r\n      if (inlineSiblings.length) {\r\n        const para = dom.wrap(lists.head(inlineSiblings), 'p');\r\n        dom.appendChildNodes(para, lists.tail(inlineSiblings));\r\n      }\r\n    }\r\n\r\n    return this.normalize();\r\n  }\r\n\r\n  /**\r\n   * Insert html at current cursor\r\n   */\r\n  pasteHTML(markup) {\r\n    markup = ((markup || '') + '').trim(markup);\r\n    \r\n    const contentsContainer = dom.create('div', null, markup);\r\n    let childNodes = lists.from(contentsContainer.childNodes);\r\n\r\n    // const rng = this.wrapBodyInlineWithPara().deleteContents();\r\n    const rng = this;\r\n    let reversed = false;\r\n\r\n    if (rng.so >= 0) {\r\n      childNodes = childNodes.reverse();\r\n      reversed = true;\r\n    }\r\n\r\n    childNodes = childNodes.map(function(childNode) {\r\n      return rng.insertNode(childNode, !dom.isInline(childNode));\r\n    });\r\n\r\n    if (reversed) {\r\n      childNodes = childNodes.reverse();\r\n    }\r\n\r\n    return childNodes;\r\n  }\r\n\r\n  /**\r\n   * Finds word endpoint before or after cursor\r\n   *\r\n   * @param {Boolean} [start] - Find word start.\r\n   * @param {Boolean} [stopAtPunc] - Stop at punctuation char.\r\n   * @param {Boolean} [trim] - Skip trailing space char.\r\n   * @return {Object} - A point object.\r\n   */\r\n  findWordEndpoint(start, stopAtPunc, trim) {\r\n    const startPoint = start ? this.getStartPoint() : this.getEndPoint();\r\n    const pred = makeCharPredicate(stopAtPunc);\r\n\r\n    if (pred(startPoint)) {\r\n      return startPoint;\r\n    }\r\n\r\n    let point = start \r\n      ? Point.prevPointUntil(startPoint, pred) \r\n      : Point.nextPointUntil(startPoint, pred);\r\n\r\n    if (!start && trim && !Point.equals(startPoint, point)) {\r\n      // Trim last space or punc\r\n      //const stopAtPunc = options?.stopAtPunc === true;\r\n      const charType = Point.getCharType(point);\r\n      if (charType < 1 || (!stopAtPunc || charType === 1)) {\r\n        // Walk back one point\r\n        point = Point.prevPoint(point);\r\n      }\r\n    }\r\n\r\n    return point;\r\n  }\r\n\r\n  /**\r\n   * Returns range for word before and (optionally) after cursor\r\n   *\r\n   * @param {Object|boolean|null} [options] - Optional find word options.\r\n   * @param {Boolean} [options.forward] - Find after cursor also, default: false.\r\n   * @param {Boolean} [options.stopAtPunc] - Stop at punctuation char, default: false.\r\n   * @param {Boolean} [options.trim] - Skip trailing space char, default: false.\r\n   * @return {WrappedRange} - A new `WrappedRange` instance.\r\n   */\r\n  getWordRange(options) {\r\n    const forward = Type.isBoolean(options) ? options : (options?.forward === true);\r\n    const trim = options?.trim === true;\r\n    const stopAtPunc = options?.stopAtPunc === true;\r\n    const pred = makeCharPredicate(stopAtPunc);\r\n\r\n    let endPoint = this.getEndPoint();\r\n\r\n    if (pred(endPoint)) {\r\n      return this;\r\n    }\r\n\r\n    const startPoint = this.findWordEndpoint(true, stopAtPunc, trim);\r\n\r\n    if (forward) {\r\n      endPoint = this.findWordEndpoint(false, stopAtPunc, trim);\r\n    }\r\n\r\n    return new WrappedRange(\r\n      startPoint.node,\r\n      startPoint.offset,\r\n      endPoint.node,\r\n      endPoint.offset, //!trim ? endPoint.offset : Math.max(endPoint.offset - 1, endOffset)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns range for words before cursor\r\n   *\r\n   * @param {Boolean} [findAfter] - find after cursor, default: false\r\n   * @return {WrappedRange} - A new `WrappedRange` instance.\r\n   */\r\n  getWordsRange(findAfter) {\r\n    var endPoint = this.getEndPoint();\r\n\r\n    const isNotTextPoint = (point) => {\r\n      return Point.getCharType(point) === -1;\r\n    };\r\n\r\n    if (isNotTextPoint(endPoint)) {\r\n      return this;\r\n    }\r\n\r\n    const startPoint = Point.prevPointUntil(endPoint, isNotTextPoint);\r\n\r\n    if (findAfter) {\r\n      endPoint = Point.nextPointUntil(endPoint, isNotTextPoint);\r\n    }\r\n\r\n    return new WrappedRange(\r\n      startPoint.node,\r\n      startPoint.offset,\r\n      endPoint.node,\r\n      endPoint.offset\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns range for words before cursor that match with a Regex\r\n   *\r\n   * example:\r\n   *  range: 'hi @Peter Pan'\r\n   *  regex: '/@[a-z ]+/i'\r\n   *  return range: '@Peter Pan'\r\n   *\r\n   * @param {RegExp} [regex]\r\n   * @return {WrappedRange|null} - A new `WrappedRange` instance or `null`.\r\n   */\r\n  getWordsMatchRange(regex) {\r\n    const endPoint = this.getEndPoint();\r\n\r\n    const startPoint = Point.prevPointUntil(endPoint, (point) => {\r\n      if (Point.getCharType(point) === -1) {\r\n        return true;\r\n      }\r\n      const rng = createFromPoints(point, endPoint);\r\n      const result = regex.exec(rng.toString());\r\n      return result && result.index === 0;\r\n    });\r\n\r\n    const rng = createFromPoints(startPoint, endPoint);\r\n\r\n    const text = rng.toString();\r\n    const result = regex.exec(text);\r\n\r\n    if (result && result[0].length === text.length) {\r\n      return rng;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create offsetPath bookmark\r\n   *\r\n   * @param {Node} editable\r\n   */\r\n  createBookmark(editable) {\r\n    return {\r\n      s: {\r\n        path: dom.makeOffsetPath(editable, this.sc),\r\n        offset: this.so,\r\n      },\r\n      e: {\r\n        path: dom.makeOffsetPath(editable, this.ec),\r\n        offset: this.eo,\r\n      },\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Create offsetPath bookmark base on paragraph\r\n   *\r\n   * @param {Node[]} paras\r\n   */\r\n  createParaBookmark(paras) {\r\n    return {\r\n      s: {\r\n        path: lists.tail(dom.makeOffsetPath(lists.head(paras), this.sc)),\r\n        offset: this.so,\r\n      },\r\n      e: {\r\n        path: lists.tail(dom.makeOffsetPath(lists.last(paras), this.ec)),\r\n        offset: this.eo,\r\n      },\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Data structure\r\n *  * BoundaryPoint: a point of dom tree\r\n *  * BoundaryPoints: two boundaryPoints corresponding to the start and the end of the Range\r\n *\r\n * See to http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-Position\r\n */\r\nexport default {\r\n  create,\r\n  createFromBodyElement,\r\n  createFromSelection,\r\n  createFromNode,\r\n  createFromNodeBefore,\r\n  createFromNodeAfter,\r\n  createFromNodes,\r\n  createFromBookmark,\r\n  createFromParaBookmark,\r\n  createFromNativeRange,\r\n  createFromPoints,\r\n  getWrappedRange,\r\n  getNativeRange,\r\n  isFullyContainedInNode\r\n};\r\n","import lists from './lists';\r\nimport Obj from './Obj';\r\n\r\nconst KEY_MAP = {\r\n  'BACKSPACE': 8,\r\n  'TAB': 9,\r\n  'ENTER': 13,\r\n  'ESCAPE': 27,\r\n  'SPACE': 32,\r\n  'DELETE': 46,\r\n\r\n  // Arrow\r\n  'LEFT': 37,\r\n  'UP': 38,\r\n  'RIGHT': 39,\r\n  'DOWN': 40,\r\n\r\n  // Number: 0-9\r\n  'NUM0': 48,\r\n  'NUM1': 49,\r\n  'NUM2': 50,\r\n  'NUM3': 51,\r\n  'NUM4': 52,\r\n  'NUM5': 53,\r\n  'NUM6': 54,\r\n  'NUM7': 55,\r\n  'NUM8': 56,\r\n\r\n  // Alphabet: a-z\r\n  'B': 66,\r\n  'E': 69,\r\n  'I': 73,\r\n  'J': 74,\r\n  'K': 75,\r\n  'L': 76,\r\n  'R': 82,\r\n  'S': 83,\r\n  'U': 85,\r\n  'V': 86,\r\n  'Y': 89,\r\n  'Z': 90,\r\n\r\n  'SLASH': 191,\r\n  'LEFTBRACKET': 219,\r\n  'BACKSLASH': 220,\r\n  'RIGHTBRACKET': 221,\r\n\r\n  // Navigation\r\n  'HOME': 36,\r\n  'END': 35,\r\n  'PAGEUP': 33,\r\n  'PAGEDOWN': 34,\r\n};\r\n\r\n/**\r\n * @class core.key\r\n *\r\n * Object for keycodes.\r\n *\r\n * @singleton\r\n * @alternateClassName key\r\n */\r\nexport default {\r\n  /**\r\n   * @method isEdit\r\n   *\r\n   * @param {Number} keyCode\r\n   * @return {Boolean}\r\n   */\r\n  isEdit: (keyCode) => {\r\n    return lists.contains([\r\n      KEY_MAP.BACKSPACE,\r\n      KEY_MAP.TAB,\r\n      KEY_MAP.ENTER,\r\n      KEY_MAP.SPACE,\r\n      KEY_MAP.DELETE,\r\n    ], keyCode);\r\n  },\r\n  /**\r\n   * @method isRemove\r\n   *\r\n   * @param {Number} keyCode\r\n   * @return {Boolean}\r\n   */\r\n  isRemove: (keyCode) => { // LB\r\n    return lists.contains([\r\n      KEY_MAP.BACKSPACE,\r\n      KEY_MAP.DELETE,\r\n    ], keyCode);\r\n  },\r\n  /**\r\n   * @method isMove\r\n   *\r\n   * @param {Number} keyCode\r\n   * @return {Boolean}\r\n   */\r\n  isMove: (keyCode) => {\r\n    return lists.contains([\r\n      KEY_MAP.LEFT,\r\n      KEY_MAP.UP,\r\n      KEY_MAP.RIGHT,\r\n      KEY_MAP.DOWN,\r\n    ], keyCode);\r\n  },\r\n  /**\r\n   * @method isNavigation\r\n   *\r\n   * @param {Number} keyCode\r\n   * @return {Boolean}\r\n   */\r\n  isNavigation: (keyCode) => {\r\n    return lists.contains([\r\n      KEY_MAP.HOME,\r\n      KEY_MAP.END,\r\n      KEY_MAP.PAGEUP,\r\n      KEY_MAP.PAGEDOWN,\r\n    ], keyCode);\r\n  },\r\n  /**\r\n   * @property {Object} nameFromCode\r\n   * @property {String} nameFromCode.8 \"BACKSPACE\"\r\n   */\r\n  nameFromCode: Obj.invert(KEY_MAP),\r\n  code: KEY_MAP,\r\n};\r\n","import $ from 'jquery';\r\n\r\n/**\r\n * @method readFileAsDataURL\r\n *\r\n * read contents of file as representing URL\r\n *\r\n * @param {File} file\r\n * @return {Promise} - then: dataUrl\r\n */\r\nexport function readFileAsDataURL(file) {\r\n  return $.Deferred((deferred) => {\r\n    $.extend(new FileReader(), {\r\n      onload: (event) => {\r\n        const dataURL = event.target.result;\r\n        deferred.resolve(dataURL);\r\n      },\r\n      onerror: (err) => {\r\n        deferred.reject(err);\r\n      },\r\n    }).readAsDataURL(file);\r\n  }).promise();\r\n}\r\n\r\n/**\r\n * @method createImage\r\n *\r\n * create `<image>` from url string\r\n *\r\n * @param {String} url\r\n * @return {Promise} - then: $image\r\n */\r\nexport function createImage(url) {\r\n  return $.Deferred((deferred) => {\r\n    const $img = $('<img>');\r\n\r\n    $img.one('load', () => {\r\n      $img.off('error abort');\r\n      deferred.resolve($img);\r\n    }).one('error abort', () => {\r\n      $img.off('load').detach();\r\n      deferred.reject($img);\r\n    }).css({\r\n      display: 'none',\r\n    }).appendTo(document.body).attr('src', url);\r\n  }).promise();\r\n}\r\n","import range from '../core/range';\r\n\r\nexport default class History {\r\n  constructor(context) {\r\n    this.stack = [];\r\n    this.stackOffset = -1;\r\n    this.context = context;\r\n    this.$editable = context.layoutInfo.editable;\r\n    this.editable = this.$editable[0];\r\n  }\r\n\r\n  get editor() {\r\n    return this.context.modules.editor;\r\n  }\r\n\r\n  makeSnapshot() {\r\n    const rng = range.create(this.editable);\r\n    const emptyBookmark = { s: { path: [], offset: 0 }, e: { path: [], offset: 0 } };\r\n    return {\r\n      contents: this.$editable.html(),\r\n      bookmark: ((rng && rng.isOnEditable()) ? rng.createBookmark(this.editable) : emptyBookmark),\r\n    };\r\n  }\r\n\r\n  applySnapshot(snapshot) {\r\n    if (snapshot.contents !== null) {\r\n      this.$editable.html(snapshot.contents);\r\n    }\r\n    if (snapshot.bookmark !== null) {\r\n      this.editor.selection.moveToBookmark(snapshot.bookmark);\r\n    }\r\n  }\r\n\r\n  /**\r\n  * @method rewind\r\n  * Rewinds the history stack back to the first snapshot taken.\r\n  * Leaves the stack intact, so that \"Redo\" can still be used.\r\n  */\r\n  rewind() {\r\n    // Create snap shot if not yet recorded\r\n    if (this.$editable.html() !== this.stack[this.stackOffset].contents) {\r\n      this.recordUndo();\r\n    }\r\n\r\n    // Return to the first available snapshot.\r\n    this.stackOffset = 0;\r\n\r\n    // Apply that snapshot.\r\n    this.applySnapshot(this.stack[this.stackOffset]);\r\n  }\r\n\r\n  /**\r\n  *  @method commit\r\n  *  Resets history stack, but keeps current editor's content.\r\n  */\r\n  commit() {\r\n    // Clear the stack.\r\n    this.stack = [];\r\n\r\n    // Restore stackOffset to its original value.\r\n    this.stackOffset = -1;\r\n\r\n    // Record our first snapshot (of nothing).\r\n    this.recordUndo();\r\n  }\r\n\r\n  /**\r\n  * @method reset\r\n  * Resets the history stack completely; reverting to an empty editor.\r\n  */\r\n  reset() {\r\n    // Clear the stack.\r\n    this.stack = [];\r\n\r\n    // Restore stackOffset to its original value.\r\n    this.stackOffset = -1;\r\n\r\n    // Clear the editable area.\r\n    this.$editable.html('');\r\n\r\n    // Record our first snapshot (of nothing).\r\n    this.recordUndo();\r\n  }\r\n\r\n  canUndo() {\r\n    return this.stackOffset > 0;\r\n  }\r\n\r\n  /**\r\n   * undo\r\n   */\r\n  undo() {\r\n    // Create snap shot if not yet recorded\r\n    if (this.$editable.html() !== this.stack[this.stackOffset].contents) {\r\n      this.recordUndo();\r\n    }\r\n\r\n    if (this.stackOffset > 0) {\r\n      this.stackOffset--;\r\n      this.applySnapshot(this.stack[this.stackOffset]);\r\n    }\r\n  }\r\n\r\n  canRedo() {\r\n    return this.stack.length - 1 > this.stackOffset;\r\n  }\r\n\r\n  /**\r\n   * redo\r\n   */\r\n  redo() {\r\n    if (this.stack.length - 1 > this.stackOffset) {\r\n      this.stackOffset++;\r\n      this.applySnapshot(this.stack[this.stackOffset]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * recorded undo\r\n   */\r\n  recordUndo() {\r\n    this.stackOffset++;\r\n\r\n    // Wash out stack after stackOffset\r\n    if (this.stack.length > this.stackOffset) {\r\n      this.stack = this.stack.slice(0, this.stackOffset);\r\n    }\r\n\r\n    // Create new snapshot and push it to the end\r\n    this.stack.push(this.makeSnapshot());\r\n\r\n    // If the stack size reachs to the limit, then slice it\r\n    if (this.stack.length > this.context.options.historyLimit) {\r\n      this.stack.shift();\r\n      this.stackOffset -= 1;\r\n    }\r\n  }\r\n}\r\n","import $ from 'jquery';\r\nimport func from '../core/func';\r\nimport lists from '../core/lists';\r\nimport dom from '../core/dom';\r\n\r\nexport default class Style {\r\n  /**\r\n   * @method jQueryCSS\r\n   *\r\n   * [workaround] for old jQuery\r\n   * passing an array of style properties to .css()\r\n   * will result in an object of property-value pairs.\r\n   * (compability with version < 1.9)\r\n   *\r\n   * @private\r\n   * @param  {jQuery} $obj\r\n   * @param  {Array} propertyNames - An array of one or more CSS properties.\r\n   * @return {Object}\r\n   */\r\n  jQueryCSS($obj, propertyNames) {\r\n    const result = {};\r\n    $.each(propertyNames, (idx, propertyName) => {\r\n      result[propertyName] = $obj.css(propertyName);\r\n    });\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * returns style object from node\r\n   *\r\n   * @param {jQuery} $node\r\n   * @return {Object}\r\n   */\r\n  fromNode($node) {\r\n    const properties = ['font-family', 'font-size', 'text-align', 'list-style-type', 'line-height'];\r\n    const styleInfo = this.jQueryCSS($node, properties) || {};\r\n\r\n    const fontSize = $node[0].style.fontSize || styleInfo['font-size'];\r\n\r\n    styleInfo['font-size'] = parseInt(fontSize, 10);\r\n    styleInfo['font-size-unit'] = fontSize.match(/[a-z%]+$/);\r\n\r\n    return styleInfo;\r\n  }\r\n\r\n  /**\r\n   * paragraph level style\r\n   *\r\n   * @param {WrappedRange} rng\r\n   * @param {Object} styleInfo\r\n   */\r\n  stylePara(rng, styleInfo) {\r\n    lists.each(rng.nodes(dom.isPara, {\r\n      includeAncestor: true,\r\n    }), (para) => {\r\n      $(para).css(styleInfo);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * insert and returns styleNodes on range.\r\n   *\r\n   * @param {WrappedRange} rng\r\n   * @param {Object} [options] - options for styleNodes\r\n   * @param {String} [options.nodeName] - default: `SPAN`\r\n   * @param {Boolean} [options.expandClosestSibling] - default: `false`\r\n   * @param {Boolean} [options.onlyPartialContains] - default: `false`\r\n   * @return {Node[]}\r\n   */\r\n  styleNodes(rng, options) {\r\n    rng = rng.splitText();\r\n\r\n    const nodeName = (options && options.nodeName) || 'SPAN';\r\n    const expandClosestSibling = !!(options && options.expandClosestSibling);\r\n    const onlyPartialContains = !!(options && options.onlyPartialContains);\r\n\r\n    if (rng.collapsed) {\r\n      return [rng.insertNode(dom.create(nodeName))];\r\n    }\r\n\r\n    let pred = dom.matchNodeNames(nodeName);\r\n    const nodes = rng.nodes(dom.isText, {\r\n      fullyContains: true,\r\n    }).map((text) => {\r\n      return dom.closestSingleParent(text, pred) || dom.wrap(text, nodeName);\r\n    });\r\n\r\n    if (expandClosestSibling) {\r\n      if (onlyPartialContains) {\r\n        const nodesInRange = rng.nodes();\r\n        // compose with partial contains predication\r\n        pred = func.and(pred, (node) => {\r\n          return lists.contains(nodesInRange, node);\r\n        });\r\n      }\r\n\r\n      return nodes.map((node) => {\r\n        const siblings = dom.withClosestSiblings(node, pred);\r\n        const head = lists.head(siblings);\r\n        const tails = lists.tail(siblings);\r\n        $.each(tails, (idx, elem) => {\r\n          dom.appendChildNodes(head, elem.childNodes);\r\n          dom.remove(elem);\r\n        });\r\n        return lists.head(siblings);\r\n      });\r\n    } else {\r\n      return nodes;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * get current style on cursor\r\n   *\r\n   * @param {WrappedRange} rng\r\n   * @return {Object} - object contains style properties.\r\n   */\r\n  current(rng) {\r\n    const $cont = $(!dom.isElement(rng.sc) ? rng.sc.parentNode : rng.sc);\r\n    let styleInfo = this.fromNode($cont);\r\n\r\n    // document.queryCommandState for toggle state\r\n    // [workaround] prevent Firefox nsresult: \"0x80004005 (NS_ERROR_FAILURE)\"\r\n    try {\r\n      styleInfo = $.extend(styleInfo, {\r\n        'font-bold': document.queryCommandState('bold') ? 'bold' : 'normal',\r\n        'font-italic': document.queryCommandState('italic') ? 'italic' : 'normal',\r\n        'font-underline': document.queryCommandState('underline') ? 'underline' : 'normal',\r\n        'font-subscript': document.queryCommandState('subscript') ? 'subscript' : 'normal',\r\n        'font-superscript': document.queryCommandState('superscript') ? 'superscript' : 'normal',\r\n        'font-strikethrough': document.queryCommandState('strikethrough') ? 'strikethrough' : 'normal',\r\n        'font-family': document.queryCommandValue('fontname') || styleInfo['font-family'],\r\n      });\r\n    } catch (e) {\r\n      // eslint-disable-next-line\r\n    }\r\n\r\n    // list-style-type to list-style(unordered, ordered)\r\n    if (!rng.isOnList()) {\r\n      styleInfo['list-style'] = 'none';\r\n    } \r\n    else {\r\n      const orderedTypes = ['circle', 'disc', 'disc-leading-zero', 'square'];\r\n      const isUnordered = orderedTypes.indexOf(styleInfo['list-style-type']) > -1;\r\n      styleInfo['list-style'] = isUnordered ? 'unordered' : 'ordered';\r\n    }\r\n\r\n    const para = dom.ancestor(rng.sc, dom.isPara);\r\n    if (para && para.style['line-height']) {\r\n      styleInfo['line-height'] = para.style.lineHeight;\r\n    } else {\r\n      const lineHeight = parseInt(styleInfo['line-height'], 10) / parseInt(styleInfo['font-size'], 10);\r\n      styleInfo['line-height'] = lineHeight.toFixed(1);\r\n    }\r\n\r\n    styleInfo.anchor = rng.isOnAnchor() && dom.ancestor(rng.sc, dom.isAnchor);\r\n    styleInfo.ancestors = dom.parents(rng.sc);\r\n    styleInfo.range = rng;\r\n\r\n    return styleInfo;\r\n  }\r\n}\r\n","import $ from 'jquery';\r\nimport lists from '../core/lists';\r\nimport func from '../core/func';\r\nimport dom from '../core/dom';\r\nimport Point from '../core/Point';\r\nimport range from '../core/range';\r\n\r\nexport default class Bullet {\r\n  constructor(context) {\r\n    this.context = context;\r\n  }\r\n\r\n  get selection() {\r\n    return this.context.modules.editor.selection;\r\n  }\r\n\r\n  /**\r\n   * Toggle ordered list\r\n   */\r\n  insertOrderedList(rng) {\r\n    this.toggleList('OL', rng);\r\n  }\r\n\r\n  /**\r\n   * Toggle unordered list\r\n   */\r\n  insertUnorderedList(rng) {\r\n    this.toggleList('UL', rng);\r\n  }\r\n\r\n  /**\r\n   * indent\r\n   */\r\n  indent(rng) {\r\n    rng = rng || this.selection.getRange();\r\n    rng = rng.wrapBodyInlineWithPara();\r\n    \r\n    const paras = rng.nodes(dom.isParaNoBlockquote, { includeAncestor: true });\r\n    const clustereds = lists.clusterBy(paras, 'parentNode');\r\n\r\n    lists.each(clustereds, (paras) => {\r\n      const head = lists.head(paras);\r\n      if (dom.isLi(head)) {\r\n        const previousList = this.findList(head.previousSibling);\r\n        if (previousList) {\r\n          paras.map(para => previousList.appendChild(para));\r\n        } \r\n        else {\r\n          this.wrapList(paras, head.parentNode.nodeName);\r\n          paras.map((para) => para.parentNode).map((para) => this.appendToPrevious(para));\r\n        }\r\n      } \r\n      else {\r\n        lists.each(paras, (para) => {\r\n          $(para).css('marginLeft', (idx, val) => {\r\n            return (parseInt(val, 10) || 0) + 25;\r\n          });\r\n        });\r\n      }\r\n    });\r\n\r\n    this.selection.setRange(rng);\r\n  }\r\n\r\n  /**\r\n   * outdent\r\n   */\r\n  outdent(rng) {\r\n    rng = rng || this.selection.getRange();\r\n    rng = rng.wrapBodyInlineWithPara();\r\n\r\n    const paras = rng.nodes(dom.isParaNoBlockquote, { includeAncestor: true });\r\n    const clustereds = lists.clusterBy(paras, 'parentNode');\r\n\r\n    lists.each(clustereds, (paras) => {\r\n      const head = lists.head(paras);\r\n      if (dom.isLi(head)) {\r\n        this.releaseList([paras]);\r\n      } else {\r\n        lists.each(paras, (para) => {\r\n          $(para).css('marginLeft', (idx, val) => {\r\n            val = parseInt(val, 10) || 0;\r\n            return val > 25 ? val - 25 : '';\r\n          });\r\n        });\r\n      }\r\n    });\r\n\r\n    this.selection.setRange(rng);\r\n  }\r\n\r\n  /**\r\n   * toggle list\r\n   *\r\n   * @param {String} listName - OL or UL\r\n   */\r\n  toggleList(listName, rng) {\r\n    rng = rng || this.selection.getRange();\r\n    rng = rng.wrapBodyInlineWithPara();\r\n\r\n    let paras = rng.nodes(dom.isParaNoBlockquote, { includeAncestor: true });\r\n    const bookmark = rng.createParaBookmark(paras);\r\n    const clustereds = lists.clusterBy(paras, 'parentNode');\r\n\r\n    // paragraph to list\r\n    if (lists.find(paras, dom.isPurePara)) {\r\n      let wrappedParas = [];\r\n      lists.each(clustereds, (paras) => {\r\n        wrappedParas = wrappedParas.concat(this.wrapList(paras, listName));\r\n      });\r\n      paras = wrappedParas;\r\n    // list to paragraph or change list style\r\n    } else {\r\n      const diffLists = rng.nodes(dom.isList, {\r\n        includeAncestor: true,\r\n      }).filter((listNode) => {\r\n        return !$.nodeName(listNode, listName);\r\n      });\r\n\r\n      if (diffLists.length) {\r\n        lists.each(diffLists, (listNode) => {\r\n          dom.rename(listNode, listName);\r\n        });\r\n      } else {\r\n        paras = this.releaseList(clustereds, true);\r\n      }\r\n    }\r\n\r\n    rng = range.createFromParaBookmark(bookmark, paras);\r\n    this.selection.setRange(rng);\r\n  }\r\n\r\n  /**\r\n   * @param {Node[]} paras\r\n   * @param {String} listName\r\n   * @return {Node[]}\r\n   */\r\n  wrapList(paras, listName) {\r\n    const head = lists.head(paras);\r\n    const last = lists.last(paras);\r\n\r\n    const prevList = dom.isList(head.previousSibling) && head.previousSibling;\r\n    const nextList = dom.isList(last.nextSibling) && last.nextSibling;\r\n\r\n    //console.log('wrapList last', last);\r\n    const listNode = prevList || dom.insertAfter(last, dom.create(listName || 'UL'));\r\n\r\n    // P to LI\r\n    paras = paras.map((para) => {\r\n      return dom.isPurePara(para) ? dom.rename(para, 'LI') : para;\r\n    });\r\n\r\n    // append to list(<ul>, <ol>)\r\n    dom.appendChildNodes(listNode, paras, true);\r\n\r\n    if (nextList) {\r\n      dom.appendChildNodes(listNode, lists.from(nextList.childNodes), true);\r\n      dom.remove(nextList);\r\n    }\r\n\r\n    return paras;\r\n  }\r\n\r\n  /**\r\n   * @method releaseList\r\n   *\r\n   * @param {Array[]} clustereds\r\n   * @param {Boolean} isEscapseToBody\r\n   * @return {Node[]}\r\n   */\r\n  releaseList(clustereds, isEscapseToBody) {\r\n    let releasedParas = [];\r\n\r\n    lists.each(clustereds, (paras) => {\r\n      const head = lists.head(paras);\r\n      const last = lists.last(paras);\r\n\r\n      const headList = isEscapseToBody ? dom.farthestParent(head, dom.isList) : head.parentNode;\r\n      const parentItem = headList.parentNode;\r\n\r\n      if (headList.parentNode.nodeName === 'LI') {\r\n        paras.map(para => {\r\n          const newList = this.findNextSiblings(para);\r\n\r\n          if (parentItem.nextSibling) {\r\n            parentItem.parentNode.insertBefore(para, parentItem.nextSibling);\r\n          } else {\r\n            parentItem.parentNode.appendChild(para);\r\n          }\r\n\r\n          if (newList.length) {\r\n            this.wrapList(newList, headList.nodeName);\r\n            para.appendChild(newList[0].parentNode);\r\n          }\r\n        });\r\n\r\n        if (headList.children.length === 0) {\r\n          parentItem.removeChild(headList);\r\n        }\r\n\r\n        // remove left-over ul or ul with only whitespace node\r\n        if (parentItem.childNodes.length === 0) {\r\n          parentItem.parentNode.removeChild(parentItem);\r\n        }\r\n      } else {\r\n        const lastList =\r\n          headList.childNodes.length > 1\r\n            ? Point.splitTree(\r\n                headList,\r\n                {\r\n                  node: last.parentNode,\r\n                  offset: dom.position(last) + 1,\r\n                },\r\n                {\r\n                  skipPaddingBlankHTML: true,\r\n                },\r\n              )\r\n            : null;\r\n\r\n        const middleList = Point.splitTree(\r\n          headList,\r\n          {\r\n            node: head.parentNode,\r\n            offset: dom.position(head),\r\n          },\r\n          {\r\n            skipPaddingBlankHTML: true,\r\n          },\r\n        );\r\n\r\n        paras = isEscapseToBody \r\n          ? dom.children(middleList, dom.isLi)\r\n          : lists.from(middleList.childNodes).filter(dom.isLi);\r\n\r\n        // LI to P\r\n        if (isEscapseToBody || !dom.isList(headList.parentNode)) {\r\n          paras = paras.map((para) => {\r\n            return dom.rename(para, 'P');\r\n          });\r\n        }\r\n\r\n        lists.each(lists.from(paras).reverse(), (para) => {\r\n          dom.insertAfter(headList, para);\r\n        });\r\n\r\n        // remove empty lists\r\n        const rootLists = lists.compact([headList, middleList, lastList]);\r\n        lists.each(rootLists, (rootList) => {\r\n          const listNodes = [rootList].concat(dom.children(rootList, dom.isList));\r\n          lists.each(listNodes.reverse(), (listNode) => {\r\n            if (!dom.nodeLength(listNode)) {\r\n              dom.remove(listNode, true);\r\n            }\r\n          });\r\n        });\r\n      }\r\n\r\n      releasedParas = releasedParas.concat(paras);\r\n    });\r\n\r\n    return releasedParas;\r\n  }\r\n\r\n  /**\r\n   * @method appendToPrevious\r\n   *\r\n   * Appends list to previous list item, if\r\n   * none exist it wraps the list in a new list item.\r\n   *\r\n   * @param {HTMLNode} ListItem\r\n   * @return {HTMLNode}\r\n   */\r\n  appendToPrevious(node) {\r\n    return node.previousSibling ? dom.appendChildNodes(node.previousSibling, [node]) : this.wrapList([node], 'LI');\r\n  }\r\n\r\n  /**\r\n   * @method findList\r\n   *\r\n   * Finds an existing list in list item\r\n   *\r\n   * @param {HTMLNode} ListItem\r\n   * @return {Array[]}\r\n   */\r\n  findList(node) {\r\n    return node ? lists.find(node.children, (child) => ['OL', 'UL'].indexOf(child.nodeName) > -1) : null;\r\n  }\r\n\r\n  /**\r\n   * @method findNextElementSiblings\r\n   *\r\n   * Finds all list item siblings that follow it\r\n   *\r\n   * @param {HTMLNode} ListItem\r\n   * @return {HTMLNode}\r\n   */\r\n  findNextSiblings(node) {\r\n    const siblings = [];\r\n    while (node.nextSibling) {\r\n      siblings.push(node.nextSibling);\r\n      node = node.nextSibling;\r\n    }\r\n    return siblings;\r\n  }\r\n}\r\n","import $ from 'jquery';\r\nimport dom from '../core/dom';\r\nimport lists from '../core/lists';\r\nimport func from '../core/func';\r\nimport range from '../core/range';\r\nimport Point from '../core/Point';\r\nimport Bullet from '../editing/Bullet';\r\n\r\n/**\r\n * @class editing.Typing\r\n *\r\n * Typing\r\n *\r\n */\r\nexport default class Typing {\r\n  constructor(context) {\r\n    this.context = context;\r\n    this.options = context.options;\r\n    // a Bullet instance to toggle lists off\r\n    this.bullet = new Bullet(context);\r\n  }\r\n\r\n  get selection() {\r\n    return this.context.modules.editor.selection;\r\n  }\r\n\r\n  /**\r\n   * insert tab\r\n   *\r\n   * @param {WrappedRange} rng\r\n   * @param {Number} tabsize\r\n   */\r\n  insertTab(rng, tabsize) {\r\n    const tab = dom.createText(new Array(tabsize + 1).join(Point.NBSP_CHAR));\r\n    rng = rng.deleteContents();\r\n    rng.insertNode(tab, true);\r\n\r\n    rng = range.create(tab, tabsize);\r\n    this.selection.setRange(rng);\r\n  }\r\n\r\n  /**\r\n   * insert paragraph\r\n   *\r\n   * @param {WrappedRange} rng Can be used in unit tests to \"mock\" the range\r\n   *\r\n   * blockquoteBreakingLevel\r\n   *   0 - No break, the new paragraph remains inside the quote\r\n   *   1 - Break the first blockquote in the ancestors list\r\n   *   2 - Break all blockquotes, so that the new paragraph is not quoted (this is the default)\r\n   */\r\n  insertParagraph(rng) {\r\n    rng = rng || this.selection.getRange();\r\n\r\n    // deleteContents on range.\r\n    rng = rng.deleteContents();\r\n\r\n    // Wrap range if it needs to be wrapped by paragraph\r\n    rng = rng.wrapBodyInlineWithPara();\r\n    \r\n    // finding paragraph\r\n    const splitRoot = dom.closest(rng.sc, dom.isParaNoBlockquote);\r\n\r\n    let nextPara;\r\n    // on paragraph: split paragraph\r\n    if (splitRoot) {\r\n      // if it is an empty line with li\r\n      if (dom.isLi(splitRoot) && (dom.isEmpty(splitRoot) || dom.deepestChildIsEmpty(splitRoot))) {\r\n        // toggle UL/OL and escape\r\n        this.bullet.toggleList(splitRoot.parentNode.nodeName);\r\n        return;\r\n      } \r\n      else {\r\n        let blockquote = null;\r\n        if (this.options.blockquoteBreakingLevel === 1) {\r\n          blockquote = dom.closest(splitRoot, dom.isBlockquote);\r\n        } else if (this.options.blockquoteBreakingLevel === 2) {\r\n          blockquote = dom.farthestParent(splitRoot, dom.isBlockquote);\r\n        }\r\n\r\n        if (blockquote) {\r\n          // We're inside a blockquote and options ask us to break it\r\n          nextPara = $(dom.emptyPara)[0];\r\n          // If the split is right before a <br>, remove it so that there's no \"empty line\"\r\n          // after the split in the new blockquote created\r\n          if (Point.isRightEdgePoint(rng.getStartPoint()) && dom.isBR(rng.sc.nextSibling)) {\r\n            $(rng.sc.nextSibling).remove();\r\n          }\r\n          const split = Point.splitTree(blockquote, rng.getStartPoint(), { discardEmptySplits: true });\r\n          if (split) {\r\n            split.parentNode.insertBefore(nextPara, split);\r\n          } \r\n          else {\r\n            dom.insertAfter(blockquote, nextPara); // There's no split if we were at the end of the blockquote\r\n          }\r\n        }\r\n        else {\r\n          nextPara = Point.splitTree(splitRoot, rng.getStartPoint());\r\n\r\n          // not a blockquote, just insert the paragraph\r\n          let emptyAnchors = dom.children(splitRoot, dom.isEmptyAnchor);\r\n          emptyAnchors = emptyAnchors.concat(dom.children(nextPara, dom.isEmptyAnchor));\r\n\r\n          lists.each(emptyAnchors, (anchor) => {\r\n            dom.remove(anchor);\r\n          });\r\n\r\n          // replace empty heading, pre or custom-made styleTag with P tag\r\n          if ((dom.isHeading(nextPara) || dom.isPre(nextPara) || dom.isCustomStyleTag(nextPara)) && dom.isEmpty(nextPara)) {\r\n            nextPara = dom.rename(nextPara, 'p');\r\n          }\r\n        }\r\n      }\r\n    // no paragraph: insert empty paragraph\r\n    } \r\n    else {\r\n      const next = rng.sc.childNodes[rng.so];\r\n      nextPara = $(dom.emptyPara)[0];\r\n      if (next) {\r\n        rng.sc.insertBefore(nextPara, next);\r\n      } \r\n      else {\r\n        rng.sc.appendChild(nextPara);\r\n      }\r\n    }\r\n\r\n    this.selection.setRange(range.create(nextPara, 0).normalize()).scrollIntoView();\r\n  }\r\n}\r\n","import $ from 'jquery';\r\nimport dom from '../core/dom';\r\nimport range from '../core/range';\r\nimport lists from '../core/lists';\r\n\r\n/**\r\n * @class Create a virtual table to create what actions to do in change.\r\n * @param {object} startPoint Cell selected to apply change.\r\n * @param {enum} where  Where change will be applied Row or Col. Use enum: TableResultAction.where\r\n * @param {enum} action Action to be applied. Use enum: TableResultAction.requestAction\r\n * @param {object} domTable Dom element of table to make changes.\r\n */\r\nconst TableResultAction = function(startPoint, where, action, domTable) {\r\n  const _startPoint = { 'colPos': 0, 'rowPos': 0 };\r\n  const _virtualTable = [];\r\n  const _actionCellList = [];\r\n\r\n  /// ///////////////////////////////////////////\r\n  // Private functions\r\n  /// ///////////////////////////////////////////\r\n\r\n  /**\r\n   * Set the startPoint of action.\r\n   */\r\n  function setStartPoint() {\r\n    if (!startPoint || !startPoint.tagName || (startPoint.tagName.toLowerCase() !== 'td' && startPoint.tagName.toLowerCase() !== 'th')) {\r\n      // Impossible to identify start Cell point\r\n      return;\r\n    }\r\n    _startPoint.colPos = startPoint.cellIndex;\r\n    if (!startPoint.parentElement || !startPoint.parentElement.tagName || startPoint.parentElement.tagName.toLowerCase() !== 'tr') {\r\n      // Impossible to identify start Row point\r\n      return;\r\n    }\r\n    _startPoint.rowPos = startPoint.parentElement.rowIndex;\r\n  }\r\n\r\n  /**\r\n   * Define virtual table position info object.\r\n   *\r\n   * @param {int} rowIndex Index position in line of virtual table.\r\n   * @param {int} cellIndex Index position in column of virtual table.\r\n   * @param {object} baseRow Row affected by this position.\r\n   * @param {object} baseCell Cell affected by this position.\r\n   * @param {bool} isSpan Inform if it is an span cell/row.\r\n   */\r\n  function setVirtualTablePosition(rowIndex, cellIndex, baseRow, baseCell, isRowSpan, isColSpan, isVirtualCell) {\r\n    const objPosition = {\r\n      'baseRow': baseRow,\r\n      'baseCell': baseCell,\r\n      'isRowSpan': isRowSpan,\r\n      'isColSpan': isColSpan,\r\n      'isVirtual': isVirtualCell,\r\n    };\r\n    if (!_virtualTable[rowIndex]) {\r\n      _virtualTable[rowIndex] = [];\r\n    }\r\n    _virtualTable[rowIndex][cellIndex] = objPosition;\r\n  }\r\n\r\n  /**\r\n   * Create action cell object.\r\n   *\r\n   * @param {object} virtualTableCellObj Object of specific position on virtual table.\r\n   * @param {enum} resultAction Action to be applied in that item.\r\n   */\r\n  function getActionCell(virtualTableCellObj, resultAction, virtualRowPosition, virtualColPosition) {\r\n    return {\r\n      'baseCell': virtualTableCellObj.baseCell,\r\n      'action': resultAction,\r\n      'virtualTable': {\r\n        'rowIndex': virtualRowPosition,\r\n        'cellIndex': virtualColPosition,\r\n      },\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Recover free index of row to append Cell.\r\n   *\r\n   * @param {int} rowIndex Index of row to find free space.\r\n   * @param {int} cellIndex Index of cell to find free space in table.\r\n   */\r\n  function recoverCellIndex(rowIndex, cellIndex) {\r\n    if (!_virtualTable[rowIndex]) {\r\n      return cellIndex;\r\n    }\r\n    if (!_virtualTable[rowIndex][cellIndex]) {\r\n      return cellIndex;\r\n    }\r\n\r\n    let newCellIndex = cellIndex;\r\n    while (_virtualTable[rowIndex][newCellIndex]) {\r\n      newCellIndex++;\r\n      if (!_virtualTable[rowIndex][newCellIndex]) {\r\n        return newCellIndex;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Recover info about row and cell and add information to virtual table.\r\n   *\r\n   * @param {object} row Row to recover information.\r\n   * @param {object} cell Cell to recover information.\r\n   */\r\n  function addCellInfoToVirtual(row, cell) {\r\n    const cellIndex = recoverCellIndex(row.rowIndex, cell.cellIndex);\r\n    const cellHasColspan = (cell.colSpan > 1);\r\n    const cellHasRowspan = (cell.rowSpan > 1);\r\n    const isThisSelectedCell = (row.rowIndex === _startPoint.rowPos && cell.cellIndex === _startPoint.colPos);\r\n    setVirtualTablePosition(row.rowIndex, cellIndex, row, cell, cellHasRowspan, cellHasColspan, false);\r\n\r\n    // Add span rows to virtual Table.\r\n    const rowspanNumber = cell.attributes.rowSpan ? parseInt(cell.attributes.rowSpan.value, 10) : 0;\r\n    if (rowspanNumber > 1) {\r\n      for (let rp = 1; rp < rowspanNumber; rp++) {\r\n        const rowspanIndex = row.rowIndex + rp;\r\n        adjustStartPoint(rowspanIndex, cellIndex, cell, isThisSelectedCell);\r\n        setVirtualTablePosition(rowspanIndex, cellIndex, row, cell, true, cellHasColspan, true);\r\n      }\r\n    }\r\n\r\n    // Add span cols to virtual table.\r\n    const colspanNumber = cell.attributes.colSpan ? parseInt(cell.attributes.colSpan.value, 10) : 0;\r\n    if (colspanNumber > 1) {\r\n      for (let cp = 1; cp < colspanNumber; cp++) {\r\n        const cellspanIndex = recoverCellIndex(row.rowIndex, (cellIndex + cp));\r\n        adjustStartPoint(row.rowIndex, cellspanIndex, cell, isThisSelectedCell);\r\n        setVirtualTablePosition(row.rowIndex, cellspanIndex, row, cell, cellHasRowspan, true, true);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Process validation and adjust of start point if needed\r\n   *\r\n   * @param {int} rowIndex\r\n   * @param {int} cellIndex\r\n   * @param {object} cell\r\n   * @param {bool} isSelectedCell\r\n   */\r\n  function adjustStartPoint(rowIndex, cellIndex, cell, isSelectedCell) {\r\n    if (rowIndex === _startPoint.rowPos && _startPoint.colPos >= cell.cellIndex && cell.cellIndex <= cellIndex && !isSelectedCell) {\r\n      _startPoint.colPos++;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create virtual table of cells with all cells, including span cells.\r\n   */\r\n  function createVirtualTable() {\r\n    const rows = domTable.rows;\r\n    for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\r\n      const cells = rows[rowIndex].cells;\r\n      for (let cellIndex = 0; cellIndex < cells.length; cellIndex++) {\r\n        addCellInfoToVirtual(rows[rowIndex], cells[cellIndex]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get action to be applied on the cell.\r\n   *\r\n   * @param {object} cell virtual table cell to apply action\r\n   */\r\n  function getDeleteResultActionToCell(cell) {\r\n    switch (where) {\r\n      case TableResultAction.where.Column:\r\n        if (cell.isColSpan) {\r\n          return TableResultAction.resultAction.SubtractSpanCount;\r\n        }\r\n        break;\r\n      case TableResultAction.where.Row:\r\n        if (!cell.isVirtual && cell.isRowSpan) {\r\n          return TableResultAction.resultAction.AddCell;\r\n        } else if (cell.isRowSpan) {\r\n          return TableResultAction.resultAction.SubtractSpanCount;\r\n        }\r\n        break;\r\n    }\r\n    return TableResultAction.resultAction.RemoveCell;\r\n  }\r\n\r\n  /**\r\n   * Get action to be applied on the cell.\r\n   *\r\n   * @param {object} cell virtual table cell to apply action\r\n   */\r\n  function getAddResultActionToCell(cell) {\r\n    switch (where) {\r\n      case TableResultAction.where.Column:\r\n        if (cell.isColSpan) {\r\n          return TableResultAction.resultAction.SumSpanCount;\r\n        } else if (cell.isRowSpan && cell.isVirtual) {\r\n          return TableResultAction.resultAction.Ignore;\r\n        }\r\n        break;\r\n      case TableResultAction.where.Row:\r\n        if (cell.isRowSpan) {\r\n          return TableResultAction.resultAction.SumSpanCount;\r\n        } else if (cell.isColSpan && cell.isVirtual) {\r\n          return TableResultAction.resultAction.Ignore;\r\n        }\r\n        break;\r\n    }\r\n    return TableResultAction.resultAction.AddCell;\r\n  }\r\n\r\n  function init() {\r\n    setStartPoint();\r\n    createVirtualTable();\r\n  }\r\n\r\n  /// ///////////////////////////////////////////\r\n  // Public functions\r\n  /// ///////////////////////////////////////////\r\n\r\n  /**\r\n   * Recover array os what to do in table.\r\n   */\r\n  this.getActionList = function() {\r\n    const fixedRow = (where === TableResultAction.where.Row) ? _startPoint.rowPos : -1;\r\n    const fixedCol = (where === TableResultAction.where.Column) ? _startPoint.colPos : -1;\r\n\r\n    let actualPosition = 0;\r\n    let canContinue = true;\r\n    while (canContinue) {\r\n      const rowPosition = (fixedRow >= 0) ? fixedRow : actualPosition;\r\n      const colPosition = (fixedCol >= 0) ? fixedCol : actualPosition;\r\n      const row = _virtualTable[rowPosition];\r\n      if (!row) {\r\n        canContinue = false;\r\n        return _actionCellList;\r\n      }\r\n      const cell = row[colPosition];\r\n      if (!cell) {\r\n        canContinue = false;\r\n        return _actionCellList;\r\n      }\r\n\r\n      // Define action to be applied in this cell\r\n      let resultAction = TableResultAction.resultAction.Ignore;\r\n      switch (action) {\r\n        case TableResultAction.requestAction.Add:\r\n          resultAction = getAddResultActionToCell(cell);\r\n          break;\r\n        case TableResultAction.requestAction.Delete:\r\n          resultAction = getDeleteResultActionToCell(cell);\r\n          break;\r\n      }\r\n      _actionCellList.push(getActionCell(cell, resultAction, rowPosition, colPosition));\r\n      actualPosition++;\r\n    }\r\n\r\n    return _actionCellList;\r\n  };\r\n\r\n  init();\r\n};\r\n/**\r\n*\r\n* Where action occours enum.\r\n*/\r\nTableResultAction.where = { 'Row': 0, 'Column': 1 };\r\n/**\r\n*\r\n* Requested action to apply enum.\r\n*/\r\nTableResultAction.requestAction = { 'Add': 0, 'Delete': 1 };\r\n/**\r\n*\r\n* Result action to be executed enum.\r\n*/\r\nTableResultAction.resultAction = { 'Ignore': 0, 'SubtractSpanCount': 1, 'RemoveCell': 2, 'AddCell': 3, 'SumSpanCount': 4 };\r\n\r\n/**\r\n *\r\n * @class editing.Table\r\n *\r\n * Table\r\n *\r\n */\r\nexport default class Table {\r\n  constructor(context) {\r\n    this.context = context;\r\n  }\r\n\r\n  get selection() {\r\n    return this.context.modules.editor.selection;\r\n  }\r\n\r\n  /**\r\n   * handle tab key\r\n   *\r\n   * @param {WrappedRange} rng\r\n   * @param {Boolean} isShift\r\n   */\r\n  tab(rng, isShift) {\r\n    const cell = dom.closest(rng.commonAncestorContainer, dom.isCell);\r\n    const table = dom.closest(cell, dom.isTable);\r\n    const cells = dom.children(table, dom.isCell);\r\n\r\n    const nextCell = lists[isShift ? 'prev' : 'next'](cells, cell);\r\n    if (nextCell) {\r\n      this.selection.setRange(range.create(nextCell, 0));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a new row\r\n   *\r\n   * @param {WrappedRange} rng\r\n   * @param {String} position (top/bottom)\r\n   * @return {Node}\r\n   */\r\n  addRow(rng, position) {\r\n    const cell = dom.ancestor(rng.commonAncestorContainer, dom.isCell);\r\n\r\n    const currentTr = $(cell).closest('tr');\r\n    const trAttributes = this.recoverAttributes(currentTr);\r\n    const html = $('<tr' + trAttributes + '></tr>');\r\n\r\n    const vTable = new TableResultAction(cell, TableResultAction.where.Row,\r\n      TableResultAction.requestAction.Add, $(currentTr).closest('table')[0]);\r\n    const actions = vTable.getActionList();\r\n\r\n    for (let idCell = 0; idCell < actions.length; idCell++) {\r\n      const currentCell = actions[idCell];\r\n      const tdAttributes = this.recoverAttributes(currentCell.baseCell);\r\n      switch (currentCell.action) {\r\n        case TableResultAction.resultAction.AddCell:\r\n          html.append('<td' + tdAttributes + '>' + dom.blank + '</td>');\r\n          break;\r\n        case TableResultAction.resultAction.SumSpanCount:\r\n          {\r\n            if (position === 'top') {\r\n              const baseCellTr = currentCell.baseCell.parent;\r\n              const isTopFromRowSpan = (!baseCellTr ? 0 : currentCell.baseCell.closest('tr').rowIndex) <= currentTr[0].rowIndex;\r\n              if (isTopFromRowSpan) {\r\n                const newTd = $('<div></div>').append($('<td' + tdAttributes + '>' + dom.blank + '</td>').removeAttr('rowspan')).html();\r\n                html.append(newTd);\r\n                break;\r\n              }\r\n            }\r\n            let rowspanNumber = parseInt(currentCell.baseCell.rowSpan, 10);\r\n            rowspanNumber++;\r\n            currentCell.baseCell.setAttribute('rowSpan', rowspanNumber);\r\n          }\r\n          break;\r\n      }\r\n    }\r\n\r\n    if (position === 'top') {\r\n      currentTr.before(html);\r\n    } else {\r\n      const cellHasRowspan = (cell.rowSpan > 1);\r\n      if (cellHasRowspan) {\r\n        const lastTrIndex = currentTr[0].rowIndex + (cell.rowSpan - 2);\r\n        $($(currentTr).parent().find('tr')[lastTrIndex]).after($(html));\r\n        return;\r\n      }\r\n      currentTr.after(html);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a new col\r\n   *\r\n   * @param {WrappedRange} rng\r\n   * @param {String} position (left/right)\r\n   * @return {Node}\r\n   */\r\n  addCol(rng, position) {\r\n    const cell = dom.ancestor(rng.commonAncestorContainer, dom.isCell);\r\n    const row = $(cell).closest('tr');\r\n    const rowsGroup = $(row).siblings();\r\n    rowsGroup.push(row);\r\n\r\n    const vTable = new TableResultAction(cell, TableResultAction.where.Column,\r\n      TableResultAction.requestAction.Add, $(row).closest('table')[0]);\r\n    const actions = vTable.getActionList();\r\n\r\n    for (let actionIndex = 0; actionIndex < actions.length; actionIndex++) {\r\n      const currentCell = actions[actionIndex];\r\n      const tdAttributes = this.recoverAttributes(currentCell.baseCell);\r\n      switch (currentCell.action) {\r\n        case TableResultAction.resultAction.AddCell:\r\n          if (position === 'right') {\r\n            $(currentCell.baseCell).after('<td' + tdAttributes + '>' + dom.blank + '</td>');\r\n          } else {\r\n            $(currentCell.baseCell).before('<td' + tdAttributes + '>' + dom.blank + '</td>');\r\n          }\r\n          break;\r\n        case TableResultAction.resultAction.SumSpanCount:\r\n          if (position === 'right') {\r\n            let colspanNumber = parseInt(currentCell.baseCell.colSpan, 10);\r\n            colspanNumber++;\r\n            currentCell.baseCell.setAttribute('colSpan', colspanNumber);\r\n          } else {\r\n            $(currentCell.baseCell).before('<td' + tdAttributes + '>' + dom.blank + '</td>');\r\n          }\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /*\r\n  * Copy attributes from element.\r\n  *\r\n  * @param {object} Element to recover attributes.\r\n  * @return {string} Copied string elements.\r\n  */\r\n  recoverAttributes(el) {\r\n    let resultStr = '';\r\n\r\n    if (!el) {\r\n      return resultStr;\r\n    }\r\n\r\n    const attrList = el.attributes || [];\r\n\r\n    for (let i = 0; i < attrList.length; i++) {\r\n      if (attrList[i].name.toLowerCase() === 'id') {\r\n        continue;\r\n      }\r\n\r\n      if (attrList[i].specified) {\r\n        resultStr += ' ' + attrList[i].name + '=\\'' + attrList[i].value + '\\'';\r\n      }\r\n    }\r\n\r\n    return resultStr;\r\n  }\r\n\r\n  /**\r\n   * Delete current row\r\n   *\r\n   * @param {WrappedRange} rng\r\n   * @return {Node}\r\n   */\r\n  deleteRow(rng) {\r\n    const cell = dom.ancestor(rng.commonAncestorContainer, dom.isCell);\r\n    const row = $(cell).closest('tr');\r\n    const cellPos = row.children('td, th').index($(cell));\r\n    const rowPos = row[0].rowIndex;\r\n\r\n    const vTable = new TableResultAction(cell, TableResultAction.where.Row,\r\n      TableResultAction.requestAction.Delete, $(row).closest('table')[0]);\r\n    const actions = vTable.getActionList();\r\n\r\n    for (let actionIndex = 0; actionIndex < actions.length; actionIndex++) {\r\n      if (!actions[actionIndex]) {\r\n        continue;\r\n      }\r\n\r\n      const baseCell = actions[actionIndex].baseCell;\r\n      const virtualPosition = actions[actionIndex].virtualTable;\r\n      const hasRowspan = (baseCell.rowSpan && baseCell.rowSpan > 1);\r\n      let rowspanNumber = (hasRowspan) ? parseInt(baseCell.rowSpan, 10) : 0;\r\n      switch (actions[actionIndex].action) {\r\n        case TableResultAction.resultAction.Ignore:\r\n          continue;\r\n        case TableResultAction.resultAction.AddCell:\r\n          {\r\n            const nextRow = row.next('tr')[0];\r\n            if (!nextRow) { continue; }\r\n            const cloneRow = row[0].cells[cellPos];\r\n            if (hasRowspan) {\r\n              if (rowspanNumber > 2) {\r\n                rowspanNumber--;\r\n                nextRow.insertBefore(cloneRow, nextRow.cells[cellPos]);\r\n                nextRow.cells[cellPos].setAttribute('rowSpan', rowspanNumber);\r\n                nextRow.cells[cellPos].innerHTML = '';\r\n              } else if (rowspanNumber === 2) {\r\n                nextRow.insertBefore(cloneRow, nextRow.cells[cellPos]);\r\n                nextRow.cells[cellPos].removeAttribute('rowSpan');\r\n                nextRow.cells[cellPos].innerHTML = '';\r\n              }\r\n            }\r\n          }\r\n          continue;\r\n        case TableResultAction.resultAction.SubtractSpanCount:\r\n          if (hasRowspan) {\r\n            if (rowspanNumber > 2) {\r\n              rowspanNumber--;\r\n              baseCell.setAttribute('rowSpan', rowspanNumber);\r\n              if (virtualPosition.rowIndex !== rowPos && baseCell.cellIndex === cellPos) { baseCell.innerHTML = ''; }\r\n            } else if (rowspanNumber === 2) {\r\n              baseCell.removeAttribute('rowSpan');\r\n              if (virtualPosition.rowIndex !== rowPos && baseCell.cellIndex === cellPos) { baseCell.innerHTML = ''; }\r\n            }\r\n          }\r\n          continue;\r\n        case TableResultAction.resultAction.RemoveCell:\r\n          // Do not need remove cell because row will be deleted.\r\n          continue;\r\n      }\r\n    }\r\n    row.remove();\r\n  }\r\n\r\n  /**\r\n   * Delete current col\r\n   *\r\n   * @param {WrappedRange} rng\r\n   * @return {Node}\r\n   */\r\n  deleteCol(rng) {\r\n    const cell = dom.ancestor(rng.commonAncestorContainer, dom.isCell);\r\n    const row = $(cell).closest('tr');\r\n    const cellPos = row.children('td, th').index($(cell));\r\n\r\n    const vTable = new TableResultAction(cell, TableResultAction.where.Column,\r\n      TableResultAction.requestAction.Delete, $(row).closest('table')[0]);\r\n    const actions = vTable.getActionList();\r\n\r\n    for (let actionIndex = 0; actionIndex < actions.length; actionIndex++) {\r\n      if (!actions[actionIndex]) {\r\n        continue;\r\n      }\r\n      switch (actions[actionIndex].action) {\r\n        case TableResultAction.resultAction.Ignore:\r\n          continue;\r\n        case TableResultAction.resultAction.SubtractSpanCount:\r\n          {\r\n            const baseCell = actions[actionIndex].baseCell;\r\n            const hasColspan = (baseCell.colSpan && baseCell.colSpan > 1);\r\n            if (hasColspan) {\r\n              let colspanNumber = (baseCell.colSpan) ? parseInt(baseCell.colSpan, 10) : 0;\r\n              if (colspanNumber > 2) {\r\n                colspanNumber--;\r\n                baseCell.setAttribute('colSpan', colspanNumber);\r\n                if (baseCell.cellIndex === cellPos) { baseCell.innerHTML = ''; }\r\n              } else if (colspanNumber === 2) {\r\n                baseCell.removeAttribute('colSpan');\r\n                if (baseCell.cellIndex === cellPos) { baseCell.innerHTML = ''; }\r\n              }\r\n            }\r\n          }\r\n          continue;\r\n        case TableResultAction.resultAction.RemoveCell:\r\n          dom.remove(actions[actionIndex].baseCell, true);\r\n          continue;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * create empty table element\r\n   *\r\n   * @param {Number} rowCount\r\n   * @param {Number} colCount\r\n   * @return {Node}\r\n   */\r\n  createTable(colCount, rowCount, options) {\r\n    const tds = [];\r\n    let tdHTML;\r\n    for (let idxCol = 0; idxCol < colCount; idxCol++) {\r\n      tds.push('<td>' + dom.blank + '</td>');\r\n    }\r\n    tdHTML = tds.join('');\r\n\r\n    const trs = [];\r\n    let trHTML;\r\n    for (let idxRow = 0; idxRow < rowCount; idxRow++) {\r\n      trs.push('<tr>' + tdHTML + '</tr>');\r\n    }\r\n    trHTML = trs.join('');\r\n    const $table = $('<table>' + trHTML + '</table>');\r\n    if (options && options.tableClassName) {\r\n      $table.addClass(options.tableClassName);\r\n    }\r\n\r\n    return $table[0];\r\n  }\r\n\r\n  /**\r\n   * Delete current table\r\n   *\r\n   * @param {WrappedRange} rng\r\n   * @return {Node}\r\n   */\r\n  deleteTable(rng) {\r\n    const cell = dom.ancestor(rng.commonAncestorContainer, dom.isCell);\r\n    $(cell).closest('table').remove();\r\n  }\r\n}\r\n","import func from '../core/func';\r\nimport lists from '../core/lists';\r\nimport dom from '../core/dom';\r\nimport range from '../core/range';\r\n\r\nconst isValidTextNode = (node) => dom.isText(node) && node.data.length > 0;\r\n\r\nconst createBookmarkSpan = (id, filled) => {\r\n  const args = { 'data-note-type': 'bookmark', id: id, 'style': 'overflow:hidden;line-height:0px' };\r\n  return filled ? dom.create('span', args, '&#xFEFF;') : dom.create('span', args);\r\n};\r\n\r\nconst findIndex = (editable, name, element) => {\r\n  let count = 0;\r\n\r\n  lists.each(dom.select(editable, name), (node) => {\r\n    if (node.getAttribute('data-note-bogus') === 'all') {\r\n      return;\r\n    } else if (node === element) {\r\n      return false;\r\n    } else {\r\n      count++;\r\n      return;\r\n    }\r\n  });\r\n\r\n  return count;\r\n};\r\n\r\nconst moveEndPoint = (rng, start) => {\r\n  let container = start ? rng.startContainer : rng.endContainer;\r\n  let offset = start ? rng.startOffset : rng.endOffset;\r\n\r\n  // normalize Table Cell selection\r\n  if (dom.isElement(container) && container.nodeName === 'TR') {\r\n    const childNodes = container.childNodes;\r\n    container = childNodes[Math.min(start ? offset : offset - 1, childNodes.length - 1)];\r\n    if (container) {\r\n      offset = start ? 0 : container.childNodes.length;\r\n      if (start) {\r\n        rng.setStart(container, offset);\r\n      } else {\r\n        rng.setEnd(container, offset);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst normalizeTableCellSelection = (rng) => {\r\n  moveEndPoint(rng, true);\r\n  moveEndPoint(rng, false);\r\n  return rng;\r\n};\r\n\r\nconst addBogus = (node) => {\r\n  // Adds a bogus BR element for empty block elements\r\n  if (dom.isElement(node) && dom.isBlock(node) && !node.innerHTML) {\r\n    node.innerHTML = '<br data-note-bogus=\"1\" />';\r\n  }\r\n\r\n  return node;\r\n};\r\n\r\nconst restoreEndPoint = (suffix, bookmark) => {\r\n  const marker = document.getElementById(bookmark.id + '_' + suffix);\r\n  const markerParent = marker?.parentNode;\r\n  const keep = bookmark.keep;\r\n\r\n  if (marker && markerParent) {\r\n    let container;\r\n    let offset;\r\n\r\n    if (suffix === 'start') {\r\n      if (!keep) {\r\n        container = markerParent;\r\n        offset = dom.position(marker);\r\n      } else {\r\n        if (marker.hasChildNodes()) {\r\n          container = marker.firstChild;\r\n          offset = 1;\r\n        } else if (isValidTextNode(marker.nextSibling)) {\r\n          container = marker.nextSibling;\r\n          offset = 0;\r\n        } else if (isValidTextNode(marker.previousSibling)) {\r\n          container = marker.previousSibling;\r\n          offset = marker.previousSibling.data.length;\r\n        } else {\r\n          container = markerParent;\r\n          offset = dom.position(marker) + 1;\r\n        }\r\n      }\r\n    } else {\r\n      if (!keep) {\r\n        container = markerParent;\r\n        offset = dom.position(marker);\r\n      } else {\r\n        if (marker.hasChildNodes()) {\r\n          container = marker.firstChild;\r\n          offset = 1;\r\n        } else if (isValidTextNode(marker.previousSibling)) {\r\n          container = marker.previousSibling;\r\n          offset = marker.previousSibling.data.length;\r\n        } else {\r\n          container = markerParent;\r\n          offset = dom.position(marker);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!keep) {\r\n      const prev = marker.previousSibling;\r\n      const next = marker.nextSibling;\r\n\r\n      // Remove all marker text nodes\r\n      lists.each(marker.childNodes, (node) => {\r\n        if (dom.isText(node)) {\r\n          node.data = node.data.replace(/\\uFEFF/g, '');\r\n        }\r\n      });\r\n\r\n      // Remove marker but keep children if for example contents where inserted into the marker\r\n      // Also remove duplicated instances of the marker for example by a\r\n      // split operation or by WebKit auto split on paste feature\r\n      let otherMarker;\r\n      while ((otherMarker = document.getElementById(bookmark.id + '_' + suffix))) {\r\n        dom.remove(otherMarker, false);\r\n      }\r\n\r\n      // If siblings are text nodes then merge them\r\n      if (dom.isText(next) && dom.isText(prev)) {\r\n        const idx = prev.data.length;\r\n        prev.appendData(next.data);\r\n        dom.remove(next, true);\r\n\r\n        container = prev;\r\n        offset = idx;\r\n      }\r\n    }\r\n\r\n    return { node: container, offset: offset };\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst trimEmptyTextNode = (node) => {\r\n  if (dom.isText(node) && node.data.length === 0) {\r\n    dom.remove(node, true);\r\n  }\r\n};\r\n\r\nconst insertNode = (rng, node) => {\r\n  range.getNativeRange(rng).insertNode(node);\r\n  trimEmptyTextNode(node.previousSibling);\r\n  trimEmptyTextNode(node.nextSibling);\r\n};\r\n\r\nconst insertFragment = (rng, frag) => {\r\n  const firstChild = frag.firstChild;\r\n  const lastChild = frag.lastChild;\r\n\r\n  range.getNativeRange(rng).insertNode(frag);\r\n\r\n  trimEmptyTextNode(firstChild?.previousSibling);\r\n  trimEmptyTextNode(lastChild?.nextSibling);\r\n};\r\n\r\n// Wrapper to Range.insertNode which removes any empty text nodes created in the process.\r\n// Doesn't merge adjacent text nodes - this is according to the DOM spec.\r\nconst rangeInsertNode = (rng, node) => {\r\n  if (dom.isDocumentFragment(node)) {\r\n    insertFragment(rng, node);\r\n  } else {\r\n    insertNode(rng, node);\r\n  }\r\n};\r\n\r\nconst getPersistentBookmark = (selection, filled) => {\r\n  let rng = selection.getRange();\r\n  const id = func.uniqueId('note_');\r\n  const collapsed = rng.collapsed;\r\n  const element = selection.getNode();\r\n  const name = element.nodeName;\r\n  const forward = selection.isForward();\r\n\r\n  if (name === 'IMG') {\r\n    return { name, index: findIndex(selection.editor.editable, name, element) };\r\n  }\r\n\r\n  const rng2 = normalizeTableCellSelection(rng.cloneRange());\r\n\r\n  // Insert end marker\r\n  if (!collapsed) {\r\n    rng2.collapse(false);\r\n    const endBookmarkNode = createBookmarkSpan(id + '_end', filled);\r\n    rangeInsertNode(rng2, endBookmarkNode);\r\n  }\r\n\r\n  rng = normalizeTableCellSelection(rng);\r\n  rng.collapse(true);\r\n  const startBookmarkNode = createBookmarkSpan(id + '_start', filled);\r\n\r\n  rangeInsertNode(rng, startBookmarkNode);\r\n\r\n  selection.moveToBookmark({ id, keep: true, forward });\r\n\r\n  return { id, forward };\r\n};\r\n\r\nconst resolvePersistentBookmark = (bookmark) => {\r\n  const startPos = restoreEndPoint('start', bookmark);\r\n  const endPos = restoreEndPoint('end', bookmark) || startPos;\r\n\r\n  if (startPos && endPos) {\r\n    const rng = range.create(addBogus(startPos.node), startPos.offset, addBogus(endPos.node), endPos.offset);\r\n    return { range: rng, forward: bookmark.forward === true };\r\n  }\r\n  \r\n  return null;\r\n};\r\n\r\nexport default {\r\n  moveEndPoint,\r\n  getPersistentBookmark,\r\n  resolvePersistentBookmark\r\n}\r\n\r\n","import Type from '../core/Type';\r\nimport func from '../core/func';\r\nimport lists from '../core/lists';\r\nimport dom from '../core/dom';\r\nimport range from '../core/range';\r\nimport Bookmark from './Bookmark';\r\nimport $ from 'jquery';\r\n//import DomTreeWalker from '../util/DomTreeWalker';\r\n\r\nlet win = window;\r\n\r\nconst createRootRange = (editor) => {\r\n  let rng = range.create(editor.editable);\r\n  if ($(rng.sc).closest('.note-editable').length === 0) {\r\n    rng = range.createFromBodyElement(editor.editable);\r\n  }\r\n\r\n  return rng;\r\n};\r\n\r\nconst getEndpointElement = (\r\n  root,\r\n  rng,\r\n  start,\r\n  real,\r\n  // (fn(elm:Node, offset:number) => number)\r\n  resolve\r\n) => {\r\n  let container = start ? rng.startContainer : rng.endContainer;\r\n  let offset = start ? rng.startOffset : rng.endOffset;\r\n\r\n  if (container) {\r\n    if (!real || !rng.collapsed) {\r\n      container = container.childNodes[resolve(container, offset)] || container;\r\n      if (!dom.isElement(container) && dom.isElement(container.parentNode)) {\r\n        container = container.parentNode;\r\n      }\r\n    }\r\n  }\r\n\r\n  return container || root;\r\n};\r\n\r\nexport default class Selection {\r\n  constructor(context) {\r\n    this.context = context;\r\n    // e.g. selected image with handler\r\n    this.selectedControl = null;\r\n    // The last range that was set explicitly via setRange()\r\n    this.explicitRange = null;\r\n    // The last range that was set explicitly via setRange() AND was successfully selected.\r\n    this.selectedRange = null;\r\n    // The last range that was set explicitly via setRange(), \r\n    // OR the range that was remembered on 'keydown', 'keyup', 'mouseup', 'paste', 'focus' events\r\n    // so that after a blur, we know what the last selected range was.\r\n    this.bookmark = null;\r\n  }\r\n\r\n  initialize(editor) {\r\n    this.hasFocus = editor.hasFocus();\r\n    //this.testMode = false;\r\n\r\n    const createBookmarkFromSelection = () => {\r\n      const sel = this.nativeSelection;\r\n      let rng;\r\n      if (sel.rangeCount > 0) {\r\n        rng = range.createFromNativeRange(sel.getRangeAt(0));\r\n      } else {\r\n        rng = createRootRange(this.editor);\r\n      }\r\n\r\n      return rng;\r\n    };\r\n\r\n    const throttledHandler = func.throttle(e => {\r\n      if (e.type === 'blur') {\r\n        this.hasFocus = false;\r\n      }\r\n      if (e.type === 'focus') {\r\n        this.hasFocus = true;\r\n        this.bookmark = createBookmarkFromSelection();\r\n      }\r\n      else if (e.type !== 'summernote') {\r\n        this.bookmark = createBookmarkFromSelection();\r\n      }\r\n    }, 200);\r\n\r\n    const events = ['keydown', 'keyup', 'mouseup', 'paste', 'focus', 'blur']\r\n      .map(x => x + '.selection')\r\n      .join(' ');\r\n    editor.$editable.on(events, throttledHandler);\r\n\r\n    const $note = this.context.layoutInfo.note;\r\n    $note.on('summernote.change.selection', throttledHandler);\r\n  }\r\n\r\n  destroy() {\r\n    this.editor.$editable.off('selection');\r\n    this.context.layoutInfo.note.off('selection');\r\n    this.context = null;\r\n    this.selectedRange = null;\r\n    this.explicitRange = null;\r\n    this.bookmark = null;\r\n    win = null;\r\n  }\r\n\r\n  get editor() {\r\n    return this.context.modules.editor;\r\n  }\r\n\r\n  /**\r\n   * Returns the browsers internal selection object.\r\n   */\r\n  get nativeSelection() {\r\n    return win.getSelection ? win.getSelection() : win.document.selection;\r\n  }\r\n\r\n  /**\r\n   * Checks whether the given range is a valid range object and is completely within the boundaries of the root editable.\r\n   */\r\n  isValidRange(rng) {\r\n    const isValidObj = rng && (rng.isWrapper || rng instanceof Range);\r\n    if (!isValidObj) return false;\r\n\r\n    const root = this.editor.editable;\r\n    return range.isFullyContainedInNode(rng, root);\r\n  }\r\n\r\n  /**\r\n   * Collapse the selection to start or end of range.\r\n   *\r\n   * @method collapse\r\n   * @param {Boolean} toStart Optional boolean state if to collapse to end or not. Defaults to false.\r\n   */\r\n  collapse(toStart) {\r\n    const rng = this.getRange();\r\n    rng.collapse(!!toStart);\r\n    this.setRange(rng);\r\n  };\r\n\r\n  /**\r\n   * Returns the current editor selection range.\r\n   */\r\n  getRange() {\r\n    let rng;\r\n\r\n    const tryCompareBoundaryPoints = (how, sourceRange, destinationRange) => {\r\n      try {\r\n        return sourceRange.compareBoundaryPoints(how, destinationRange);\r\n      } catch (ex) {\r\n        return -1;\r\n      }\r\n    };\r\n\r\n    const editor = this.editor;\r\n\r\n    if (Type.isAssigned(this.bookmark) && !this.hasFocus) {\r\n      // Get the last saved range if not in focus\r\n      return this.bookmark;\r\n    }\r\n\r\n    if (!rng && this.hasFocus) {\r\n      try {\r\n        const selection = this.nativeSelection;\r\n        if (selection && selection.rangeCount > 0 && !dom.isRestrictedNode(selection.anchorNode)) {\r\n          rng = range.createFromNativeRange(selection.getRangeAt(0));\r\n        }\r\n      } catch { }\r\n    }\r\n\r\n    if (!rng) {\r\n      // No range found. Create one from root editable.\r\n      rng = createRootRange(editor);\r\n    }\r\n\r\n    if (this.selectedRange && this.explicitRange) {\r\n      if (tryCompareBoundaryPoints(rng.START_TO_START, rng, this.selectedRange) === 0 &&\r\n        tryCompareBoundaryPoints(rng.END_TO_END, rng, this.selectedRange) === 0) {\r\n        // Safari, Opera and Chrome only ever select text which causes the range to change.\r\n        // This lets us use the originally set range if the selection hasn't been changed by the user.\r\n        rng = this.explicitRange;\r\n      } else {\r\n        this.selectedRange = null;\r\n        this.explicitRange = null;\r\n        this.bookmark = null;\r\n      }\r\n    }\r\n\r\n    return rng;\r\n  }\r\n\r\n  /**\r\n   * Changes the selection to the specified range.\r\n   *\r\n   * @method setRange\r\n   * @param {WrappedRange|Range} rng Range to select.\r\n   * @param {Boolean} [forward] Optional boolean if the selection is forwards or backwards.\r\n   * @returns {Selection} - The `Selection` object for chaining.\r\n   */\r\n  setRange(rng, forward) {\r\n    if (!this.isValidRange(rng)) {\r\n      return this;\r\n    }\r\n\r\n    const sel = this.nativeSelection;\r\n\r\n    if (sel) {\r\n      if (!rng) {\r\n        rng = createRootRange(this.editor);\r\n      }\r\n\r\n      if (!rng.isWrapper) {\r\n        rng = range.getWrappedRange(rng);\r\n      }\r\n\r\n      this.explicitRange = rng;\r\n      this.bookmark = rng;\r\n\r\n      try {\r\n        sel.removeAllRanges();\r\n        sel.addRange(range.getNativeRange(rng));\r\n      } catch (ex) {\r\n        // IE might throw errors here if the editor is within a hidden container and selection is changed\r\n      }\r\n\r\n      // Forward is set to false and we have an extend function\r\n      if (forward === false && sel.extend) {\r\n        sel.collapse(rng.endContainer, rng.endOffset);\r\n        sel.extend(rng.startContainer, rng.startOffset);\r\n      }\r\n\r\n      // adding range isn't always successful so we need to check range count otherwise an exception can occur\r\n      this.selectedRange = sel.rangeCount > 0 ? rng : null;\r\n    }\r\n\r\n    // WebKit edge case selecting images works better using setBaseAndExtent when the image is floated\r\n    if (!rng.collapsed && rng.startContainer === rng.endContainer && sel?.setBaseAndExtent) {\r\n      if (rng.endOffset - rng.startOffset < 2) {\r\n        if (rng.startContainer.hasChildNodes()) {\r\n          const node = rng.startContainer.childNodes[rng.startOffset];\r\n          if (node && node.nodeName === 'IMG') {\r\n            sel.setBaseAndExtent(\r\n              rng.startContainer,\r\n              rng.startOffset,\r\n              rng.endContainer,\r\n              rng.endOffset\r\n            );\r\n\r\n            // Since the setBaseAndExtent is fixed in more recent Blink versions we\r\n            // need to detect if it's doing the wrong thing and falling back to the\r\n            // crazy incorrect behavior api call since that seems to be the only way\r\n            // to get it to work on Safari WebKit as of 2017-02-23\r\n            if (sel.anchorNode !== rng.startContainer || sel.focusNode !== rng.endContainer) {\r\n              sel.setBaseAndExtent(node, 0, node, 1);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sets the current selection to the specified DOM element.\r\n   *\r\n   * @method setNode\r\n   * @param {Element} elm Element to set as the contents of the selection.\r\n   * @return {Element} Returns the element that got passed in.\r\n   */\r\n  setNode(elm) {\r\n    // TODO: Implement Selection.setNode()\r\n    return elm;\r\n  }\r\n\r\n  /**\r\n   * Returns the currently selected element or the common ancestor element for both start and end of the selection.\r\n   *\r\n   * @method getNode\r\n   * @return {Element} Currently selected element or common ancestor element.\r\n   */\r\n  getNode() {\r\n    const rng = this.getRange();\r\n    const root = this.editor.$editable;\r\n    // Range maybe lost after the editor is made visible again\r\n    if (!rng) {\r\n      return root;\r\n    }\r\n\r\n    const startOffset = rng.startOffset;\r\n    const endOffset = rng.endOffset;\r\n    let startContainer = rng.startContainer;\r\n    let endContainer = rng.endContainer;\r\n    let node = rng.commonAncestorContainer;\r\n\r\n    // Handle selection a image or other control like element such as anchors\r\n    if (!rng.collapsed) {\r\n      if (startContainer === endContainer) {\r\n        if (endOffset - startOffset < 2) {\r\n          if (startContainer.hasChildNodes()) {\r\n            node = startContainer.childNodes[startOffset];\r\n          }\r\n        }\r\n      }\r\n\r\n      // If the anchor node is a element instead of a text node then return this element\r\n      // if (isWebKit && sel.anchorNode && sel.anchorNode.nodeType == 1)\r\n      // return anchorNode.childNodes[sel.anchorOffset];\r\n\r\n      // Handle cases where the selection is immediately wrapped around a node and return that node instead of it's parent.\r\n      // This happens when you double click an underlined word in FireFox.\r\n      if (dom.isText(startContainer) && dom.isText(endContainer)) {\r\n        if (startContainer.length === startOffset) {\r\n          startContainer = dom.skipEmptyTextNodes(startContainer.nextSibling, true);\r\n        } else {\r\n          startContainer = startContainer.parentNode;\r\n        }\r\n\r\n        if (endOffset === 0) {\r\n          endContainer = dom.skipEmptyTextNodes(endContainer.previousSibling, false);\r\n        } else {\r\n          endContainer = endContainer.parentNode;\r\n        }\r\n\r\n        if (startContainer && startContainer === endContainer) {\r\n          node = startContainer;\r\n        }\r\n      }\r\n    }\r\n\r\n    const elm = dom.isText(node) ? node.parentNode : node;\r\n    return dom.isHTMLElement(elm) ? elm : root;\r\n  }\r\n\r\n  // getSelectedBlocks(startElm = null, endElm = null) {\r\n  //   const rng = this.getRange();\r\n  //   const selectedBlocks = [];\r\n\r\n  //   const root = this.editor.editable;\r\n  //   const start = dom.closest(startElm || this.getStart(rng.collapsed, rng), dom.isBlock);\r\n  //   const end = dom.closest(endElm || this.getEnd(rng.collapsed, rng), dom.isBlock);\r\n\r\n  //   if (start && start !== root) {\r\n  //     selectedBlocks.push(start);\r\n  //   }\r\n\r\n  //   if (start && end && start !== end) {\r\n  //     let node;\r\n\r\n  //     const walker = new DomTreeWalker(start, root);\r\n  //     while ((node = walker.next()) && node !== end) {\r\n  //       if (dom.isBlock(node)) {\r\n  //         selectedBlocks.push(node);\r\n  //       }\r\n  //     }\r\n  //   }\r\n\r\n  //   if (end && start !== end && end !== root) {\r\n  //     selectedBlocks.push(end);\r\n  //   }\r\n\r\n  //   return selectedBlocks;\r\n  // }\r\n\r\n  /**\r\n   * Returns the selected contents as plain text.\r\n   *\r\n   * @method getContent\r\n   * @return {String} Selected text contents.\r\n   */\r\n  getTextContent() {\r\n    let rng = this.getRange();\r\n    // if range is on anchor, expand range with anchor.\r\n    if (rng.isOnAnchor()) {\r\n      rng = range.createFromNode(dom.closest(rng.startContainer, dom.isAnchor));\r\n    }\r\n\r\n    return rng.toString();\r\n  }\r\n\r\n  /**\r\n   * Returns the selected contents as HTML.\r\n   *\r\n   * @method getContent\r\n   * @return {String} Selected HTML contents.\r\n   */\r\n  getHtmlContent() {\r\n    // TODO: Perform cleanup in Selection.getContent() before returning content.\r\n    let rng = this.getRange();\r\n    var container = rng.commonAncestorContainer.parentNode.cloneNode(false);\r\n    container.appendChild(rng.cloneContents());\r\n    return container.innerHTML;\r\n  }\r\n\r\n  /**\r\n   * Pastes given text or HTML content to the the current selection. If any contents is selected it will be replaced\r\n   * with the contents passed in to this function. If there is no selection the contents will be inserted\r\n   * where the caret is placed in the editor/page.\r\n   *\r\n   * @method setContent\r\n   * @param {String} content HTML contents to set.\r\n   * @return {Node[]} The inserted nodes.\r\n   */\r\n  pasteContent(content) {\r\n    // TODO: Make this better: SetSelectionContent.setContent()\r\n    if (!content || this.editor.isLimited(content.length)) {\r\n      return;\r\n    }\r\n\r\n    content = this.context.invoke('codeview.purify', content.trim());\r\n\r\n    const rng = this.getRange();\r\n    return rng.pasteHTML(content);\r\n  }\r\n\r\n  /**\r\n   * Returns the start element of a selection range. If the start is in a text\r\n   * node the parent element will be returned.\r\n   *\r\n   * @method getStart\r\n   * @param {Boolean} [real] Optional state to get the real parent when the selection is collapsed, not the closest element.\r\n   * @return {Element} Start element of selection range.\r\n   */\r\n  getStart(real, rng = null) {\r\n    return getEndpointElement(this.editor.editable, rng || this.getRange(), true, real, (elm, offset) => Math.min(elm.childNodes.length, offset));\r\n  }\r\n\r\n  /**\r\n   * Returns the end element of a selection range. If the end is in a text\r\n   * node the parent element will be returned.\r\n   *\r\n   * @method getEnd\r\n   * @param {Boolean} [real] Optional state to get the real parent when the selection is collapsed not the closest element.\r\n   * @return {Element} End element of selection range.\r\n   */\r\n  getEnd(real, rng = null) {\r\n    return getEndpointElement(this.editor.editable, rng || this.getRange(), false, real, (elm, offset) => offset > 0 ? offset - 1 : offset);\r\n  }\r\n\r\n  /**\r\n   * Returns a bookmark location for the current selection. This bookmark object\r\n   * can then be used to restore the selection after some content modification to the document.\r\n   *\r\n   * @method createBookmark\r\n   * @return {Object} Bookmark object, use moveToBookmark with this object to restore the selection.\r\n   */\r\n  createBookmark(persistent) {\r\n    if (persistent) {\r\n      return Bookmark.getPersistentBookmark(this);\r\n    } else {\r\n      return this.getRange().createBookmark(this.editor.editable);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns a paragraph bookmark location for the current selection. This bookmark object\r\n   * can then be used to restore the selection after some content modification to the document.\r\n   *\r\n   * @method createParaBookmark\r\n   * @param {Node[]} paras\r\n   * @return {Object} Bookmark object, use moveToBookmark with this object to restore the selection.\r\n   */\r\n  createParaBookmark(paras) {\r\n    return this.getRange().createParaBookmark(paras);\r\n  }\r\n\r\n  /**\r\n   * Restores the selection to the specified bookmark.\r\n   *\r\n   * @method moveToBookmark\r\n   * @param {Object} bookmark Bookmark to restore selection from.\r\n   */\r\n  moveToBookmark(bookmark) {\r\n    let rng, forward = true;\r\n    if (this.isValidRange(bookmark)) {\r\n      // Is a range bookmark\r\n      rng = bookmark;\r\n    }\r\n    else if (bookmark.s && bookmark.e) {\r\n      // Is an offset bookmark\r\n      rng = range.createFromBookmark(this.editor.editable, bookmark);\r\n      if (!this.isValidRange(rng)) {\r\n        rng = null;\r\n      }\r\n    }\r\n    else if (bookmark.id) {\r\n      // Is a persistent bookmark\r\n      const resolved = Bookmark.resolvePersistentBookmark(bookmark);\r\n      rng = resolved?.range;\r\n      forward = resolved?.forward;\r\n    }\r\n\r\n    if (rng) {\r\n      this.setRange(rng, forward);\r\n      rng.scrollIntoView(this.editor.editable);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Saves the bookmark location for the given range. This bookmark\r\n   * can then be used to restore the selection after some content modification to the document.\r\n   */\r\n  setBookmark(rng) {\r\n    if (this.isValidRange(rng)) {\r\n      rng = range.getWrappedRange(rng);\r\n      this.bookmark = rng;\r\n    } else {\r\n      // Create a new range at the end of the document\r\n      this.bookmark = createRootRange(this.editor);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Tries to restore the last saved range bookmark (if any).\r\n   * Then sets focus to editor.\r\n   */\r\n  restoreBookmark() {\r\n    if (this.bookmark) {\r\n      this.setRange(this.bookmark);\r\n      this.editor.focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Selects the specified element. This will place the start and end of the selection range around the element.\r\n   *\r\n   * @method select\r\n   * @param {Node} node HTML DOM element to select.\r\n   * @return {Node} Returns the element that got passed in.\r\n   */\r\n  select(node) {\r\n    if (dom.isChildOf(node, this.editor.editable, true)) {\r\n      const rng = range.createFromNode(node);\r\n      this.setRange(rng);\r\n    }\r\n    return node;\r\n  }\r\n\r\n  /**\r\n   * Sets the current selection to the specified DOM element.\r\n   *\r\n   * @method setNode\r\n   * @param {Element} elm Element to set as the contents of the selection.\r\n   * @return {Element} Returns the element that got passed in.\r\n   */\r\n  setNode(elm) {\r\n    const content = dom.outerHtml(elm);\r\n    this.pasteContent(content);\r\n    return elm;\r\n  }\r\n\r\n  /**\r\n   * Returns true/false if the selection range is collapsed or not. Collapsed means if it's a caret or a larger selection.\r\n   *\r\n   * @method isCollapsed\r\n   * @return {Boolean} true/false state if the selection range is collapsed or not.\r\n   */\r\n  isCollapsed() {\r\n    const rng = this.getRange();\r\n    if (!rng) {\r\n      return false;\r\n    }\r\n\r\n    return rng.collapsed;\r\n  }\r\n\r\n  /**\r\n   * Checks if the current selection’s start and end containers are editable within their parent’s contexts.\r\n   */\r\n  isEditable() {\r\n    const rng = this.getRange();\r\n    if (rng.collapsed) {\r\n      return dom.isContentEditable(rng.startContainer);\r\n    } else {\r\n      return dom.isContentEditable(rng.startContainer) && dom.isContentEditable(rng.endContainer);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Moves the scrollbar to start container (sc) of current range.\r\n   */\r\n  scrollIntoView() {\r\n    this.getRange().scrollIntoView(this.editor.editable);\r\n  }\r\n\r\n  /**\r\n   * Move the selection cursor range to the specified node and offset.\r\n   * If there is no node specified it will move it to the first suitable location within the body.\r\n   *\r\n   * @method setCursorLocation\r\n   * @param {Node} [node] Optional node to put the cursor in.\r\n   * @param {Number} [offset] Optional offset from the start of the node to put the cursor at.\r\n   */\r\n  setCursorLocation(node, offset) {\r\n    const rng = document.createRange();\r\n\r\n    if (Type.isAssigned(node) && Type.isAssigned(offset)) {\r\n      rng.setStart(node, offset);\r\n      rng.setEnd(node, offset);\r\n      this.setRange(rng);\r\n      this.collapse(false);\r\n    } else {\r\n      Bookmark.moveEndPoint(rng, true);\r\n      this.setRange(rng);\r\n    }\r\n  }\r\n\r\n  isForward() {\r\n    const sel = this.nativeSelection;\r\n\r\n    const anchorNode = sel?.anchorNode;\r\n    const focusNode = sel?.focusNode;\r\n\r\n    // No support for selection direction then always return true\r\n    if (!sel || !anchorNode || !focusNode || dom.isRestrictedNode(anchorNode) || dom.isRestrictedNode(focusNode)) {\r\n      return true;\r\n    }\r\n\r\n    const anchorRange = document.createRange();\r\n    const focusRange = document.createRange();\r\n\r\n    try {\r\n      anchorRange.setStart(anchorNode, sel.anchorOffset);\r\n      anchorRange.collapse(true);\r\n\r\n      focusRange.setStart(focusNode, sel.focusOffset);\r\n      focusRange.collapse(true);\r\n    } catch (e) {\r\n      // Safari can generate an invalid selection and error. Silently handle it and default to forward.\r\n      // See https://bugs.webkit.org/show_bug.cgi?id=230594.\r\n      return true;\r\n    }\r\n\r\n    return anchorRange.compareBoundaryPoints(anchorRange.START_TO_START, focusRange) <= 0;\r\n  }\r\n\r\n  normalize() {\r\n    const rng = this.getRange();\r\n    const sel = this.nativeSelection;\r\n\r\n    if (sel.rangeCount > 0) {\r\n      const normRng = rng.normalize();\r\n      this.setRange(normRng, this.isForward());\r\n      return normRng;\r\n    }\r\n\r\n    return rng;\r\n  }\r\n}","import Type from '../core/Type';\r\n\r\nconst sanitizeHtmlSimple = (html) => {\r\n  const regexTag = /<(\\/?)(\\b(?!!)[^>\\s]*)(.*?)(\\s*\\/?>)/g;\r\n  html = html.replace(regexTag, function(match, endSlash, name) {\r\n    name = name.toUpperCase();\r\n    const isEndOfInlineContainer = /^DIV|^TD|^TH|^P|^LI|^H[1-7]/.test(name) &&\r\n                                 !!endSlash;\r\n    const isBlockNode = /^BLOCKQUOTE|^TABLE|^TBODY|^TR|^HR|^UL|^OL/.test(name);\r\n\r\n    return match + ((isEndOfInlineContainer || isBlockNode) ? '\\n' : '');\r\n  });\r\n  return html.trim();\r\n};\r\n\r\nconst sanitizeHtml = (context, html) => {\r\n  const fn = context.options.callbacks.onSanitizeHtml;\r\n  if (Type.isFunction(fn)) {\r\n    html = fn.call(context, html, { sanitize: true, prettify: true });\r\n    return html;\r\n  } else {\r\n    return sanitizeHtmlSimple(html);\r\n  }\r\n};\r\n\r\nexport default {\r\n  sanitizeHtml\r\n}\r\n","import $ from 'jquery';\r\nimport Str from '../core/Str';\r\nimport env from '../core/env';\r\nimport key from '../core/key';\r\nimport func from '../core/func';\r\nimport lists from '../core/lists';\r\nimport dom from '../core/dom';\r\nimport range from '../core/range';\r\nimport Point from '../core/Point';\r\nimport Obj from '../core/Obj';\r\nimport { readFileAsDataURL, createImage } from '../core/async';\r\nimport History from '../editing/History';\r\nimport Style from '../editing/Style';\r\nimport Typing from '../editing/Typing';\r\nimport Table from '../editing/Table';\r\nimport Bullet from '../editing/Bullet';\r\nimport Selection from '../editing/Selection';\r\n//import Formatter from '../fmt/Formatter';\r\nimport HtmlSanitizer from '../util/HtmlSanitizer';\r\n\r\nconst KEY_BOGUS = 'bogus';\r\n\r\n/**\r\n * @class Editor\r\n */\r\nexport default class Editor {\r\n  constructor(context) {\r\n    this.context = context;\r\n\r\n    this.$note = context.layoutInfo.note;\r\n    this.$editor = context.layoutInfo.editor;\r\n    this.$editable = context.layoutInfo.editable;\r\n    this.options = context.options;\r\n    this.lang = this.options.langInfo;\r\n    \r\n    this.editable = this.$editable[0];\r\n    this.snapshot = null;\r\n\r\n    this.table = new Table(context);\r\n    this.bullet = new Bullet(context);\r\n    this.typing = new Typing(context, this.bullet);\r\n    this.history = new History(context);\r\n    //this.formatter = new Formatter(context);\r\n    this.style = new Style(context);\r\n    this.selection = new Selection(context);\r\n\r\n    this.context.memo('help.escape', this.lang.help.escape);\r\n    this.context.memo('help.undo', this.lang.help.undo);\r\n    this.context.memo('help.redo', this.lang.help.redo);\r\n    this.context.memo('help.tab', this.lang.help.tab);\r\n    this.context.memo('help.untab', this.lang.help.untab);\r\n    this.context.memo('help.insertParagraph', this.lang.help.insertParagraph);\r\n    this.context.memo('help.insertOrderedList', this.lang.help.insertOrderedList);\r\n    this.context.memo('help.insertUnorderedList', this.lang.help.insertUnorderedList);\r\n    this.context.memo('help.indent', this.lang.help.indent);\r\n    this.context.memo('help.outdent', this.lang.help.outdent);\r\n    this.context.memo('help.formatPara', this.lang.help.formatPara);\r\n    this.context.memo('help.insertHorizontalRule', this.lang.help.insertHorizontalRule);\r\n    this.context.memo('help.fontName', this.lang.help.fontName);\r\n\r\n    // Native commands (with execCommand), generate function for execCommand\r\n    const commands = [\r\n      'bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript', 'code',\r\n      'justifyLeft', 'justifyCenter', 'justifyRight', 'justifyFull',\r\n      'formatBlock', 'removeFormat', 'backColor',\r\n    ];\r\n\r\n    for (let idx = 0, len = commands.length; idx < len; idx++) {\r\n      this[commands[idx]] = ((sCmd) => {\r\n        return (value) => {\r\n          this.beforeCommand();\r\n          document.execCommand(sCmd, false, value);\r\n          this.afterCommand(true);\r\n        };\r\n      })(commands[idx]);\r\n      this.context.memo('help.' + commands[idx], this.lang.help[commands[idx]]);\r\n    }\r\n\r\n    this.fontName = this.wrapCommand((value) => {\r\n      return this.fontStyling('font-family', env.validFontName(value));\r\n    });\r\n\r\n    this.fontSize = this.wrapCommand((value) => {\r\n      const unit = this.currentStyle()['font-size-unit'];\r\n      return this.fontStyling('font-size', value + unit);\r\n    });\r\n\r\n    this.fontSizeUnit = this.wrapCommand((value) => {\r\n      const size = this.currentStyle()['font-size'];\r\n      return this.fontStyling('font-size', size + value);\r\n    });\r\n\r\n    for (let idx = 1; idx <= 6; idx++) {\r\n      this['formatH' + idx] = ((idx) => {\r\n        return () => {\r\n          this.formatBlock('H' + idx);\r\n        };\r\n      })(idx);\r\n      this.context.memo('help.formatH' + idx, this.lang.help['formatH' + idx]);\r\n    }\r\n\r\n    this.insertParagraph = this.wrapCommand((rng) => {\r\n      this.typing.insertParagraph(rng);\r\n    });\r\n\r\n    this.insertOrderedList = this.wrapCommand((rng) => {\r\n      this.bullet.insertOrderedList(rng);\r\n    });\r\n\r\n    this.insertUnorderedList = this.wrapCommand((rng) => {\r\n      this.bullet.insertUnorderedList(rng);\r\n    });\r\n\r\n    this.indent = this.wrapCommand((rng) => {\r\n      this.bullet.indent(rng);\r\n    });\r\n\r\n    this.outdent = this.wrapCommand((rng) => {\r\n      this.bullet.outdent(rng);\r\n    });\r\n\r\n    /**\r\n     * insertNode\r\n     * insert node\r\n     * @param {Node} node\r\n     */\r\n    this.insertNode = this.wrapCommand((node) => {\r\n      if (this.isLimited($(node).text().length)) {\r\n        return;\r\n      }\r\n      const rng = this.selection.getRange();\r\n      rng.insertNode(node);\r\n      this.selection.setRange(range.createFromNodeAfter(node));\r\n    });\r\n\r\n    /**\r\n     * Inserts text\r\n     * @param {String} text\r\n     */\r\n    this.insertText = this.wrapCommand((text) => {\r\n      if (this.isLimited(text.length)) {\r\n        return;\r\n      }\r\n      const rng = this.selection.getRange();\r\n      const textNode = rng.insertNode(dom.createText(text));\r\n      this.selection.setRange(range.create(textNode, dom.nodeLength(textNode)));\r\n    });\r\n\r\n    /**\r\n     * paste HTML\r\n     * @param {String} markup\r\n     */\r\n    this.pasteHTML = this.wrapCommand((markup) => {\r\n      this.selection.pasteContent(markup);\r\n    });\r\n\r\n    /**\r\n     * formatBlock\r\n     *\r\n     * @param {String} tagName\r\n     */\r\n    this.formatBlock = this.wrapCommand((tagName, $target) => {\r\n      const onApplyCustomStyle = this.options.callbacks.onApplyCustomStyle;\r\n      if (onApplyCustomStyle) {\r\n        onApplyCustomStyle.call(this, $target, this.context, this.onFormatBlock);\r\n      } else {\r\n        this.onFormatBlock(tagName, $target);\r\n      }\r\n    });\r\n\r\n    /**\r\n     * insert horizontal rule\r\n     */\r\n    this.insertHorizontalRule = this.wrapCommand(() => {\r\n      const hrNode = this.selection.getRange().insertNode(dom.create('HR'));\r\n      if (hrNode.nextSibling) {\r\n        this.selection.setRange(range.create(hrNode.nextSibling, 0).normalize());\r\n      }\r\n    });\r\n\r\n    /**\r\n     * lineHeight\r\n     * @param {String} value\r\n     */\r\n    this.lineHeight = this.wrapCommand((value) => {\r\n      this.style.stylePara(this.selection.getRange(), {\r\n        lineHeight: value,\r\n      });\r\n    });\r\n\r\n    /**\r\n     * create link (command)\r\n     *\r\n     * @param {Object} linkInfo\r\n     */\r\n    this.createLink = this.wrapCommand((linkInfo) => {\r\n      let rels = [];\r\n      let linkUrl = linkInfo.url;\r\n      const linkText = linkInfo.text;\r\n      const isNewWindow = linkInfo.isNewWindow;\r\n\r\n      // handle spaced urls from input\r\n      if (typeof linkUrl === 'string') {\r\n        linkUrl = linkUrl.trim();\r\n      }\r\n\r\n      if (this.options.onCreateLink) {\r\n        linkUrl = this.options.onCreateLink(linkUrl);\r\n      } \r\n      else {\r\n        linkUrl = this.checkLinkUrl(linkUrl) || linkUrl;\r\n      }\r\n\r\n      let anchors = [];\r\n\r\n      if (linkInfo.img && !linkInfo.a) {\r\n        // UNlinked image selected\r\n        $(linkInfo.img).wrap('<a href=\"' + linkUrl + '\"></a>');\r\n        linkInfo.a = linkInfo.img.parentElement;\r\n        anchors.push(linkInfo.a);\r\n      }\r\n      else if (linkInfo.img && linkInfo.a) {\r\n        // linked image selected\r\n        anchors.push(linkInfo.a);\r\n      }\r\n      else {\r\n        let rng = linkInfo.range || this.selection.getRange();\r\n        const additionalTextLength = linkText.length - rng.toString().length;\r\n        if (additionalTextLength > 0 && this.isLimited(additionalTextLength)) {\r\n          return;\r\n        }\r\n        const isTextChanged = rng.toString() !== linkText;\r\n\r\n        // Text selected\r\n        if (isTextChanged) {\r\n          rng = rng.deleteContents();\r\n          const anchor = rng.insertNode($('<A></A>').text(linkText)[0]);\r\n          anchors.push(anchor);\r\n        } \r\n        else {\r\n          anchors = this.style.styleNodes(rng, {\r\n            nodeName: 'A',\r\n            expandClosestSibling: true,\r\n            onlyPartialContains: true,\r\n          });\r\n        }\r\n      }\r\n\r\n      $.each(anchors, (idx, a) => {\r\n        a.setAttribute('href', linkUrl);\r\n\r\n        if (linkInfo.rel) {\r\n          a.rel = linkInfo.rel;\r\n        }\r\n\r\n        if (linkInfo.cssClasss) {\r\n          a.className = linkInfo.cssClasss;\r\n        }\r\n\r\n        if (linkInfo.cssStyle) {\r\n          a.style.cssText = linkInfo.cssStyle;\r\n        }\r\n\r\n        if (isNewWindow) {\r\n          a.target = '_blank';\r\n          \r\n          if (!linkInfo.rel) {\r\n            if (this.options.linkAddNoReferrer) {\r\n              rels.push('noreferrer');\r\n            }\r\n            if (this.options.linkAddNoOpener) {\r\n              rels.push('noopener');\r\n            }\r\n            if (rels.length) {\r\n              a.rel = rels.join(' ');\r\n            }\r\n          }\r\n        } \r\n        else {\r\n          a.removeAttribute('target');\r\n        }\r\n      });\r\n\r\n      this.selection.setRange(range.createFromNodes(anchors));\r\n    });\r\n\r\n    /**\r\n     * setting color\r\n     *\r\n     * @param {Object} sObjColor  color code\r\n     * @param {String} sObjColor.foreColor foreground color\r\n     * @param {String} sObjColor.backColor background color\r\n     */\r\n    this.color = this.wrapCommand((colorInfo) => {\r\n      const foreColor = colorInfo.foreColor;\r\n      const backColor = colorInfo.backColor;\r\n\r\n      if (foreColor) { document.execCommand('foreColor', false, foreColor); }\r\n      if (backColor) { document.execCommand('backColor', false, backColor); }\r\n    });\r\n\r\n    /**\r\n     * Set foreground color\r\n     *\r\n     * @param {String} colorCode foreground color code\r\n     */\r\n    this.foreColor = this.wrapCommand((colorInfo) => {\r\n      document.execCommand('foreColor', false, colorInfo);\r\n    });\r\n\r\n    /**\r\n     * insert Table\r\n     *\r\n     * @param {String} dimension of table (ex : \"5x5\")\r\n     */\r\n    this.insertTable = this.wrapCommand((dim) => {\r\n      const dimension = dim.split('x');\r\n\r\n      const rng = this.selection.getRange().deleteContents();\r\n      rng.insertNode(this.table.createTable(dimension[0], dimension[1], this.options));\r\n      // TODO: Where to put cursor after TABLE create?\r\n    });\r\n\r\n    /**\r\n     * Remove media object and Figure Elements if media object is img with Figure.\r\n     */\r\n    this.removeMedia = this.wrapCommand(() => {\r\n      let $target = $(this.restoreTarget()).parent();\r\n      if ($target.closest('figure').length) {\r\n        $target.closest('figure').remove();\r\n      } else {\r\n        $target = $(this.restoreTarget()).detach();\r\n      }\r\n      \r\n      this.selection.setRange(range.createFromSelection($target));\r\n      this.context.triggerEvent('media.delete', $target, this.$editable);\r\n    });\r\n\r\n    /**\r\n     * float me\r\n     *\r\n     * @param {String} value\r\n     */\r\n    this.floatMe = this.wrapCommand((value) => {\r\n      const $target = $(this.restoreTarget())\r\n      $target.removeClass('float-right float-left');\r\n      if (value == 'left' || value == 'right') {\r\n        $target.addClass('float-' + value);\r\n      }\r\n    });\r\n\r\n    /**\r\n     * resize overlay element\r\n     * @param {String} value\r\n     */\r\n    this.resize = this.wrapCommand((value) => {\r\n      const $target = $(this.restoreTarget());\r\n      $target.css('width', '').css('height', '').removeClass('w-100 w-50 w-25');\r\n\r\n      value = parseFloat(value);\r\n      if (value > 0) {\r\n        if (value === 0.25) {\r\n          $target.addClass('w-25');\r\n        }\r\n        else if (value === 0.5) {\r\n          $target.addClass('w-50');\r\n        }\r\n        else if (value === 1) {\r\n          $target.addClass('w-100');\r\n        }\r\n        else {\r\n          $target.css({width: value * 100 + '%'}); \r\n        }\r\n      }\r\n      \r\n      this.cleanEmptyStyling($target);\r\n    });\r\n  }\r\n\r\n  cleanEmptyStyling(node) {\r\n    $(node).each((i, el) => {\r\n      if (!el.className) {\r\n        el.removeAttribute(\"class\");\r\n      }\r\n      if (!el.style.cssText) {\r\n        el.removeAttribute(\"style\");\r\n      }\r\n    });\r\n  }\r\n\r\n  initialize() {\r\n    this.selection.initialize(this);\r\n\r\n    // bind custom events\r\n    this.$editable.on('keydown', (event) => {\r\n      if (event.keyCode === key.code.ENTER) {\r\n        this.context.triggerEvent('enter', event);\r\n      }\r\n      this.context.triggerEvent('keydown', event);\r\n\r\n      // keep a snapshot to limit text on input event\r\n      this.snapshot = this.history.makeSnapshot();\r\n      this.hasKeyShortCut = false;\r\n      if (!event.isDefaultPrevented()) {\r\n        if (this.options.shortcuts) {\r\n          this.hasKeyShortCut = this.handleKeyMap(event);\r\n        } else {\r\n          this.preventDefaultEditableShortCuts(event);\r\n        }\r\n      }\r\n      if (this.isLimited(1, event)) {\r\n        const rng = this.selection.getRange();\r\n        if (rng.eo - rng.so === 0) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      // record undo in the key event except keyMap.\r\n      if (this.options.recordEveryKeystroke) {\r\n        if (this.hasKeyShortCut === false) {\r\n          this.history.recordUndo();\r\n        }\r\n      }\r\n    }).on('keyup mousedown mouseup copy paste copy focus blur scroll', (e) => {\r\n      // Pass all events\r\n      this.context.triggerEvent(e.type, e);\r\n    }).on('input', () => {\r\n      // To limit composition characters (e.g. Korean)\r\n      if (this.isLimited(0) && this.snapshot) {\r\n        this.history.applySnapshot(this.snapshot);\r\n      }\r\n    });\r\n\r\n    this.$editable.attr('spellcheck', this.options.spellCheck); \r\n\r\n    this.$editable.attr('autocorrect', this.options.spellCheck);\r\n\r\n    if (this.options.disableGrammar) {\r\n      this.$editable.attr('data-gramm', false);\r\n    }\r\n\r\n    // init content before set event\r\n    this.$editable.html(dom.value(this.$note) || dom.emptyPara);\r\n\r\n    this.$editable.on(env.inputEventName, func.debounce(() => {\r\n      this.context.triggerEvent('change', this.$editable);\r\n    }, 10));\r\n\r\n    this.$editable.on('focusin', (event) => {\r\n      this.context.triggerEvent('focusin', event);\r\n    }).on('focusout', (event) => {\r\n      this.context.triggerEvent('focusout', event);\r\n    });\r\n\r\n    if (this.options.airMode) {\r\n      if (this.options.overrideContextMenu) {\r\n        this.$editor.on('contextmenu', (event) => {\r\n          this.context.triggerEvent('contextmenu', event);\r\n          return false;\r\n        });\r\n      }\r\n    } else {\r\n      if (this.options.width) {\r\n        this.$editor.outerWidth(this.options.width);\r\n      }\r\n      if (this.options.height) {\r\n        this.$editable.outerHeight(this.options.height);\r\n      }\r\n      if (this.options.maxHeight) {\r\n        this.$editable.css('max-height', this.options.maxHeight);\r\n      }\r\n      if (this.options.minHeight) {\r\n        this.$editable.css('min-height', this.options.minHeight);\r\n      }\r\n    }\r\n\r\n    this.history.recordUndo();\r\n  }\r\n\r\n  destroy() {\r\n    this.selection.destroy();\r\n    this.$editable.off();\r\n  }\r\n\r\n  handleKeyMap(event) {\r\n    const keyMap = this.options.keyMap[env.isMac ? 'mac' : 'pc'];\r\n    const keys = [];\r\n\r\n    if (event.metaKey) { keys.push('CMD'); }\r\n    if (event.ctrlKey && !event.altKey) { keys.push('CTRL'); }\r\n    if (event.shiftKey) { keys.push('SHIFT'); }\r\n\r\n    const keyName = key.nameFromCode[event.keyCode];\r\n    if (keyName) {\r\n      keys.push(keyName);\r\n    }\r\n\r\n    const eventName = keyMap[keys.join('+')];\r\n    if (keyName === 'TAB' && this.options.tabDisable) {\r\n      this.afterCommand();\r\n    } else if (eventName) {\r\n      if (this.context.invoke(eventName) !== false) {\r\n        event.preventDefault();\r\n        return true;\r\n      }\r\n    } else if (key.isEdit(event.keyCode)) {\r\n      if (key.isRemove(event.keyCode)) {\r\n        this.context.invoke('removed');\r\n      }\r\n      this.afterCommand();\r\n    }\r\n    return false;\r\n  }\r\n\r\n  preventDefaultEditableShortCuts(event) {\r\n    // B(Bold, 66) / I(Italic, 73) / U(Underline, 85)\r\n    if ((event.ctrlKey || event.metaKey) &&\r\n      lists.contains([66, 73, 85], event.keyCode)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  isLimited(pad, event) {\r\n    pad = pad || 0;\r\n\r\n    if (typeof event !== 'undefined') {\r\n      if (key.isMove(event.keyCode) ||\r\n          key.isNavigation(event.keyCode) ||\r\n          (event.ctrlKey || event.metaKey) ||\r\n          lists.contains([key.code.BACKSPACE, key.code.DELETE], event.keyCode)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (this.options.maxTextLength > 0) {\r\n      if ((this.$editable.text().length + pad) > this.options.maxTextLength) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Checks link url. Returns empty string if url is valid.\r\n   * @return {String}\r\n   */\r\n  checkLinkUrl(url) {\r\n    url = url?.trim();\r\n\r\n    if (url) {\r\n      if (Str.isValidEmail(url)) {\r\n        return 'mailto://' + url;\r\n      } \r\n      else if (Str.isValidTel(url)) {\r\n        return 'tel://' + url;\r\n      } \r\n      else if (!Str.startsWithUrlScheme(url)) {\r\n        // Grab only first part\r\n        let url2 = url;\r\n        let slashIndex = url2.indexOf('/');\r\n        if (slashIndex > 1) {\r\n          url2 = url2.substring(0, slashIndex);\r\n        }\r\n\r\n        if (Str.isValidHost(url2)) {\r\n          return 'https://' + url;\r\n        }\r\n        else {\r\n          var c = url[0];\r\n          if (c === \"/\" || c === \"~\" || c === \"\\\\\" || c === \".\" || c === \"#\") {\r\n            // Is an app (relative or absolute) path\r\n            return url;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  /**\r\n   * Creates range at end of editor document.\r\n   * @return {WrappedRange}\r\n   */\r\n  createRange() {\r\n    this.focus();\r\n    return this.selection.getRange();\r\n  }\r\n\r\n  setLastRange(rng) {\r\n    // Compat\r\n    this.selection.setBookmark(rng);\r\n  }\r\n\r\n  getLastRange() {\r\n    // Compat\r\n    if (!this.selection.bookmark) {\r\n      this.selection.setBookmark();\r\n    }\r\n    return this.selection.bookmark;\r\n  }\r\n\r\n  get lastRange() {\r\n    // Compat\r\n    return this.getLastRange();\r\n  }\r\n\r\n  saveRange(thenCollapse) {\r\n    // Compat\r\n    if (thenCollapse) {\r\n      this.selection.collapse();\r\n    }\r\n  }\r\n\r\n  restoreRange() {\r\n    // Compat\r\n    this.selection.restoreBookmark();\r\n  }\r\n\r\n  html(sanitize) {\r\n    let html = this.$editable.html();\r\n    // TODO: How to deal with both opts sanitize & prettify?\r\n    const sanitizeOption = Obj.valueOrDefault(this.options.sanitizeHtml, this.options.prettifyHtml);\r\n    if (Obj.valueOrDefault(sanitize, sanitizeOption)) {\r\n      html = HtmlSanitizer.sanitizeHtml(this.context, html);\r\n    }\r\n    return html;\r\n  }\r\n\r\n  saveTarget(node) {\r\n    this.selection.selectedControl = node;\r\n  }\r\n\r\n  clearTarget() {\r\n    this.selection.selectedControl = null;\r\n  }\r\n\r\n  restoreTarget() {\r\n    return this.selection.selectedControl;\r\n  }\r\n\r\n  /**\r\n   * currentStyle\r\n   *\r\n   * current style\r\n   * @return {Object|Boolean} unfocus\r\n   */\r\n  currentStyle() {\r\n    let rng = range.create();\r\n    if (rng) {\r\n      rng = rng.normalize();\r\n      return this.style.current(rng);\r\n    }\r\n\r\n    return this.style.fromNode(this.$editable);\r\n  }\r\n\r\n  /**\r\n   * style from node\r\n   *\r\n   * @param {jQuery} $node\r\n   * @return {Object}\r\n   */\r\n  styleFromNode($node) {\r\n    return this.style.fromNode($node);\r\n  }\r\n\r\n  /**\r\n   * undo\r\n   */\r\n  undo() {\r\n    this.context.triggerEvent('before.command', this.$editable);\r\n    this.history.undo();\r\n    this.context.triggerEvent('change', this.$editable);\r\n  }\r\n\r\n  /*\r\n  * commit\r\n  */\r\n  commit() {\r\n    this.context.triggerEvent('before.command', this.$editable);\r\n    this.history.commit();\r\n    this.context.triggerEvent('change', this.$editable);\r\n  }\r\n\r\n  /**\r\n   * redo\r\n   */\r\n  redo() {\r\n    this.context.triggerEvent('before.command', this.$editable);\r\n    this.history.redo();\r\n    this.context.triggerEvent('change', this.$editable);\r\n  }\r\n\r\n  /**\r\n   * before command\r\n   */\r\n  beforeCommand() {\r\n    this.context.triggerEvent('before.command', this.$editable);\r\n\r\n    // Set styleWithCSS before run a command\r\n    document.execCommand('styleWithCSS', false, this.options.styleWithCSS);\r\n\r\n    // keep focus on editable before command execution\r\n    this.focus();\r\n  }\r\n\r\n  /**\r\n   * after command\r\n   * @param {Boolean} silent\r\n   */\r\n  afterCommand(silent) {\r\n    this.normalizeContent();\r\n    this.history.recordUndo();\r\n    if (!silent) {\r\n      this.context.triggerEvent('change', this.$editable);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * handle tab key\r\n   */\r\n  tab() {\r\n    const rng = this.selection.getRange();\r\n    if (rng.isOnList()) {\r\n      this.indent(rng);\r\n    }\r\n    else if (rng.collapsed && rng.isOnCell()) {\r\n      this.table.tab(rng);\r\n    } \r\n    else {\r\n      if (this.options.tabSize === 0) {\r\n        return false;\r\n      }\r\n\r\n      if (!this.isLimited(this.options.tabSize)) {\r\n        this.beforeCommand();\r\n        this.typing.insertTab(rng, this.options.tabSize);\r\n        this.afterCommand();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * handle shift+tab key\r\n   */\r\n  untab() {\r\n    const rng = this.selection.getRange();\r\n    if (rng.isOnList()) {\r\n      this.outdent(rng);\r\n    }\r\n    else if (rng.collapsed && rng.isOnCell()) {\r\n      this.table.tab(rng, true);\r\n    } \r\n    else {\r\n      if (this.options.tabSize === 0) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * run given function between beforeCommand and afterCommand\r\n   */\r\n  wrapCommand(fn) {\r\n    return function() {\r\n      this.beforeCommand();\r\n      fn.apply(this, arguments);\r\n      this.afterCommand();\r\n    };\r\n  }\r\n  /**\r\n   * removed (function added by 1der1)\r\n  */\r\n  removed(rng, node, tagName) { // LB\r\n\t\trng = range.create();\r\n\t\tif (rng.collapsed && rng.isOnCell()) {\r\n\t\t\tnode = rng.ec;\r\n\t\t\tif( (tagName = node.tagName) &&\r\n\t\t\t\t(node.childElementCount === 1) &&\r\n\t\t\t\t(node.childNodes[0].tagName === \"BR\") ){\r\n\r\n\t\t\t\tif(tagName === \"P\") {\r\n\t\t\t\t\tnode.remove();\r\n\t\t\t\t} else if(['TH', 'TD'].indexOf(tagName) >=0) {\r\n\t\t\t\t\tnode.firstChild.remove();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n  /**\r\n   * insert image\r\n   *\r\n   * @param {String} src\r\n   * @param {String|Function} param\r\n   * @return {Promise}\r\n   */\r\n  insertImage(src, param) {\r\n    return createImage(src, param).then(($image) => {\r\n      this.beforeCommand();\r\n\r\n      if (typeof param === 'function') {\r\n        param($image);\r\n      } else {\r\n        if (typeof param === 'string') {\r\n          $image.attr('data-filename', param);\r\n        }\r\n        $image.css('width', Math.min(this.$editable.width(), $image.width()));\r\n      }\r\n\r\n      $image.show();\r\n      this.selection.getRange().insertNode($image[0]);\r\n      this.selection.setRange(range.createFromNodeAfter($image[0]));\r\n      this.afterCommand();\r\n    }).fail((e) => {\r\n      this.context.triggerEvent('image.upload.error', e);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * insertImages\r\n   * @param {File[]} files\r\n   */\r\n  insertImagesAsDataURL(files) {\r\n    $.each(files, (idx, file) => {\r\n      const filename = file.name;\r\n      if (this.options.maximumImageFileSize && this.options.maximumImageFileSize < file.size) {\r\n        this.context.triggerEvent('image.upload.error', this.lang.image.maximumFileSizeError);\r\n      } else {\r\n        readFileAsDataURL(file).then((dataURL) => {\r\n          return this.insertImage(dataURL, filename);\r\n        }).fail(() => {\r\n          this.context.triggerEvent('image.upload.error');\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * insertImagesOrCallback\r\n   * @param {File[]} files\r\n   */\r\n  insertImagesOrCallback(files) {\r\n    const callbacks = this.options.callbacks;\r\n    // If onImageUpload set,\r\n    if (callbacks.onImageUpload) {\r\n      this.context.triggerEvent('image.upload', files);\r\n      // else insert Image as dataURL\r\n    } else {\r\n      this.insertImagesAsDataURL(files);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns selected plain text\r\n   * @return {String} text\r\n   */\r\n  getSelectedText() {\r\n    // Compat\r\n    return this.selection.getTextContent();\r\n  }\r\n\r\n  /**\r\n   * Finds the custom css class to apply to tagName nodes.\r\n   */\r\n  getTagStyleClass(tagName) {\r\n    let styleTag = lists.find(this.options.styleTags, x => $.isPlainObject(x) && x.tag.toUpperCase() == tagName.toUpperCase());\r\n    return styleTag?.className;\r\n  }\r\n\r\n  // onFormatBlock_New(tagName) {\r\n  //   this.formatter.toggle(tagName.toLowerCase());\r\n  //   // TODO: Creating a new block with ENTER should not copy all attributes from prev block\r\n  // }\r\n\r\n  onFormatBlock(tagName, $target) {\r\n    let currentRange = this.createRange();\r\n    let $block = $([currentRange.sc, currentRange.ec]).closest(tagName);\r\n\r\n    // Memoize all attributes of current block before command execution,\r\n    // most of them will be lost after command.\r\n    let attrs = {};\r\n    if ($block.length) {\r\n      for (const attr of $block[0].attributes) {\r\n        if (attr.value) {\r\n          attrs[attr.name] = attr.value;\r\n        }\r\n      }\r\n    }\r\n\r\n    // [workaround] for MSIE, IE need `<`\r\n    document.execCommand('FormatBlock', false, env.isMSIE ? '<' + tagName + '>' : tagName);\r\n\r\n    currentRange = this.createRange();\r\n    $block = $([currentRange.sc, currentRange.ec]).closest(tagName);\r\n\r\n    // Apply all memoized attributes to new block\r\n    dom.setAttrs($block, attrs);\r\n\r\n    // Support custom class\r\n    if ($target?.length) {\r\n      // Find the exact element that has given tagName\r\n      if ($target[0].tagName.toUpperCase() !== tagName.toUpperCase()) {\r\n        $target = $target.find(tagName);\r\n      }\r\n\r\n      if ($target?.length) {\r\n        const currentRange = this.selection.getRange();\r\n        $block = $([currentRange.sc, currentRange.ec]).closest(tagName);\r\n        // remove class added for current block\r\n        $block.removeClass();\r\n        const className = $target[0].className || '';\r\n        if (className) {\r\n          $block.addClass(className);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Clean empty class or style\r\n    this.cleanEmptyStyling($block);\r\n  }\r\n\r\n  formatPara() {\r\n    this.formatBlock('P');\r\n  }\r\n\r\n  fontStyling(target, value) {\r\n    const rng = this.selection.getRange();\r\n\r\n    if (rng !== '') {\r\n      const spans = this.style.styleNodes(rng);\r\n      this.$editor.find('.note-status-output').html('');\r\n      $(spans).css(target, value);\r\n\r\n      // [workaround] added styled bogus span for style\r\n      //  - also bogus character needed for cursor position\r\n      if (rng.collapsed) {\r\n        const firstSpan = lists.head(spans);\r\n        if (firstSpan && !dom.nodeLength(firstSpan)) {\r\n          firstSpan.innerHTML = Point.ZERO_WIDTH_NBSP_CHAR;\r\n          this.selection.setRange(range.createFromNode(firstSpan.firstChild));\r\n          this.$editable.data(KEY_BOGUS, firstSpan);\r\n        }\r\n      } else {\r\n        this.selection.setRange(rng);\r\n      }\r\n    } else {\r\n      const noteStatusOutput = $.now();\r\n      this.$editor.find('.note-status-output').html('<div id=\"note-status-output-' + noteStatusOutput + '\" class=\"alert alert-info\">' + this.lang.output.noSelection + '</div>');\r\n      setTimeout(function() { $('#note-status-output-' + noteStatusOutput).remove(); }, 5000);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * unlink\r\n   *\r\n   * @type command\r\n   */\r\n  unlink() {\r\n    let img = $(this.selection.selectedControl);\r\n    if (img.is('img') && img.parent().is('a')) {\r\n      // Special handling for image unlinking\r\n      this.beforeCommand();\r\n      img.unwrap();\r\n      this.afterCommand(true);\r\n      this.context.modules.imagePopover.hide();\r\n    }\r\n    else {\r\n      let rng = this.selection.getRange();\r\n      if (rng.isOnAnchor()) {\r\n        const anchor = dom.ancestor(rng.sc, dom.isAnchor);\r\n        rng = range.createFromNode(anchor);\r\n        this.selection.setRange(rng);\r\n  \r\n        this.beforeCommand();\r\n        document.execCommand('unlink');\r\n        this.afterCommand();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * returns link info\r\n   *\r\n   * @return {Object}\r\n   * @return {WrappedRange} return.range\r\n   * @return {String} return.text\r\n   * @return {Boolean} [return.isNewWindow=true]\r\n   * @return {String} [return.url=\"\"]\r\n   */\r\n  getLinkInfo() {\r\n    if (!this.hasFocus()) {\r\n      this.focus();\r\n    }\r\n\r\n    let img, a, rng;\r\n\r\n    img = this.selection.selectedControl;\r\n    if (img?.parentElement?.matches('a')) {\r\n      // First check if a linked image is selected\r\n      a = img.parentElement;\r\n      rng = range.create(a, 0, a, a.childNodes.length);\r\n    }\r\n\r\n    if (!rng) {\r\n      rng = this.selection.getRange().expand(dom.isAnchor);\r\n    }\r\n\r\n    if (!a) {\r\n      // Get the first anchor on range (for edit).\r\n      a = lists.head(rng.nodes(dom.isAnchor));\r\n    }\r\n\r\n    const linkInfo = {\r\n      range: rng,\r\n      a: a,\r\n      img: img,\r\n      text: img ? null : rng.toString()\r\n    };\r\n\r\n    if (a) {\r\n      linkInfo.url = a.getAttribute('href');\r\n      linkInfo.cssClass = a.className;\r\n      linkInfo.cssStyle = a.style.cssText;\r\n      linkInfo.rel = a.rel;\r\n      linkInfo.isNewWindow = a.target == '_blank';\r\n    }\r\n\r\n    return linkInfo;\r\n  }\r\n\r\n  addRow(position) {\r\n    const rng = this.selection.getRange();\r\n    if (rng.collapsed && rng.isOnCell()) {\r\n      this.beforeCommand();\r\n      this.table.addRow(rng, position);\r\n      this.afterCommand();\r\n    }\r\n  }\r\n\r\n  addCol(position) {\r\n    const rng = this.selection.getRange();\r\n    if (rng.collapsed && rng.isOnCell()) {\r\n      this.beforeCommand();\r\n      this.table.addCol(rng, position);\r\n      this.afterCommand();\r\n    }\r\n  }\r\n\r\n  deleteRow() {\r\n    const rng = this.selection.getRange();\r\n    if (rng.collapsed && rng.isOnCell()) {\r\n      this.beforeCommand();\r\n      this.table.deleteRow(rng);\r\n      this.afterCommand();\r\n    }\r\n  }\r\n\r\n  deleteCol() {\r\n    const rng = this.selection.getRange();\r\n    if (rng.collapsed && rng.isOnCell()) {\r\n      this.beforeCommand();\r\n      this.table.deleteCol(rng);\r\n      this.afterCommand();\r\n    }\r\n  }\r\n\r\n  deleteTable() {\r\n    const rng = this.selection.getRange();\r\n    if (rng.collapsed && rng.isOnCell()) {\r\n      this.beforeCommand();\r\n      this.table.deleteTable(rng);\r\n      this.afterCommand();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Position} pos\r\n   * @param {jQuery} $target - target element\r\n   * @param {Boolean} [bKeepRatio] - keep ratio\r\n   */\r\n  resizeTo(pos, $target, bKeepRatio) {\r\n    let imageSize;\r\n    if (bKeepRatio) {\r\n      const newRatio = pos.y / pos.x;\r\n      const ratio = $target.data('ratio');\r\n      imageSize = {\r\n        width: ratio > newRatio ? pos.x : pos.y / ratio,\r\n        height: ratio > newRatio ? pos.x * ratio : pos.y,\r\n      };\r\n    } else {\r\n      imageSize = {\r\n        width: pos.x,\r\n        height: pos.y,\r\n      };\r\n    }\r\n\r\n    $target.css(imageSize);\r\n  }\r\n\r\n  /**\r\n   * returns whether editable area has focus or not.\r\n   */\r\n  hasFocus() {\r\n    return this.$editable.is(':focus');\r\n  }\r\n\r\n  /**\r\n   * set focus\r\n   */\r\n  focus() {\r\n    // [workaround] Screen will move when page is scolled in IE.\r\n    //  - do focus when not focused\r\n    if (!this.hasFocus()) {\r\n      this.$editable.trigger('focus');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * returns whether contents is empty or not.\r\n   * @return {Boolean}\r\n   */\r\n  isEmpty() {\r\n    return dom.isEmpty(this.$editable[0]) || dom.emptyPara === this.$editable.html();\r\n  }\r\n\r\n  /**\r\n   * Removes all contents and restores the editable instance to an _emptyPara_.\r\n   */\r\n  empty() {\r\n    this.context.invoke('code', dom.emptyPara);\r\n  }\r\n\r\n  /**\r\n   * normalize content\r\n   */\r\n  normalizeContent() {\r\n    this.$editable[0].normalize();\r\n  }\r\n\r\n  showPopover($popover, target, placement = 'top') {\r\n    if ($popover?.length) {\r\n\r\n      let popper = $popover.data('popper');\r\n      if (popper) {\r\n        popper.destroy();\r\n      }\r\n      popper = new Popper(target, $popover[0], {\r\n        placement: placement,\r\n        modifiers: {\r\n          computeStyle: { gpuAcceleration: false },\r\n          arrow: { element: '.arrow' },\r\n          preventOverflow: { boundariesElement: this.$editable[0] }\r\n        }\r\n      });\r\n\r\n      popper.scheduleUpdate();\r\n      this.context.triggerEvent('popover.shown', $popover);\r\n      $popover.data('popper', popper).show();\r\n    }\r\n  }\r\n\r\n  hidePopover($popover) {\r\n    if ($popover?.length) {\r\n      const popper = $popover.data('popper');\r\n      if (popper) {\r\n        popper.destroy();\r\n        $popover.removeData('popper');     \r\n      }\r\n  \r\n      $popover.hide();\r\n    }\r\n  }\r\n}\r\n","import lists from '../core/lists';\r\n\r\nexport default class Clipboard {\r\n  constructor(context) {\r\n    this.context = context;\r\n    this.options = context.options;\r\n    this.$editable = context.layoutInfo.editable;\r\n  }\r\n\r\n  initialize() {\r\n    this.$editable.on('paste', this.pasteByEvent.bind(this));\r\n  }\r\n\r\n  /**\r\n   * paste by clipboard event\r\n   *\r\n   * @param {Event} event\r\n   */\r\n  pasteByEvent(event) {\r\n\r\n    if (this.context.isDisabled()) {\r\n      return;\r\n    }\r\n    const clipboardData = event.originalEvent.clipboardData;\r\n\r\n    if (clipboardData && clipboardData.items && clipboardData.items.length) {\r\n      const clipboardFiles = clipboardData.files;\r\n      const clipboardText = clipboardData.getData('Text');\r\n\r\n      // paste img file\r\n      if (clipboardFiles.length > 0 && this.options.allowClipboardImagePasting) {\r\n        this.context.invoke('editor.insertImagesOrCallback', clipboardFiles);\r\n        event.preventDefault();\r\n      }\r\n\r\n      // paste text with maxTextLength check\r\n      if (clipboardText.length > 0 && this.context.invoke('editor.isLimited', clipboardText.length)) {\r\n        event.preventDefault();\r\n      }\r\n    } else if (window.clipboardData) {\r\n      // for IE\r\n      let text = window.clipboardData.getData('text');\r\n      if (this.context.invoke('editor.isLimited', text.length)) {\r\n        event.preventDefault();\r\n      }\r\n    }\r\n\r\n    // Call editor.afterCommand after proceeding default event handler\r\n    setTimeout(() => {\r\n      this.context.invoke('editor.afterCommand');\r\n    }, 10);\r\n  }\r\n}\r\n","import $ from 'jquery';\r\n\r\nexport default class Dropzone {\r\n  constructor(context) {\r\n    this.context = context;\r\n    this.$eventListener = $(document);\r\n    this.$editor = context.layoutInfo.editor;\r\n    this.$editable = context.layoutInfo.editable;\r\n    this.options = context.options;\r\n    this.lang = this.options.langInfo;\r\n    this.documentEventHandlers = {};\r\n\r\n    this.$dropzone = $([\r\n      '<div class=\"note-dropzone\">',\r\n        '<div class=\"note-dropzone-message\"></div>',\r\n      '</div>',\r\n    ].join('')).prependTo(this.$editor);\r\n  }\r\n\r\n  /**\r\n   * attach Drag and Drop Events\r\n   */\r\n  initialize() {\r\n    if (this.options.disableDragAndDrop) {\r\n      // prevent default drop event\r\n      this.documentEventHandlers.onDrop = (e) => {\r\n        e.preventDefault();\r\n      };\r\n      // do not consider outside of dropzone\r\n      this.$eventListener = this.$dropzone;\r\n      this.$eventListener.on('drop', this.documentEventHandlers.onDrop);\r\n    } else {\r\n      this.attachDragAndDropEvent();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * attach Drag and Drop Events\r\n   */\r\n  attachDragAndDropEvent() {\r\n    let collection = $();\r\n    const $dropzoneMessage = this.$dropzone.find('.note-dropzone-message');\r\n\r\n    this.documentEventHandlers.onDragenter = (e) => {\r\n      const isCodeview = this.context.invoke('codeview.isActivated');\r\n      const hasEditorSize = this.$editor.width() > 0 && this.$editor.height() > 0;\r\n      if (!isCodeview && !collection.length && hasEditorSize) {\r\n        this.$editor.addClass('dragover');\r\n        this.$dropzone.width(this.$editor.width());\r\n        this.$dropzone.height(this.$editor.height());\r\n        $dropzoneMessage.text(this.lang.image.dragImageHere);\r\n      }\r\n      collection = collection.add(e.target);\r\n    };\r\n\r\n    this.documentEventHandlers.onDragleave = (e) => {\r\n      collection = collection.not(e.target);\r\n\r\n      // If nodeName is BODY, then just make it over (fix for IE)\r\n      if (!collection.length || e.target.nodeName === 'BODY') {\r\n        collection = $();\r\n        this.$editor.removeClass('dragover');\r\n      }\r\n    };\r\n\r\n    this.documentEventHandlers.onDrop = () => {\r\n      collection = $();\r\n      this.$editor.removeClass('dragover');\r\n    };\r\n\r\n    // show dropzone on dragenter when dragging a object to document\r\n    // -but only if the editor is visible, i.e. has a positive width and height\r\n    this.$eventListener.on('dragenter', this.documentEventHandlers.onDragenter)\r\n      .on('dragleave', this.documentEventHandlers.onDragleave)\r\n      .on('drop', this.documentEventHandlers.onDrop);\r\n\r\n    // change dropzone's message on hover.\r\n    this.$dropzone.on('dragenter', () => {\r\n      this.$dropzone.addClass('hover');\r\n      $dropzoneMessage.text(this.lang.image.dropImage);\r\n    }).on('dragleave', () => {\r\n      this.$dropzone.removeClass('hover');\r\n      $dropzoneMessage.text(this.lang.image.dragImageHere);\r\n    });\r\n\r\n    // attach dropImage\r\n    this.$dropzone.on('drop', (event) => {\r\n      const dataTransfer = event.originalEvent.dataTransfer;\r\n\r\n      // stop the browser from opening the dropped content\r\n      event.preventDefault();\r\n\r\n      if (dataTransfer && dataTransfer.files && dataTransfer.files.length) {\r\n        this.$editable.trigger('focus');\r\n        this.context.invoke('editor.insertImagesOrCallback', dataTransfer.files);\r\n      } else {\r\n        $.each(dataTransfer.types, (idx, type) => {\r\n          // skip moz-specific types\r\n          if (type.toLowerCase().indexOf('_moz_') > -1) {\r\n            return;\r\n          }\r\n          const content = dataTransfer.getData(type);\r\n\r\n          if (type.toLowerCase().indexOf('text') > -1) {\r\n            this.context.invoke('editor.pasteHTML', content);\r\n          } else {\r\n            $(content).each((idx, item) => {\r\n              this.context.invoke('editor.insertNode', item);\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }).on('dragover', false); // prevent default dragover event\r\n  }\r\n\r\n  destroy() {\r\n    Object.keys(this.documentEventHandlers).forEach((key) => {\r\n      this.$eventListener.off(key.slice(2).toLowerCase(), this.documentEventHandlers[key]);\r\n    });\r\n    this.documentEventHandlers = {};\r\n  }\r\n}\r\n","import dom from '../core/dom';\r\nimport key from '../core/key';\r\nimport range from '../core/range';\r\nimport Str from '../core/Str';\r\n\r\nconst jumpMarker = '__note-jm__';\r\nconst jumpMarkerComment = '<!--' + jumpMarker + '-->';\r\n\r\n/**\r\n * @class Codeview\r\n */\r\nexport default class CodeView {\r\n  constructor(context) {\r\n    this.context = context;\r\n    this.$editor = context.layoutInfo.editor;\r\n    this.$editable = context.layoutInfo.editable;\r\n    this.$codable = context.layoutInfo.codable;\r\n    this.options = context.options;\r\n    this.CodeMirrorConstructor = window.CodeMirror;\r\n\r\n    if (this.options.codemirror.CodeMirrorConstructor) {\r\n      this.CodeMirrorConstructor = this.options.codemirror.CodeMirrorConstructor;\r\n    }\r\n  }\r\n\r\n  sync(html) {\r\n    const isCodeview = this.isActivated();\r\n    const CodeMirror = this.CodeMirrorConstructor;\r\n\r\n    if (isCodeview) {\r\n      if (html) {\r\n        if (CodeMirror) {\r\n          this.$codable.data('cmEditor').getDoc().setValue(html);\r\n        } else {\r\n          this.$codable.val(html);\r\n        }\r\n      } else {\r\n        if (CodeMirror) {\r\n          this.$codable.data('cmEditor').save();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  initialize() {\r\n    this.$codable.on('keyup', (event) => {\r\n      if (event.keyCode === key.code.ESCAPE) {\r\n        this.deactivate();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @return {Boolean}\r\n   */\r\n  isActivated() {\r\n    return this.$editor.hasClass('codeview');\r\n  }\r\n\r\n  /**\r\n   * toggle codeview\r\n   */\r\n  toggle() {\r\n    if (this.isActivated()) {\r\n      this.deactivate();\r\n    } \r\n    else {\r\n      this.activate();\r\n    }\r\n    this.context.triggerEvent('codeview.toggled');\r\n  }\r\n\r\n  /**\r\n   * purify input value\r\n   * @param value\r\n   * @returns {*}\r\n   */\r\n  purify(value) {\r\n    if (this.options.codeviewFilter) {\r\n      // filter code view regex\r\n      value = value.replace(this.options.codeviewFilterRegex, '');\r\n      // allow specific iframe tag\r\n      if (this.options.codeviewIframeFilter) {\r\n        const whitelist = this.options.codeviewIframeWhitelistSrc.concat(this.options.codeviewIframeWhitelistSrcBase);\r\n        value = value.replace(/(<iframe.*?>.*?(?:<\\/iframe>)?)/gi, function(tag) {\r\n          // remove if src attribute is duplicated\r\n          if (/<.+src(?==?('|\"|\\s)?)[\\s\\S]+src(?=('|\"|\\s)?)[^>]*?>/i.test(tag)) {\r\n            return '';\r\n          }\r\n          for (const src of whitelist) {\r\n            // pass if src is trusted\r\n            if ((new RegExp('src=\"(https?:)?\\/\\/' + src.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&') + '\\/(.+)\"')).test(tag)) {\r\n              return tag;\r\n            }\r\n          }\r\n          return '';\r\n        });\r\n      }\r\n    }\r\n    return value;\r\n  }\r\n\r\n  normalizeSelRange() {\r\n    const editor = this.context.modules.editor;\r\n    const selection = editor.selection;\r\n\r\n    let rng;\r\n    if (selection.selectedControl) {\r\n      // TODO: selectedControl is always null due to Handle.js blur event firing beforehand.\r\n      rng = range.createFromNodeBefore(selection.selectedControl);\r\n    } else {\r\n      rng = selection.getRange().cloneRange().collapse(true);\r\n    }\r\n\r\n    return range.getNativeRange(rng);\r\n  }\r\n\r\n  /**\r\n   * Activate code view\r\n   */\r\n  activate() {\r\n    this.context.triggerEvent('codeview.activating');\r\n\r\n    const CodeMirror = this.CodeMirrorConstructor;\r\n    const editor = this.context.modules.editor;\r\n    \r\n    // Create selection range\r\n    let rng = this.normalizeSelRange();\r\n    \r\n    // Create and insert jump marker node\r\n    rng.insertNode(document.createComment(jumpMarker));\r\n\r\n    let html = editor.html();\r\n\r\n    // Find the position of jump marker in markup\r\n    const jumpMarkerPos = Str.findPosition(html, jumpMarkerComment);\r\n    if (jumpMarkerPos) {\r\n      // Remove jump marker comment from markup\r\n      html = html.replace(jumpMarkerComment, '');\r\n    }\r\n\r\n    this.$codable.val(html);\r\n    this.$codable.height(this.$editable.height());\r\n\r\n    this.context.invoke('toolbar.updateCodeview', true);\r\n    this.context.invoke('airPopover.updateCodeview', true);\r\n\r\n    this.$editor.addClass('codeview');\r\n    this.$codable.trigger('focus');\r\n\r\n    // activate CodeMirror as codable\r\n    if (CodeMirror) {\r\n      const cmEditor = CodeMirror.fromTextArea(this.$codable[0], this.options.codemirror);\r\n\r\n      // CodeMirror TernServer\r\n      if (this.options.codemirror.tern) {\r\n        const server = new CodeMirror.TernServer(this.options.codemirror.tern);\r\n        cmEditor.ternServer = server;\r\n        cmEditor.on('cursorActivity', (cm) => {\r\n          server.updateArgHints(cm);\r\n        });\r\n      }\r\n\r\n      cmEditor.on('blur', (event) => {\r\n        this.context.triggerEvent('codeview.blur', cmEditor.getValue(), event);\r\n      });\r\n      cmEditor.on('change', () => {\r\n        this.context.triggerEvent('codeview.change', cmEditor.getValue(), cmEditor);\r\n      });\r\n\r\n      // CodeMirror hasn't Padding.\r\n      cmEditor.setSize(null, this.$editable.outerHeight());\r\n      this.$codable.data('cmEditor', cmEditor);\r\n\r\n      // Jump to selection marker\r\n      if (jumpMarkerPos) {\r\n        const pos = {line: jumpMarkerPos.line, ch: jumpMarkerPos.column};\r\n        cmEditor.setCursor(pos);\r\n        cmEditor.scrollIntoView(pos);\r\n      }\r\n    } \r\n    else {\r\n      this.$codable.on('blur', (event) => {\r\n        this.context.triggerEvent('codeview.blur', this.$codable.val(), event);\r\n      });\r\n      this.$codable.on('input', () => {\r\n        this.context.triggerEvent('codeview.change', this.$codable.val(), this.$codable);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * deactivate code view\r\n   */\r\n  deactivate() {\r\n    this.context.triggerEvent('codeview.leaving');\r\n\r\n    const CodeMirror = this.CodeMirrorConstructor;\r\n    // deactivate CodeMirror as codable\r\n    if (CodeMirror) {\r\n      const cmEditor = this.$codable.data('cmEditor');\r\n      this.$codable.val(cmEditor.getValue());\r\n      cmEditor.toTextArea();\r\n    }\r\n\r\n    const value = this.purify(dom.value(this.$codable, this.options.prettifyHtml) || dom.emptyPara);\r\n    const isChange = this.$editable.html() !== value;\r\n\r\n    this.$editable.html(value);\r\n    this.$editable.height(this.options.height ? this.$codable.height() : 'auto');\r\n    this.$editor.removeClass('codeview');\r\n\r\n    if (isChange) {\r\n      this.context.triggerEvent('change', this.$editable);\r\n    }\r\n\r\n    this.$editable.trigger('focus');\r\n\r\n    this.context.invoke('toolbar.updateCodeview', false);\r\n    this.context.invoke('airPopover.updateCodeview', false);\r\n  }\r\n\r\n  destroy() {\r\n    if (this.isActivated()) {\r\n      this.deactivate();\r\n    }\r\n  }\r\n}\r\n","import $ from 'jquery';\r\nconst EDITABLE_PADDING = 24;\r\n\r\nexport default class Statusbar {\r\n  constructor(context) {\r\n    this.$document = $(document);\r\n    this.$statusbar = context.layoutInfo.statusbar;\r\n    this.$editable = context.layoutInfo.editable;\r\n    this.$codable = context.layoutInfo.codable;\r\n    this.options = context.options;\r\n  }\r\n\r\n  initialize() {\r\n    if (this.options.airMode || this.options.disableResizeEditor) {\r\n      this.destroy();\r\n      return;\r\n    }\r\n\r\n    this.$statusbar.on('mousedown touchstart', (event) => {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n\r\n      const editableTop = this.$editable.offset().top - this.$document.scrollTop();\r\n      const editableCodeTop = this.$codable.offset().top - this.$document.scrollTop();\r\n\r\n      const onStatusbarMove = (event) => {\r\n        let originalEvent = (event.type == 'mousemove') ? event : event.originalEvent.touches[0];\r\n        let height = originalEvent.clientY - (editableTop + EDITABLE_PADDING);\r\n        let heightCode = originalEvent.clientY - (editableCodeTop + EDITABLE_PADDING);\r\n\r\n        height = (this.options.minheight > 0) ? Math.max(height, this.options.minheight) : height;\r\n        height = (this.options.maxHeight > 0) ? Math.min(height, this.options.maxHeight) : height;\r\n        heightCode = (this.options.minheight > 0) ? Math.max(heightCode, this.options.minheight) : heightCode;\r\n        heightCode = (this.options.maxHeight > 0) ? Math.min(heightCode, this.options.maxHeight) : heightCode;\r\n\r\n\r\n        this.$editable.height(height);\r\n        this.$codable.height(heightCode);\r\n      };\r\n\r\n      this.$document.on('mousemove touchmove', onStatusbarMove).one('mouseup touchend', () => {\r\n        this.$document.off('mousemove touchmove', onStatusbarMove);\r\n      });\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    this.$statusbar.off();\r\n    this.$statusbar.addClass('locked');\r\n  }\r\n}\r\n","import $ from 'jquery';\r\n\r\nexport default class Fullscreen {\r\n  constructor(context) {\r\n    this.context = context;\r\n\r\n    this.$editor = context.layoutInfo.editor;\r\n    this.$toolbar = context.layoutInfo.toolbar;\r\n    this.$editable = context.layoutInfo.editable;\r\n    this.$codable = context.layoutInfo.codable;\r\n\r\n    this.$window = $(window);\r\n    this.$scrollbar = $('html, body');\r\n    this.scrollbarClassName = 'note-fullscreen-body';\r\n\r\n    this.onResize = () => {\r\n      this.resizeTo({\r\n        h: this.$window.height() - this.$toolbar.outerHeight(),\r\n      });\r\n    };\r\n  }\r\n\r\n  resizeTo(size) {\r\n    this.$editable.css('height', size.h);\r\n    this.$codable.css('height', size.h);\r\n    if (this.$codable.data('cmeditor')) {\r\n      this.$codable.data('cmeditor').setsize(null, size.h);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * toggle fullscreen\r\n   */\r\n  toggle() {\r\n    this.$editor.toggleClass('fullscreen');\r\n    const isFullscreen = this.isFullscreen();\r\n    this.$scrollbar.toggleClass(this.scrollbarClassName, isFullscreen);\r\n    if (isFullscreen) {\r\n      this.$editable.data('orgHeight', this.$editable.css('height'));\r\n      this.$editable.data('orgMaxHeight', this.$editable.css('maxHeight'));\r\n      this.$editable.css('maxHeight', '');\r\n      this.$window.on('resize', this.onResize).trigger('resize');\r\n    } else {\r\n      this.$window.off('resize', this.onResize);\r\n      this.resizeTo({ h: this.$editable.data('orgHeight') });\r\n      this.$editable.css('maxHeight', this.$editable.css('orgMaxHeight'));\r\n    }\r\n\r\n    this.context.invoke('toolbar.updateFullscreen', isFullscreen);\r\n  }\r\n\r\n  isFullscreen() {\r\n    return this.$editor.hasClass('fullscreen');\r\n  }\r\n\r\n  destroy() {\r\n    this.$scrollbar.removeClass(this.scrollbarClassName);\r\n  }\r\n}\r\n","import $ from 'jquery';\r\nimport dom from '../core/dom';\r\n\r\nexport default class Handle {\r\n  constructor(context) {\r\n    this.context = context;\r\n    this.editor = context.modules.editor;\r\n    this.$document = $(document);\r\n    this.$editingArea = context.layoutInfo.editingArea;\r\n    this.options = context.options;\r\n    this.lang = this.options.langInfo;\r\n\r\n    this.events = {\r\n      'summernote.mousedown': (we, e) => {\r\n        if (this.update(e.target, e)) {\r\n          e.preventDefault();\r\n        }\r\n      },\r\n      'summernote.keyup summernote.scroll summernote.change summernote.dialog.shown': (_, e) => {\r\n        this.update(e?.target, e);\r\n      },\r\n      'summernote.disable': () => {\r\n        this.hide();\r\n      },\r\n      // 'summernote.blur': () => {\r\n      //   this.hide();\r\n      // },\r\n      'summernote.codeview.toggled': () => {\r\n        this.hide();\r\n      },\r\n    };\r\n  }\r\n\r\n  initialize() {\r\n    this.$handle = $([\r\n      '<div class=\"note-handle\">',\r\n        '<div class=\"note-control-selection\">',\r\n          '<div class=\"note-control-selection-bg\"></div>',\r\n          '<div class=\"note-control-holder note-control-nw\"></div>',\r\n          '<div class=\"note-control-holder note-control-ne\"></div>',\r\n          '<div class=\"note-control-holder note-control-sw\"></div>',\r\n          '<div class=\"',\r\n            (this.options.disableResizeImage ? 'note-control-holder' : 'note-control-sizing'),\r\n          ' note-control-se\"></div>',\r\n          (this.options.disableResizeImage ? '' : '<div class=\"note-control-selection-info\"></div>'),\r\n        '</div>',\r\n      '</div>',\r\n    ].join('')).prependTo(this.$editingArea);\r\n\r\n    this.$handle.on('mousedown', (event) => {\r\n      if (dom.isControlSizing(event.target)) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const $target = this.$handle.find('.note-control-selection').data('target');\r\n        const posStart = $target.offset();\r\n        const scrollTop = this.$document.scrollTop();\r\n\r\n        const onMouseMove = (event) => {\r\n          this.context.invoke('editor.resizeTo', {\r\n            x: event.clientX - posStart.left,\r\n            y: event.clientY - (posStart.top - scrollTop),\r\n          }, $target, !event.shiftKey);\r\n\r\n          this.update($target[0], event);\r\n        };\r\n\r\n        this.$document\r\n          .on('mousemove', onMouseMove)\r\n          .one('mouseup', (e) => {\r\n            e.preventDefault();\r\n            this.$document.off('mousemove', onMouseMove);\r\n            this.context.invoke('editor.afterCommand');\r\n          });\r\n\r\n        if (!$target.data('ratio')) { // original ratio.\r\n          $target.data('ratio', $target.height() / $target.width());\r\n        }\r\n      }\r\n    });\r\n\r\n    // Listen for scrolling on the handle overlay.\r\n    this.$handle.on('wheel', (event) => {\r\n      event.preventDefault();\r\n      this.update();\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    this.$handle.remove();\r\n  }\r\n\r\n  update(target, e) {\r\n    if (this.context.isDisabled()) {\r\n      return false;\r\n    }\r\n\r\n    target = target || this.editor.selection.selectedControl;\r\n\r\n    const isScroll = e?.type == 'scroll';\r\n    if (isScroll) {\r\n      target = this.editor.selection.selectedControl;\r\n    }\r\n\r\n    const isImage = dom.isImg(target);\r\n    const $selection = this.$handle.find('.note-control-selection');\r\n\r\n    if (!isScroll) {\r\n      this.context.invoke('imagePopover.update', target, e);\r\n    }   \r\n\r\n    if (isImage) {\r\n      const $image = $(target);\r\n\r\n      const areaRect = this.$editingArea[0].getBoundingClientRect();\r\n      const imageRect = target.getBoundingClientRect();\r\n\r\n      $selection.css({\r\n        display: 'block',\r\n        left: imageRect.left - areaRect.left,\r\n        top: imageRect.top - areaRect.top,\r\n        width: imageRect.width,\r\n        height: imageRect.height,\r\n      }).data('target', $image); // save current image element.\r\n\r\n      const origImageObj = new Image();\r\n      origImageObj.src = $image.attr('src');\r\n\r\n      let sizingText = Math.ceil(imageRect.width) + 'x' + Math.ceil(imageRect.height);\r\n      if (origImageObj.width > 0 && origImageObj.height > 0) {\r\n        sizingText += ' (' + this.lang.image.original + ': ' + origImageObj.width + 'x' + origImageObj.height + ')';\r\n      }\r\n      const $info = $selection.find('.note-control-selection-info').text(sizingText);\r\n      const exceeds = $info.outerWidth() > imageRect.width - 10 || $info.outerHeight() > imageRect.height - 10;\r\n\r\n      $info.toggle(!exceeds);\r\n      this.context.invoke('editor.saveTarget', target);\r\n    } \r\n    else {\r\n      this.hide();\r\n    }\r\n\r\n    return isImage;\r\n  }\r\n\r\n  /**\r\n   * hide\r\n   *\r\n   * @param {jQuery} $handle\r\n   */\r\n  hide() {\r\n    this.$handle.children().hide();\r\n    this.context.invoke('editor.clearTarget');\r\n  }\r\n}\r\n","import $ from 'jquery';\r\nimport lists from '../core/lists';\r\nimport key from '../core/key';\r\n\r\nconst defaultScheme = 'http://';\r\nconst linkPattern = /^([A-Za-z][A-Za-z0-9+-.]*\\:[\\/]{2}|tel:|mailto:[A-Z0-9._%+-]+@|xmpp:[A-Z0-9._%+-]+@)?(www\\.)?(.+)$/i;\r\n\r\nexport default class AutoLink {\r\n  constructor(context) {\r\n    this.context = context;\r\n    this.options = context.options;\r\n    this.$editable = context.layoutInfo.editable;\r\n    this.events = {\r\n      'summernote.keyup': (we, event) => {\r\n        if (!event.isDefaultPrevented()) {\r\n          this.handleKeyup(event);\r\n        }\r\n      },\r\n      'summernote.keydown': (we, event) => {\r\n        this.handleKeydown(event);\r\n      },\r\n    };\r\n  }\r\n\r\n  initialize() {\r\n    this.lastWordRange = null;\r\n  }\r\n\r\n  destroy() {\r\n    this.lastWordRange = null;\r\n  }\r\n\r\n  replace() {\r\n    if (!this.lastWordRange) {\r\n      return;\r\n    }\r\n\r\n    const keyword = this.lastWordRange.toString();\r\n    const match = keyword.match(linkPattern);\r\n\r\n    if (match && (match[1] || match[2])) {\r\n      const link = match[1] ? keyword : defaultScheme + keyword;\r\n      const urlText = this.options.showDomainOnlyForAutolink ?\r\n        keyword.replace(/^(?:https?:\\/\\/)?(?:tel?:?)?(?:mailto?:?)?(?:xmpp?:?)?(?:www\\.)?/i, '').split('/')[0]\r\n        : keyword;\r\n      const node = $('<a></a>').html(urlText).attr('href', link)[0];\r\n      if (this.context.options.linkTargetBlank) {\r\n        $(node).attr('target', '_blank');\r\n      }\r\n\r\n      this.lastWordRange.insertNode(node);\r\n      this.lastWordRange = null;\r\n      this.context.invoke('editor.focus');\r\n      this.context.triggerEvent('change', this.$editable);\r\n    }\r\n  }\r\n\r\n  handleKeydown(event) {\r\n    if (lists.contains([key.code.ENTER, key.code.SPACE], event.keyCode)) {\r\n      const wordRange = this.context.invoke('editor.createRange').getWordRange({ trim: true });\r\n      this.lastWordRange = wordRange;\r\n    }\r\n  }\r\n\r\n  handleKeyup(event) {\r\n    if (key.code.SPACE === event.keyCode || (key.code.ENTER === event.keyCode && !event.shiftKey)) {\r\n      this.replace();\r\n    }\r\n  }\r\n}\r\n","import dom from '../core/dom';\r\n\r\n/**\r\n * textarea auto sync.\r\n */\r\nexport default class AutoSync {\r\n  constructor(context) {\r\n    this.$note = context.layoutInfo.note;\r\n    this.events = {\r\n      'summernote.change': () => {\r\n        this.$note.val(context.invoke('code'));\r\n      },\r\n    };\r\n  }\r\n\r\n  shouldInitialize() {\r\n    return dom.isTextarea(this.$note[0]);\r\n  }\r\n}\r\n","import lists from '../core/lists';\r\nimport dom from '../core/dom';\r\nimport key from '../core/key';\r\n\r\nexport default class AutoReplace {\r\n  constructor(context) {\r\n    this.context = context;\r\n    this.options = context.options.replace || {};\r\n\r\n    this.keys = [key.code.ENTER, key.code.SPACE, key.code.PERIOD, key.code.COMMA, key.code.SEMICOLON, key.code.SLASH];\r\n    this.previousKeydownCode = null;\r\n\r\n    this.events = {\r\n      'summernote.keyup': (we, event) => {\r\n        if (!event.isDefaultPrevented()) {\r\n          this.handleKeyup(event);\r\n        }\r\n      },\r\n      'summernote.keydown': (we, event) => {\r\n        this.handleKeydown(event);\r\n      },\r\n    };\r\n  }\r\n\r\n  shouldInitialize() {\r\n    return !!this.options.match;\r\n  }\r\n\r\n  initialize() {\r\n    this.lastWord = null;\r\n  }\r\n\r\n  destroy() {\r\n    this.lastWord = null;\r\n  }\r\n\r\n  replace() {\r\n    if (!this.lastWord) {\r\n      return;\r\n    }\r\n\r\n    const self = this;\r\n    const keyword = this.lastWord.toString();\r\n    this.options.match(keyword, function(match) {\r\n      if (match) {\r\n        let node = '';\r\n\r\n        if (typeof match === 'string') {\r\n          node = dom.createText(match);\r\n        } else if (match instanceof jQuery) {\r\n          node = match[0];\r\n        } else if (match instanceof Node) {\r\n          node = match;\r\n        }\r\n\r\n        if (!node) return;\r\n        self.lastWord.insertNode(node);\r\n        self.lastWord = null;\r\n        self.context.invoke('editor.focus');\r\n      }\r\n    });\r\n  }\r\n\r\n  handleKeydown(event) {\r\n    // this forces it to remember the last whole word, even if multiple termination keys are pressed\r\n    // before the previous key is let go.\r\n    if (this.previousKeydownCode && lists.contains(this.keys, this.previousKeydownCode)) {\r\n      this.previousKeydownCode = event.keyCode;\r\n      return;\r\n    }\r\n\r\n    if (lists.contains(this.keys, event.keyCode)) {\r\n      const wordRange = this.context.invoke('editor.createRange').getWordRange();\r\n      this.lastWord = wordRange;\r\n    }\r\n    this.previousKeydownCode = event.keyCode;\r\n  }\r\n\r\n  handleKeyup(event) {\r\n    if (lists.contains(this.keys, event.keyCode)) {\r\n      this.replace();\r\n    }\r\n  }\r\n}\r\n","import $ from 'jquery';\r\nexport default class Placeholder {\r\n  constructor(context) {\r\n    this.context = context;\r\n\r\n    this.$editingArea = context.layoutInfo.editingArea;\r\n    this.options = context.options;\r\n\r\n    if (this.options.inheritPlaceholder === true) {\r\n      // get placeholder value from the original element\r\n      this.options.placeholder = this.context.$note.attr('placeholder') || this.options.placeholder;\r\n    }\r\n\r\n    this.events = {\r\n      'summernote.init summernote.change': () => {\r\n        this.update();\r\n      },\r\n      'summernote.codeview.toggled': () => {\r\n        this.update();\r\n      },\r\n    };\r\n  }\r\n\r\n  shouldInitialize() {\r\n    return !!this.options.placeholder;\r\n  }\r\n\r\n  initialize() {\r\n    this.$placeholder = $('<div class=\"note-placeholder\"></div>');\r\n    this.$placeholder.on('click', () => {\r\n      this.context.invoke('focus');\r\n    }).html(this.options.placeholder).prependTo(this.$editingArea);\r\n\r\n    this.update();\r\n  }\r\n\r\n  destroy() {\r\n    this.$placeholder.remove();\r\n  }\r\n\r\n  update() {\r\n    const isShow = !this.context.invoke('codeview.isActivated') && this.context.invoke('editor.isEmpty');\r\n    this.$placeholder.toggle(isShow);\r\n  }\r\n}\r\n","import $ from 'jquery';\r\nimport func from '../core/func';\r\nimport lists from '../core/lists';\r\nimport env from '../core/env';\r\nimport Obj from '../core/Obj';\r\n\r\nexport default class Buttons {\r\n  constructor(context) {\r\n    this.ui = $.summernote.ui;\r\n    this.context = context;\r\n    this.$toolbar = context.layoutInfo.toolbar;\r\n    this.options = context.options;\r\n    this.lang = this.options.langInfo;\r\n    this.invertedKeyMap = Obj.invert(\r\n      this.options.keyMap[env.isMac ? 'mac' : 'pc']\r\n    );\r\n  }\r\n\r\n  representShortcut(editorMethod) {\r\n    let shortcut = this.invertedKeyMap[editorMethod];\r\n    if (!this.options.shortcuts || !shortcut) {\r\n      return '';\r\n    }\r\n\r\n    if (env.isMac) {\r\n      shortcut = shortcut.replace('CMD', '⌘').replace('SHIFT', '⇧');\r\n    }\r\n\r\n    shortcut = shortcut.replace('BACKSLASH', '\\\\')\r\n      .replace('SLASH', '/')\r\n      .replace('LEFTBRACKET', '[')\r\n      .replace('RIGHTBRACKET', ']');\r\n\r\n    return ' (' + shortcut + ')';\r\n  }\r\n\r\n  button(o) {\r\n    if (!this.options.tooltip && o.tooltip) {\r\n      delete o.tooltip;\r\n    }\r\n    o.container = this.options.container;\r\n    return this.ui.button(o);\r\n  }\r\n\r\n  initialize() {\r\n    this.addToolbarButtons();\r\n    this.addImagePopoverButtons();\r\n    this.addLinkPopoverButtons();\r\n    this.addTablePopoverButtons();\r\n    this.fontInstalledMap = {};\r\n  }\r\n\r\n  destroy() {\r\n    delete this.fontInstalledMap;\r\n  }\r\n\r\n  isFontInstalled(name) {\r\n    if (!Object.prototype.hasOwnProperty.call(this.fontInstalledMap, name)) {\r\n      this.fontInstalledMap[name] = env.isFontInstalled(name) ||\r\n        lists.contains(this.options.fontNamesIgnoreCheck, name);\r\n    }\r\n    return this.fontInstalledMap[name];\r\n  }\r\n\r\n  isFontDeservedToAdd(name) {\r\n    name = name.toLowerCase();\r\n    return (name !== '' && this.isFontInstalled(name) && env.genericFontFamilies.indexOf(name) === -1);\r\n  }\r\n\r\n  loadCustomColors($holder) {\r\n    const key = 'note:customcolors:' + $holder.data('event');\r\n    const savedColors = localStorage.getItem(key);\r\n\r\n    let arr;\r\n    if (savedColors) {\r\n      try {\r\n        arr = JSON.parse(savedColors);\r\n        if (arr.length > 8) {\r\n          arr = arr.slice(-8); // Keep the last 8 elements\r\n        }\r\n      } \r\n      catch {\r\n        localStorage.removeItem(key);\r\n      }\r\n    }\r\n\r\n    return arr || [];\r\n  }\r\n\r\n  saveCustomColor($holder, color) {\r\n    const key = 'note:customcolors:' + $holder.data('event');\r\n    const arr = this.loadCustomColors($holder);\r\n\r\n    arr.push(color);\r\n    if (arr.length > 8) {\r\n      arr.shift(); // Remove the first (oldest) item if the length exceeds 8\r\n    }\r\n\r\n    localStorage.setItem(key, JSON.stringify(arr));\r\n\r\n    this.updateCustomColorPalette($holder, arr);\r\n  }\r\n\r\n  updateCustomColorPalette($holder, arr) {\r\n    // Make fixed-width array with 8 items and fill gaps with #FFFFFF\r\n    const customColors = [arr.concat(Array(8 - arr.length).fill('#FFFFFF')).slice(0, 8)];\r\n    $holder.html(this.ui.palette({\r\n      colors: customColors,\r\n      colorsName: customColors,\r\n      eventName: $holder.data('event'),\r\n      container: this.options.container,\r\n      //tooltip: this.options.tooltip,\r\n    }).render());\r\n\r\n    $holder.find('.note-color-btn').eq(arr.length - 1).addClass('omega');\r\n  }\r\n\r\n  colorPalette(className, tooltip, backColor, foreColor) {\r\n    return this.ui.buttonGroup({\r\n      className: 'note-color btn-group-split ' + className,\r\n      children: [\r\n        this.button({\r\n          className: 'note-current-color-button',\r\n          contents: $(this.ui.icon(this.options.icons.paintbrush)).addClass('note-recent-color')[0].outerHTML,\r\n          tooltip: tooltip,\r\n          click: (event) => {\r\n            const $button = $(event.currentTarget);\r\n            if (backColor && foreColor) {\r\n              this.context.invoke('editor.color', {\r\n                backColor: $button.attr('data-backColor'),\r\n                foreColor: $button.attr('data-foreColor'),\r\n              });\r\n            } else if (backColor) {\r\n              this.context.invoke('editor.color', {\r\n                backColor: $button.attr('data-backColor'),\r\n              });\r\n            } else if (foreColor) {\r\n              this.context.invoke('editor.color', {\r\n                foreColor: $button.attr('data-foreColor'),\r\n              });\r\n            }\r\n          },\r\n          callback: ($button) => {\r\n            const $recentColor = $button.find('.note-recent-color');\r\n            if (backColor) {\r\n              $recentColor.css('background-color', this.options.colorButton.backColor);\r\n              $button.attr('data-backColor', this.options.colorButton.backColor);\r\n            }\r\n            if (foreColor) {\r\n              $recentColor.css('color', this.options.colorButton.foreColor);\r\n              $button.attr('data-foreColor', this.options.colorButton.foreColor);\r\n            } else {\r\n              $recentColor.css('color', 'transparent');\r\n            }\r\n          },\r\n        }),\r\n        this.button({\r\n          className: 'dropdown-toggle dropdown-toggle-split',\r\n          contents: this.ui.dropdownButtonContents('', this.options),\r\n          tooltip: this.lang.color.more,\r\n          data: {\r\n            toggle: 'dropdown',\r\n          },\r\n        }),\r\n        this.ui.dropdown({\r\n          items: (backColor ? [\r\n            '<div class=\"note-palette\">',\r\n              '<div class=\"note-palette-title\"><span class=\"text-truncate\">' + this.lang.color.background + '</span>',\r\n                '<button title=\"' + this.lang.color.transparent + '\" data-event=\"backColor\" data-value=\"transparent\" type=\"button\" class=\"note-color-reset btn btn-clear-dark btn-no-border btn-sm btn-icon ml-auto\">',\r\n                  '<i class=\"far fa-droplet-slash\"></i>',\r\n                '</button>',\r\n                '<button title=\"' + this.lang.color.cpSelect + '\" data-event=\"openPalette\" data-value=\"backColorPicker-'+this.options.id+'\" type=\"button\" class=\"note-color-select btn btn-clear-dark btn-no-border btn-sm btn-icon\">',\r\n                  '<i class=\"fa fa-eye-dropper\"></i>',\r\n                '</button>',\r\n                '<input type=\"color\" id=\"backColorPicker-'+this.options.id+'\" class=\"note-btn note-color-select-btn\" value=\"' + this.options.colorButton.backColor + '\" data-event=\"backColorPalette-'+this.options.id+'\">',\r\n              '</div>',\r\n              '<hr class=\"my-0\" />',\r\n              '<div class=\"note-holder\" data-event=\"backColor\"><!-- back colors --></div>',\r\n              '<hr class=\"my-0\" />',\r\n              '<div class=\"note-holder-custom\" id=\"backColorPalette-'+this.options.id+'\" data-event=\"backColor\"></div>',\r\n            '</div>',\r\n          ].join('') : '') +\r\n          (foreColor ? [\r\n            '<div class=\"note-palette\">',\r\n              '<div class=\"note-palette-title\"><span class=\"text-truncate\">' + this.lang.color.foreground + '</span>',\r\n                '<button title=\"' + this.lang.color.resetToDefault + '\" data-event=\"removeFormat\" data-value=\"foreColor\" type=\"button\" class=\"note-color-reset btn btn-clear-dark btn-no-border btn-sm btn-icon ml-auto\">',\r\n                  '<i class=\"far fa-droplet-slash\"></i>',\r\n                '</button>',\r\n                '<button title=\"' + this.lang.color.cpSelect + '\" data-event=\"openPalette\" data-value=\"foreColorPicker-'+this.options.id+'\" type=\"button\" class=\"note-color-select btn btn-clear-dark btn-no-border btn-sm btn-icon\">',\r\n                  '<i class=\"fa fa-eye-dropper\"></i>',\r\n                '</button>',\r\n                '<input type=\"color\" id=\"foreColorPicker-'+this.options.id+'\" class=\"note-btn note-color-select-btn\" value=\"' + this.options.colorButton.foreColor + '\" data-event=\"foreColorPalette-'+this.options.id+'\">',\r\n              '</div>',\r\n              '<hr class=\"my-0\" />',\r\n              '<div class=\"note-holder\" data-event=\"foreColor\"><!-- fore colors --></div>',\r\n              '<hr class=\"my-0\" />',\r\n              '<div class=\"note-holder-custom\" id=\"foreColorPalette-'+this.options.id+'\" data-event=\"foreColor\"></div>',\r\n            '</div>',\r\n          ].join('') : ''),\r\n          callback: ($dropdown) => {\r\n            $dropdown.find('.note-holder').each((idx, item) => {\r\n              const $holder = $(item);\r\n              $holder.append(this.ui.palette({\r\n                colors: this.options.colors,\r\n                colorsName: this.options.colorsName,\r\n                eventName: $holder.data('event'),\r\n                container: this.options.container,\r\n                //tooltip: this.options.tooltip,\r\n              }).render());\r\n            });\r\n            $dropdown.find('.note-holder-custom').each((idx, item) => {\r\n              const $holder = $(item);\r\n              const arr = this.loadCustomColors($holder);\r\n              this.updateCustomColorPalette($holder, arr);\r\n            });\r\n            $dropdown.find('input[type=color]').each((_idx, item) => {\r\n              $(item).on(\"change\", (e) => {\r\n                const input = e.currentTarget;\r\n                const $holder = $dropdown.find('#' + $(input).data('event'));\r\n                const color = input.value.toUpperCase();\r\n\r\n                this.saveCustomColor($holder, color);\r\n                this.updateCustomColorPalette($holder, this.loadCustomColors($holder));\r\n\r\n                const $chip = $holder.find('.note-color-btn.omega').first();\r\n                $chip.trigger('click');\r\n              });\r\n            });\r\n          },\r\n          click: (event) => {\r\n            event.stopPropagation();\r\n            \r\n            const $parent = $('.' + className).find('.note-dropdown-menu');\r\n            const $button = $(event.target.closest('button'));\r\n            const eventName = $button.data('event');\r\n            const value = $button.attr('data-value');\r\n\r\n            console.log(event, eventName, event.target);\r\n\r\n            if (eventName === 'openPalette') {\r\n              const $picker = $parent.find('#' + value);\r\n              $picker.trigger('click');\r\n            } \r\n            else {\r\n              if (lists.contains(['backColor', 'foreColor'], eventName)) {\r\n                const key = eventName === 'backColor' ? 'background-color' : 'color';\r\n                const $color = $button.closest('.note-color').find('.note-recent-color');\r\n                const $currentButton = $button.closest('.note-color').find('.note-current-color-button');\r\n\r\n                $color.css(key, value);\r\n                $currentButton.attr('data-' + eventName, value);\r\n              }\r\n\r\n              this.context.invoke('editor.' + eventName, value);\r\n            }\r\n          },\r\n        }),\r\n      ],\r\n    }).render();\r\n  }\r\n\r\n  addToolbarButtons() {\r\n    this.context.memo('button.style', () => {\r\n      return this.ui.buttonGroup([\r\n        this.button({\r\n          className: 'dropdown-toggle',\r\n          contents: this.ui.dropdownButtonContents(\r\n            this.ui.icon(this.options.icons.paragraph), this.options\r\n          ),\r\n          tooltip: this.lang.style.style,\r\n          data: {\r\n            toggle: 'dropdown',\r\n          },\r\n        }),\r\n        this.ui.dropdown({\r\n          className: 'dropdown-style',\r\n          items: this.options.styleTags,\r\n          title: this.lang.style.style,\r\n          template: (item) => {\r\n            // TBD: need to be simplified\r\n            if (typeof item === 'string') {\r\n              item = {\r\n                tag: item,\r\n                title: (Object.prototype.hasOwnProperty.call(this.lang.style, item) ? this.lang.style[item] : item),\r\n              };\r\n            }\r\n\r\n            const tag = item.tag;\r\n            const title = item.title;\r\n            const style = item.style ? ' style=\"' + item.style + '\" ' : '';\r\n            const className = item.className ? ' class=\"' + item.className + '\"' : '';\r\n\r\n            return '<' + tag + style + className + '>' + title + '</' + tag + '>';\r\n          },\r\n          click: this.context.createInvokeHandler('editor.formatBlock'),\r\n        }),\r\n      ]).render();\r\n    });\r\n\r\n    for (let styleIdx = 0, styleLen = this.options.styleTags.length; styleIdx < styleLen; styleIdx++) {\r\n      const item = this.options.styleTags[styleIdx];\r\n\r\n      this.context.memo('button.style.' + item, () => {\r\n        return this.button({\r\n          className: 'note-btn-style-' + item,\r\n          contents: '<div data-value=\"' + item + '\">' + item.toUpperCase() + '</div>',\r\n          tooltip: this.lang.style[item],\r\n          click: this.context.createInvokeHandler('editor.formatBlock'),\r\n        }).render();\r\n      });\r\n    }\r\n\r\n    this.context.memo('button.bold', () => {\r\n      return this.button({\r\n        className: 'note-btn-bold',\r\n        contents: this.ui.icon(this.options.icons.bold),\r\n        tooltip: this.lang.font.bold + this.representShortcut('bold'),\r\n        click: this.context.createInvokeHandlerAndUpdateState('editor.bold'),\r\n      }).render();\r\n    });\r\n\r\n    this.context.memo('button.italic', () => {\r\n      return this.button({\r\n        className: 'note-btn-italic',\r\n        contents: this.ui.icon(this.options.icons.italic),\r\n        tooltip: this.lang.font.italic + this.representShortcut('italic'),\r\n        click: this.context.createInvokeHandlerAndUpdateState('editor.italic'),\r\n      }).render();\r\n    });\r\n\r\n    this.context.memo('button.underline', () => {\r\n      return this.button({\r\n        className: 'note-btn-underline',\r\n        contents: this.ui.icon(this.options.icons.underline),\r\n        tooltip: this.lang.font.underline + this.representShortcut('underline'),\r\n        click: this.context.createInvokeHandlerAndUpdateState('editor.underline'),\r\n      }).render();\r\n    });\r\n\r\n    this.context.memo('button.clear', () => {\r\n      return this.button({\r\n        className: 'note-btn-removeformat',\r\n        contents: this.ui.icon(this.options.icons.eraser),\r\n        tooltip: this.lang.font.clear + this.representShortcut('removeFormat'),\r\n        click: this.context.createInvokeHandler('editor.removeFormat'),\r\n      }).render();\r\n    });\r\n\r\n    const strikethrough = this.button({\r\n      className: 'note-btn-strikethrough',\r\n      contents: this.ui.icon(this.options.icons.strikethrough),\r\n      tooltip: this.lang.font.strikethrough + this.representShortcut('strikethrough'),\r\n      click: this.context.createInvokeHandlerAndUpdateState('editor.strikethrough'),\r\n    });\r\n\r\n    const superscript = this.button({\r\n      className: 'note-btn-superscript',\r\n      contents: this.ui.icon(this.options.icons.superscript),\r\n      tooltip: this.lang.font.superscript,\r\n      click: this.context.createInvokeHandlerAndUpdateState('editor.superscript'),\r\n    });\r\n    \r\n    const subscript = this.button({\r\n      className: 'note-btn-subscript',\r\n      contents: this.ui.icon(this.options.icons.subscript),\r\n      tooltip: this.lang.font.subscript,\r\n      click: this.context.createInvokeHandlerAndUpdateState('editor.subscript'),\r\n    });\r\n    \r\n    const code = this.button({\r\n      className: 'note-btn-inlinecode',\r\n      contents: this.ui.icon(this.options.icons.inlineCode),\r\n      tooltip: this.lang.font.code,\r\n      click: this.context.createInvokeHandlerAndUpdateState('editor.code'),\r\n    });\r\n    \r\n    this.context.memo('button.strikethrough', () => strikethrough.render());\r\n    this.context.memo('button.superscript', () => superscript.render());\r\n    this.context.memo('button.subscript', () => subscript.render());\r\n    this.context.memo('button.inlinecode', () => code.render());\r\n\r\n    this.context.memo('button.moreFontStyles', () => {\r\n      return this.ui.buttonGroup([\r\n        this.button({\r\n          className: 'dropdown-toggle no-chevron',\r\n          contents: this.ui.dropdownButtonContents(this.ui.icon(this.options.icons.ellipsis), this.options),\r\n          data: {\r\n            toggle: 'dropdown',\r\n          },\r\n        }),\r\n        this.ui.dropdown({\r\n          className: 'note-toolbar',\r\n          css: { 'min-width': 'auto' },\r\n          items: this.ui.toolGroup({\r\n            className: 'note-more-fontstyles',\r\n            children: [strikethrough, superscript, subscript, code],\r\n          }).render()\r\n        })\r\n      ]).render();\r\n    });\r\n\r\n    this.context.memo('button.fontname', () => {\r\n      const styleInfo = this.context.invoke('editor.currentStyle');\r\n\r\n      if (this.options.addDefaultFonts) {\r\n        // Add 'default' fonts into the fontnames array if not exist\r\n        if (!lists.isEmpty(styleInfo['font-family'])) {\r\n          $.each(styleInfo['font-family'].split(','), (idx, fontname) => {\r\n            fontname = fontname.trim().replace(/['\"]+/g, '');\r\n            if (this.isFontDeservedToAdd(fontname)) {\r\n              if (this.options.fontNames.indexOf(fontname) === -1) {\r\n                this.options.fontNames.push(fontname);\r\n              }\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      return this.ui.buttonGroup([\r\n        this.button({\r\n          className: 'dropdown-toggle',\r\n          contents: this.ui.dropdownButtonContents(\r\n            '<span class=\"note-current-fontname\"></span>', this.options\r\n          ),\r\n          tooltip: this.lang.font.name,\r\n          data: {\r\n            toggle: 'dropdown',\r\n          },\r\n        }),\r\n        this.ui.dropdownCheck({\r\n          className: 'dropdown-fontname',\r\n          checkClassName: this.options.icons.menuCheck,\r\n          items: this.options.fontNames.filter(this.isFontInstalled.bind(this)),\r\n          title: this.lang.font.name,\r\n          template: (item) => {\r\n            return '<span style=\"font-family: ' + env.validFontName(item) + '\">' + item + '</span>';\r\n          },\r\n          click: this.context.createInvokeHandlerAndUpdateState('editor.fontName'),\r\n        }),\r\n      ]).render();\r\n    });\r\n\r\n    this.context.memo('button.fontsize', () => {\r\n      return this.ui.buttonGroup([\r\n        this.button({\r\n          className: 'dropdown-toggle',\r\n          contents: this.ui.dropdownButtonContents('<span class=\"note-current-fontsize\"></span>', this.options),\r\n          tooltip: this.lang.font.size,\r\n          data: {\r\n            toggle: 'dropdown',\r\n          },\r\n        }),\r\n        this.ui.dropdownCheck({\r\n          className: 'dropdown-fontsize',\r\n          checkClassName: this.options.icons.menuCheck,\r\n          items: this.options.fontSizes,\r\n          title: this.lang.font.size,\r\n          click: this.context.createInvokeHandlerAndUpdateState('editor.fontSize'),\r\n        }),\r\n      ]).render();\r\n    });\r\n\r\n    this.context.memo('button.fontsizeunit', () => {\r\n      return this.ui.buttonGroup([\r\n        this.button({\r\n          className: 'dropdown-toggle',\r\n          contents: this.ui.dropdownButtonContents('<span class=\"note-current-fontsizeunit\"></span>', this.options),\r\n          tooltip: this.lang.font.sizeunit,\r\n          data: {\r\n            toggle: 'dropdown',\r\n          },\r\n        }),\r\n        this.ui.dropdownCheck({\r\n          className: 'dropdown-fontsizeunit',\r\n          checkClassName: this.options.icons.menuCheck,\r\n          items: this.options.fontSizeUnits,\r\n          title: this.lang.font.sizeunit,\r\n          click: this.context.createInvokeHandlerAndUpdateState('editor.fontSizeUnit'),\r\n        }),\r\n      ]).render();\r\n    });\r\n\r\n    this.context.memo('button.color', () => {\r\n      return this.colorPalette('note-color-all', this.lang.color.recent, true, true);\r\n    });\r\n\r\n    this.context.memo('button.forecolor', () => {\r\n      return this.colorPalette('note-color-fore', this.lang.color.foreground, false, true);\r\n    });\r\n\r\n    this.context.memo('button.backcolor', () => {\r\n      return this.colorPalette('note-color-back', this.lang.color.background, true, false);\r\n    });\r\n\r\n    this.context.memo('button.ul', () => {\r\n      return this.button({\r\n        contents: this.ui.icon(this.options.icons.unorderedlist),\r\n        tooltip: this.lang.lists.unordered + this.representShortcut('insertUnorderedList'),\r\n        click: this.context.createInvokeHandler('editor.insertUnorderedList'),\r\n      }).render();\r\n    });\r\n\r\n    this.context.memo('button.ol', () => {\r\n      return this.button({\r\n        contents: this.ui.icon(this.options.icons.orderedlist),\r\n        tooltip: this.lang.lists.ordered + this.representShortcut('insertOrderedList'),\r\n        click: this.context.createInvokeHandler('editor.insertOrderedList'),\r\n      }).render();\r\n    });\r\n\r\n    const justifyLeft = this.button({\r\n      contents: this.ui.icon(this.options.icons.alignLeft),\r\n      tooltip: this.lang.paragraph.left + this.representShortcut('justifyLeft'),\r\n      click: this.context.createInvokeHandler('editor.justifyLeft'),\r\n    });\r\n\r\n    const justifyCenter = this.button({\r\n      contents: this.ui.icon(this.options.icons.alignCenter),\r\n      tooltip: this.lang.paragraph.center + this.representShortcut('justifyCenter'),\r\n      click: this.context.createInvokeHandler('editor.justifyCenter'),\r\n    });\r\n\r\n    const justifyRight = this.button({\r\n      contents: this.ui.icon(this.options.icons.alignRight),\r\n      tooltip: this.lang.paragraph.right + this.representShortcut('justifyRight'),\r\n      click: this.context.createInvokeHandler('editor.justifyRight'),\r\n    });\r\n\r\n    const justifyFull = this.button({\r\n      contents: this.ui.icon(this.options.icons.alignJustify),\r\n      tooltip: this.lang.paragraph.justify + this.representShortcut('justifyFull'),\r\n      click: this.context.createInvokeHandler('editor.justifyFull'),\r\n    });\r\n\r\n    const outdent = this.button({\r\n      contents: this.ui.icon(this.options.icons.outdent),\r\n      tooltip: this.lang.paragraph.outdent + this.representShortcut('outdent'),\r\n      click: this.context.createInvokeHandler('editor.outdent'),\r\n    });\r\n\r\n    const indent = this.button({\r\n      contents: this.ui.icon(this.options.icons.indent),\r\n      tooltip: this.lang.paragraph.indent + this.representShortcut('indent'),\r\n      click: this.context.createInvokeHandler('editor.indent'),\r\n    });\r\n\r\n    this.context.memo('button.justifyLeft', func.invoke(justifyLeft, 'render'));\r\n    this.context.memo('button.justifyCenter', func.invoke(justifyCenter, 'render'));\r\n    this.context.memo('button.justifyRight', func.invoke(justifyRight, 'render'));\r\n    this.context.memo('button.justifyFull', func.invoke(justifyFull, 'render'));\r\n    this.context.memo('button.outdent', func.invoke(outdent, 'render'));\r\n    this.context.memo('button.indent', func.invoke(indent, 'render'));\r\n\r\n    this.context.memo('button.paragraph', () => {\r\n      return this.ui.buttonGroup([\r\n        this.button({\r\n          className: 'dropdown-toggle',\r\n          contents: this.ui.dropdownButtonContents(this.ui.icon(this.options.icons.alignLeft), this.options),\r\n          tooltip: this.lang.paragraph.paragraph,\r\n          data: {\r\n            toggle: 'dropdown',\r\n          },\r\n        }),\r\n        this.ui.dropdown({          \r\n          className: 'note-toolbar',\r\n          css: { 'min-width': 'auto' },\r\n          children: [\r\n            this.ui.toolGroup({\r\n              className: 'note-align',\r\n              children: [justifyLeft, justifyCenter, justifyRight, justifyFull],\r\n            }),\r\n            this.ui.toolGroup({\r\n              className: 'note-list',\r\n              children: [outdent, indent],\r\n            })\r\n          ]\r\n        })\r\n      ]).render();\r\n    });\r\n\r\n    this.context.memo('button.height', () => {\r\n      return this.ui.buttonGroup([\r\n        this.button({\r\n          className: 'dropdown-toggle',\r\n          contents: this.ui.dropdownButtonContents(this.ui.icon(this.options.icons.textHeight), this.options),\r\n          tooltip: this.lang.font.height,\r\n          data: {\r\n            toggle: 'dropdown',\r\n          },\r\n        }),\r\n        this.ui.dropdownCheck({\r\n          items: this.options.lineHeights,\r\n          checkClassName: this.options.icons.menuCheck,\r\n          className: 'dropdown-line-height',\r\n          title: this.lang.font.height,\r\n          click: this.context.createInvokeHandler('editor.lineHeight'),\r\n        }),\r\n      ]).render();\r\n    });\r\n\r\n    this.context.memo('button.table', () => {\r\n      return this.ui.buttonGroup([\r\n        this.button({\r\n          className: 'dropdown-toggle',\r\n          contents: this.ui.dropdownButtonContents(this.ui.icon(this.options.icons.table), this.options),\r\n          tooltip: this.lang.table.table,\r\n          data: {\r\n            toggle: 'dropdown',\r\n          },\r\n        }),\r\n        this.ui.dropdown({\r\n          title: this.lang.table.table,\r\n          className: 'note-table',\r\n          items: [\r\n            '<div class=\"note-dimension-picker\">',\r\n              '<div class=\"note-dimension-picker-mousecatcher\" data-event=\"insertTable\" data-value=\"1x1\"></div>',\r\n              '<div class=\"note-dimension-picker-highlighted\"></div>',\r\n              '<div class=\"note-dimension-picker-unhighlighted\"></div>',\r\n            '</div>',\r\n            '<div class=\"note-dimension-display text-center fwm\">1 x 1</div>',\r\n          ].join(''),\r\n        }),\r\n      ], {\r\n        callback: ($node) => {\r\n          const $catcher = $node.find('.note-dimension-picker-mousecatcher');\r\n          $catcher.css({\r\n            width: this.options.insertTableMaxSize.col + 'em',\r\n            height: this.options.insertTableMaxSize.row + 'em',\r\n          }).on('mousedown', this.context.createInvokeHandler('editor.insertTable'))\r\n            .on('mousemove', this.tableMoveHandler.bind(this));\r\n        },\r\n      }).render();\r\n    });\r\n\r\n    this.context.memo('button.link', () => {\r\n      return this.button({\r\n        contents: this.ui.icon(this.options.icons.link),\r\n        tooltip: this.lang.link.link + this.representShortcut('linkDialog.show'),\r\n        click: this.context.createInvokeHandler('linkDialog.show'),\r\n      }).render();\r\n    });\r\n\r\n    this.context.memo('button.image', () => {\r\n      return this.button({\r\n        contents: this.ui.icon(this.options.icons.picture),\r\n        tooltip: this.lang.image.image,\r\n        click: this.context.createInvokeHandler('imageDialog.show'),\r\n      }).render();\r\n    });\r\n\r\n    this.context.memo('button.video', () => {\r\n      return this.button({\r\n        contents: this.ui.icon(this.options.icons.video),\r\n        tooltip: this.lang.video.video,\r\n        click: this.context.createInvokeHandler('videoDialog.show'),\r\n      }).render();\r\n    });\r\n\r\n    this.context.memo('button.hr', () => {\r\n      return this.button({\r\n        contents: this.ui.icon(this.options.icons.minus),\r\n        tooltip: this.lang.hr.insert + this.representShortcut('insertHorizontalRule'),\r\n        click: this.context.createInvokeHandler('editor.insertHorizontalRule'),\r\n      }).render();\r\n    });\r\n\r\n    this.context.memo('button.fullscreen', () => {\r\n      return this.button({\r\n        className: 'btn-fullscreen note-codeview-keep',\r\n        contents: this.ui.icon(this.options.icons.arrowsAlt),\r\n        tooltip: this.lang.options.fullscreen,\r\n        click: this.context.createInvokeHandler('fullscreen.toggle'),\r\n      }).render();\r\n    });\r\n\r\n    this.context.memo('button.codeview', () => {\r\n      return this.button({\r\n        className: 'btn-codeview note-codeview-keep',\r\n        contents: this.ui.icon(this.options.icons.code),\r\n        tooltip: this.lang.options.codeview,\r\n        click: this.context.createInvokeHandler('codeview.toggle'),\r\n      }).render();\r\n    });\r\n\r\n    this.context.memo('button.redo', () => {\r\n      return this.button({\r\n        className: 'note-redo disabled',\r\n        contents: this.ui.icon(this.options.icons.redo),\r\n        tooltip: this.lang.history.redo + this.representShortcut('redo'),\r\n        click: this.context.createInvokeHandler('editor.redo'),\r\n      }).render();\r\n    });\r\n\r\n    this.context.memo('button.undo', () => {\r\n      return this.button({\r\n        className: 'note-undo disabled',\r\n        contents: this.ui.icon(this.options.icons.undo),\r\n        tooltip: this.lang.history.undo + this.representShortcut('undo'),\r\n        click: this.context.createInvokeHandler('editor.undo'),\r\n      }).render();\r\n    });\r\n\r\n    this.context.memo('button.help', () => {\r\n      return this.button({\r\n        contents: this.ui.icon(this.options.icons.question),\r\n        tooltip: this.lang.options.help,\r\n        click: this.context.createInvokeHandler('helpDialog.show'),\r\n      }).render();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * image: [\r\n   *   ['imageResize', ['resizeFull', 'resizeHalf', 'resizeQuarter', 'resizeNone']],\r\n   *   ['float', ['floatLeft', 'floatRight', 'floatNone']],\r\n   *   ['remove', ['removeMedia']],\r\n   * ],\r\n   */\r\n  addImagePopoverButtons() {\r\n    // Image Size Buttons\r\n    this.context.memo('button.resizeFull', () => {\r\n      return this.button({\r\n        contents: '<span class=\"note-fontsize-10\">100%</span>',\r\n        tooltip: this.lang.image.resizeFull,\r\n        click: this.context.createInvokeHandler('editor.resize', '1'),\r\n      }).render();\r\n    });\r\n    this.context.memo('button.resizeHalf', () => {\r\n      return this.button({\r\n        contents: '<span class=\"note-fontsize-10\">50%</span>',\r\n        tooltip: this.lang.image.resizeHalf,\r\n        click: this.context.createInvokeHandler('editor.resize', '0.5'),\r\n      }).render();\r\n    });\r\n    this.context.memo('button.resizeQuarter', () => {\r\n      return this.button({\r\n        contents: '<span class=\"note-fontsize-10\">25%</span>',\r\n        tooltip: this.lang.image.resizeQuarter,\r\n        click: this.context.createInvokeHandler('editor.resize', '0.25'),\r\n      }).render();\r\n    });\r\n    this.context.memo('button.resizeNone', () => {\r\n      return this.button({\r\n        contents: this.ui.icon(this.options.icons.rollback),\r\n        tooltip: this.lang.image.resizeNone,\r\n        click: this.context.createInvokeHandler('editor.resize', '0'),\r\n      }).render();\r\n    });\r\n\r\n    // Float Buttons\r\n    this.context.memo('button.floatLeft', () => {\r\n      return this.button({\r\n        contents: this.ui.icon(this.options.icons.floatLeft),\r\n        tooltip: this.lang.image.floatLeft,\r\n        click: this.context.createInvokeHandler('editor.floatMe', 'left'),\r\n      }).render();\r\n    });\r\n\r\n    this.context.memo('button.floatRight', () => {\r\n      return this.button({\r\n        contents: this.ui.icon(this.options.icons.floatRight),\r\n        tooltip: this.lang.image.floatRight,\r\n        click: this.context.createInvokeHandler('editor.floatMe', 'right'),\r\n      }).render();\r\n    });\r\n\r\n    this.context.memo('button.floatNone', () => {\r\n      return this.button({\r\n        contents: this.ui.icon(this.options.icons.floatNone),\r\n        tooltip: this.lang.image.floatNone,\r\n        click: this.context.createInvokeHandler('editor.floatMe', 'none'),\r\n      }).render();\r\n    });\r\n\r\n    // Remove Buttons\r\n    this.context.memo('button.removeMedia', () => {\r\n      return this.button({\r\n        contents: this.ui.icon(this.options.icons.trash),\r\n        tooltip: this.lang.image.remove,\r\n        click: this.context.createInvokeHandler('editor.removeMedia'),\r\n      }).render();\r\n    });\r\n  }\r\n\r\n  addLinkPopoverButtons() {\r\n    this.context.memo('button.linkDialogShow', () => {\r\n      return this.button({\r\n        contents: this.ui.icon(this.options.icons.link),\r\n        tooltip: this.lang.link.edit,\r\n        click: this.context.createInvokeHandler('linkDialog.show'),\r\n      }).render();\r\n    });\r\n\r\n    this.context.memo('button.unlink', () => {\r\n      return this.button({\r\n        className: 'note-unlink',\r\n        contents: this.ui.icon(this.options.icons.unlink),\r\n        tooltip: this.lang.link.unlink,\r\n        click: this.context.createInvokeHandler('editor.unlink'),\r\n      }).render();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * table : [\r\n   *  ['add', ['addRowDown', 'addRowUp', 'addColLeft', 'addColRight']],\r\n   *  ['delete', ['deleteRow', 'deleteCol', 'deleteTable']]\r\n   * ],\r\n   */\r\n  addTablePopoverButtons() {\r\n    this.context.memo('button.addRowUp', () => {\r\n      return this.button({\r\n        className: 'btn-md',\r\n        contents: this.ui.icon(this.options.icons.rowAbove),\r\n        tooltip: this.lang.table.addRowAbove,\r\n        click: this.context.createInvokeHandler('editor.addRow', 'top'),\r\n      }).render();\r\n    });\r\n    this.context.memo('button.addRowDown', () => {\r\n      return this.button({\r\n        className: 'btn-md',\r\n        contents: this.ui.icon(this.options.icons.rowBelow),\r\n        tooltip: this.lang.table.addRowBelow,\r\n        click: this.context.createInvokeHandler('editor.addRow', 'bottom'),\r\n      }).render();\r\n    });\r\n    this.context.memo('button.addColLeft', () => {\r\n      return this.button({\r\n        className: 'btn-md',\r\n        contents: this.ui.icon(this.options.icons.colBefore),\r\n        tooltip: this.lang.table.addColLeft,\r\n        click: this.context.createInvokeHandler('editor.addCol', 'left'),\r\n      }).render();\r\n    });\r\n    this.context.memo('button.addColRight', () => {\r\n      return this.button({\r\n        className: 'btn-md',\r\n        contents: this.ui.icon(this.options.icons.colAfter),\r\n        tooltip: this.lang.table.addColRight,\r\n        click: this.context.createInvokeHandler('editor.addCol', 'right'),\r\n      }).render();\r\n    });\r\n    this.context.memo('button.deleteRow', () => {\r\n      return this.button({\r\n        className: 'btn-md',\r\n        contents: this.ui.icon(this.options.icons.rowRemove),\r\n        tooltip: this.lang.table.delRow,\r\n        click: this.context.createInvokeHandler('editor.deleteRow'),\r\n      }).render();\r\n    });\r\n    this.context.memo('button.deleteCol', () => {\r\n      return this.button({\r\n        className: 'btn-md',\r\n        contents: this.ui.icon(this.options.icons.colRemove),\r\n        tooltip: this.lang.table.delCol,\r\n        click: this.context.createInvokeHandler('editor.deleteCol'),\r\n      }).render();\r\n    });\r\n    this.context.memo('button.deleteTable', () => {\r\n      return this.button({\r\n        className: 'btn-md',\r\n        contents: this.ui.icon(this.options.icons.trash),\r\n        tooltip: this.lang.table.delTable,\r\n        click: this.context.createInvokeHandler('editor.deleteTable'),\r\n      }).render();\r\n    });\r\n  }\r\n\r\n  build($container, groups) {\r\n    for (let groupIdx = 0, groupLen = groups.length; groupIdx < groupLen; groupIdx++) {\r\n      const group = groups[groupIdx];\r\n      const groupName = Array.isArray(group) ? group[0] : group;\r\n      const buttons = Array.isArray(group) ? ((group.length === 1) ? [group[0]] : group[1]) : [group];\r\n\r\n      const $group = this.ui.toolGroup({\r\n        className: 'note-' + groupName,\r\n      }).render();\r\n\r\n      for (let idx = 0, len = buttons.length; idx < len; idx++) {\r\n        const btn = this.context.memo('button.' + buttons[idx]);\r\n        if (btn) {\r\n          $group.append(typeof btn === 'function' ? btn(this.context) : btn);\r\n        }\r\n      }\r\n      $group.appendTo($container);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {jQuery} [$container]\r\n   */\r\n  updateCurrentStyle($container) {\r\n    const $cont = $container || this.$toolbar;\r\n\r\n    const styleInfo = this.context.invoke('editor.currentStyle');\r\n    this.updateBtnStates($cont, {\r\n      '.note-btn-bold': () => {\r\n        return styleInfo['font-bold'] === 'bold';\r\n      },\r\n      '.note-btn-italic': () => {\r\n        return styleInfo['font-italic'] === 'italic';\r\n      },\r\n      '.note-btn-underline': () => {\r\n        return styleInfo['font-underline'] === 'underline';\r\n      },\r\n      '.note-btn-subscript': () => {\r\n        return styleInfo['font-subscript'] === 'subscript';\r\n      },\r\n      '.note-btn-superscript': () => {\r\n        return styleInfo['font-superscript'] === 'superscript';\r\n      },\r\n      '.note-btn-strikethrough': () => {\r\n        return styleInfo['font-strikethrough'] === 'strikethrough';\r\n      },\r\n      '.note-btn-inlinecode': () => {\r\n        return styleInfo['font-code'] === 'code';\r\n      },\r\n    });\r\n\r\n    if (styleInfo['font-family']) {\r\n      const fontNames = styleInfo['font-family'].split(',').map((name) => {\r\n        return name.replace(/[\\'\\\"]/g, '')\r\n          .replace(/\\s+$/, '')\r\n          .replace(/^\\s+/, '');\r\n      });\r\n      const fontName = lists.find(fontNames, this.isFontInstalled.bind(this));\r\n\r\n      $cont.find('.dropdown-fontname a').each((idx, item) => {\r\n        const $item = $(item);\r\n        // always compare string to avoid creating another func.\r\n        const isChecked = ($item.data('value') + '') === (fontName + '');\r\n        $item.toggleClass('checked', isChecked);\r\n      });\r\n      $cont.find('.note-current-fontname').text(fontName).css('font-family', fontName).removeClass('text-muted');\r\n    }\r\n    else {\r\n      $cont.find('.note-current-fontname').text('Standard').css('font-family', '').addClass('text-muted');\r\n    }\r\n\r\n    if (styleInfo['font-size']) {\r\n      const fontSize = styleInfo['font-size'];\r\n      $cont.find('.dropdown-fontsize a').each((idx, item) => {\r\n        const $item = $(item);\r\n        // always compare with string to avoid creating another func.\r\n        const isChecked = ($item.data('value') + '') === (fontSize + '');\r\n        $item.toggleClass('checked', isChecked);\r\n      });\r\n      $cont.find('.note-current-fontsize').text(fontSize);\r\n\r\n      const fontSizeUnit = styleInfo['font-size-unit'];\r\n      $cont.find('.dropdown-fontsizeunit a').each((idx, item) => {\r\n        const $item = $(item);\r\n        const isChecked = ($item.data('value') + '') === (fontSizeUnit + '');\r\n        $item.toggleClass('checked', isChecked);\r\n      });\r\n      $cont.find('.note-current-fontsizeunit').text(fontSizeUnit);\r\n    }\r\n\r\n    if (styleInfo['line-height']) {\r\n      const lineHeight = styleInfo['line-height'];\r\n      $cont.find('.dropdown-line-height a').each((idx, item) => {\r\n        const $item = $(item);\r\n        // always compare with string to avoid creating another func.\r\n        const isChecked = ($(item).data('value') + '') === (lineHeight + '');\r\n        $item.toggleClass('checked', isChecked);\r\n      });\r\n      $cont.find('.note-current-line-height').text(lineHeight);\r\n    }\r\n  }\r\n\r\n  updateBtnStates($container, infos) {\r\n    $.each(infos, (selector, pred) => {\r\n      this.ui.toggleBtnActive($container.find(selector), pred());\r\n    });\r\n  }\r\n\r\n  tableMoveHandler(event) {\r\n    const PX_PER_EM = 18;\r\n    const $picker = $(event.target.parentNode); // target is mousecatcher\r\n    const $dimensionDisplay = $picker.next();\r\n    const $catcher = $picker.find('.note-dimension-picker-mousecatcher');\r\n    const $highlighted = $picker.find('.note-dimension-picker-highlighted');\r\n    const $unhighlighted = $picker.find('.note-dimension-picker-unhighlighted');\r\n\r\n    let posOffset;\r\n    // HTML5 with jQuery - e.offsetX is undefined in Firefox\r\n    if (event.offsetX === undefined) {\r\n      const posCatcher = $(event.target).offset();\r\n      posOffset = {\r\n        x: event.pageX - posCatcher.left,\r\n        y: event.pageY - posCatcher.top,\r\n      };\r\n    } else {\r\n      posOffset = {\r\n        x: event.offsetX,\r\n        y: event.offsetY,\r\n      };\r\n    }\r\n\r\n    const dim = {\r\n      c: Math.ceil(posOffset.x / PX_PER_EM) || 1,\r\n      r: Math.ceil(posOffset.y / PX_PER_EM) || 1,\r\n    };\r\n\r\n    $highlighted.css({ width: dim.c + 'em', height: dim.r + 'em' });\r\n    $catcher.data('value', dim.c + 'x' + dim.r);\r\n\r\n    if (dim.c > 3 && dim.c < this.options.insertTableMaxSize.col) {\r\n      $unhighlighted.css({ width: dim.c + 1 + 'em' });\r\n    }\r\n\r\n    if (dim.r > 3 && dim.r < this.options.insertTableMaxSize.row) {\r\n      $unhighlighted.css({ height: dim.r + 1 + 'em' });\r\n    }\r\n\r\n    $dimensionDisplay.html(dim.c + ' x ' + dim.r);\r\n  }\r\n}\r\n","import $ from 'jquery';\r\nexport default class Toolbar {\r\n  constructor(context) {\r\n    this.context = context;\r\n\r\n    this.$window = $(window);\r\n    this.$document = $(document);\r\n\r\n    this.ui = $.summernote.ui;\r\n    this.$note = context.layoutInfo.note;\r\n    this.$editor = context.layoutInfo.editor;\r\n    this.$toolbar = context.layoutInfo.toolbar;\r\n    this.$editable = context.layoutInfo.editable;\r\n    this.$statusbar = context.layoutInfo.statusbar;\r\n    this.options = context.options;\r\n\r\n    this.isFollowing = false;\r\n    this.followScroll = this.followScroll.bind(this);\r\n  }\r\n\r\n  shouldInitialize() {\r\n    return !this.options.airMode;\r\n  }\r\n\r\n  initialize() {\r\n    this.options.toolbar = this.options.toolbar || [];\r\n\r\n    if (!this.options.toolbar.length) {\r\n      this.$toolbar.hide();\r\n    } else {\r\n      this.context.invoke('buttons.build', this.$toolbar, this.options.toolbar);\r\n    }\r\n\r\n    if (this.options.toolbarContainer) {\r\n      this.$toolbar.appendTo(this.options.toolbarContainer);\r\n    }\r\n\r\n    this.changeContainer(false);\r\n\r\n    this.$note.on('summernote.keyup summernote.mouseup summernote.change', () => {\r\n      this.context.invoke('buttons.updateCurrentStyle');\r\n    });\r\n\r\n    this.$note.on('summernote.change', () => {\r\n      let history = this.context.modules.editor.history;\r\n      this.$toolbar.find('.note-undo').toggleClass('disabled', !history.canUndo());\r\n      this.$toolbar.find('.note-redo').toggleClass('disabled', !history.canRedo());\r\n    });\r\n\r\n    this.context.invoke('buttons.updateCurrentStyle');\r\n    if (this.options.followingToolbar) {\r\n      this.$window.on('scroll resize', this.followScroll);\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this.$toolbar.children().remove();\r\n\r\n    if (this.options.followingToolbar) {\r\n      this.$window.off('scroll resize', this.followScroll);\r\n    }\r\n  }\r\n\r\n  followScroll() {\r\n    if (this.$editor.hasClass('fullscreen')) {\r\n      return false;\r\n    }\r\n\r\n    const editorHeight = this.$editor.outerHeight();\r\n    const editorWidth = this.$editor.width();\r\n    const toolbarHeight = this.$toolbar.height();\r\n    const statusbarHeight = this.$statusbar.height();\r\n\r\n    // check if the web app is currently using another static bar\r\n    let otherBarHeight = 0;\r\n    if (this.options.otherStaticBar) {\r\n      otherBarHeight = $(this.options.otherStaticBar).outerHeight();\r\n    }\r\n\r\n    const currentOffset = this.$document.scrollTop();\r\n    const editorOffsetTop = this.$editor.offset().top;\r\n    const editorOffsetBottom = editorOffsetTop + editorHeight;\r\n    const activateOffset = editorOffsetTop - otherBarHeight;\r\n    const deactivateOffsetBottom = editorOffsetBottom - otherBarHeight - toolbarHeight - statusbarHeight;\r\n\r\n    if (!this.isFollowing &&\r\n      (currentOffset > activateOffset) && (currentOffset < deactivateOffsetBottom - toolbarHeight)) {\r\n      this.isFollowing = true;\r\n      this.$editable.css({\r\n        marginTop: this.$toolbar.outerHeight(),\r\n      });\r\n      this.$toolbar.css({\r\n        //position: 'fixed',\r\n        position: 'sticky',\r\n        top: otherBarHeight,\r\n        //width: editorWidth,\r\n        zIndex: 1000,\r\n      });\r\n    } else if (this.isFollowing &&\r\n      ((currentOffset < activateOffset) || (currentOffset > deactivateOffsetBottom))) {\r\n      this.isFollowing = false;\r\n      this.$toolbar.css({\r\n        position: 'relative',\r\n        top: 0,\r\n        //width: '100%',\r\n        zIndex: 'auto',\r\n      });\r\n      this.$editable.css({\r\n        marginTop: '',\r\n      });\r\n    }\r\n  }\r\n\r\n  changeContainer(isFullscreen) {\r\n    if (isFullscreen) {\r\n      this.$toolbar.prependTo(this.$editor);\r\n    } else {\r\n      if (this.options.toolbarContainer) {\r\n        this.$toolbar.appendTo(this.options.toolbarContainer);\r\n      }\r\n    }\r\n    if (this.options.followingToolbar) {\r\n      this.followScroll();\r\n    }\r\n  }\r\n\r\n  updateFullscreen(isFullscreen) {\r\n    this.ui.toggleBtnActive(this.$toolbar.find('.btn-fullscreen'), isFullscreen);\r\n\r\n    this.changeContainer(isFullscreen);\r\n  }\r\n\r\n  updateCodeview(isCodeview) {\r\n    this.ui.toggleBtnActive(this.$toolbar.find('.btn-codeview'), isCodeview);\r\n    if (isCodeview) {\r\n      this.deactivate();\r\n    } else {\r\n      this.activate();\r\n    }\r\n  }\r\n\r\n  activate(isIncludeCodeview) {\r\n    let $btn = this.$toolbar.find('button');\r\n    if (!isIncludeCodeview) {\r\n      $btn = $btn.not('.note-codeview-keep');\r\n    }\r\n    this.ui.toggleBtn($btn, true);\r\n  }\r\n\r\n  deactivate(isIncludeCodeview) {\r\n    let $btn = this.$toolbar.find('button');\r\n    if (!isIncludeCodeview) {\r\n      $btn = $btn.not('.note-codeview-keep');\r\n    }\r\n    this.ui.toggleBtn($btn, false);\r\n  }\r\n}\r\n","import $ from 'jquery';\r\nimport env from '../core/env';\r\nimport key from '../core/key';\r\nimport Str from '../core/Str';\r\n\r\nexport default class LinkDialog {\r\n  constructor(context) {\r\n    this.context = context;\r\n\r\n    this.ui = $.summernote.ui;\r\n    this.$body = $(document.body);\r\n    this.$editor = context.layoutInfo.editor;\r\n    this.options = context.options;\r\n    this.lang = this.options.langInfo;\r\n    this.editor = context.modules.editor;\r\n\r\n    context.memo('help.linkDialog.show', this.options.langInfo.help['linkDialog.show']);\r\n  }\r\n\r\n  initialize() {\r\n    const $container = this.options.dialogsInBody ? this.$body : this.options.container;\r\n    const body = [\r\n      '<div class=\"form-group note-form-group\">',\r\n      `\t<label for=\"note-dialog-link-txt-${this.options.id}\" class=\"note-form-label\">URL</label>`,\r\n      '\t<div class=\"input-group\">',\r\n      `\t\t<input id=\"note-dialog-link-txt-${this.options.id}\" class=\"note-link-url form-control note-form-control note-input\" type=\"text\" value=\"http://\" />`,\r\n          this.options.callbacks.onFileBrowse \r\n            ? `<div class=\"input-group-append\"><button class=\"btn btn-secondary btn-browse\" type=\"button\">${this.lang.link.browse}...</button></div>`\r\n            : '',\r\n      '\t</div>',\r\n      '</div>',\r\n      '<div class=\"form-group note-form-group form-group-text\">',\r\n      `\t<label for=\"note-dialog-link-url-${this.options.id}\" class=\"note-form-label\">${this.lang.link.textToDisplay}</label>`,\r\n      `\t<input id=\"note-dialog-link-url-${this.options.id}\" class=\"note-link-text form-control note-form-control note-input\" type=\"text\" />`,\r\n      '</div>',\r\n      '<div class=\"form-group note-form-group\">',\r\n      `\t<label for=\"note-dialog-link-class-${this.options.id}\" class=\"note-form-label\">${this.lang.attrs.cssClass}</label>`,\r\n      `\t<input id=\"note-dialog-link-class-${this.options.id}\" class=\"note-link-class form-control note-form-control note-input\" type=\"text\" />`,\r\n      '</div>',\r\n      '<div class=\"form-group note-form-group\">',\r\n      `\t<label for=\"note-dialog-link-style-${this.options.id}\" class=\"note-form-label\">${this.lang.attrs.cssStyle}</label>`,\r\n      `\t<input id=\"note-dialog-link-style-${this.options.id}\" class=\"note-link-style form-control note-form-control note-input\" type=\"text\" />`,\r\n      '</div>',\r\n      '<div class=\"form-group note-form-group\">',\r\n      `\t<label for=\"note-dialog-link-rel-${this.options.id}\" class=\"note-form-label\">${this.lang.attrs.rel} <small class=\"text-muted\">(alternate, author, help, license, next, nofollow, noreferrer, prefetch, prev,...)</small></label>`,\r\n      `\t<input id=\"note-dialog-link-rel-${this.options.id}\" class=\"note-link-rel form-control note-form-control note-input\" type=\"text\" />`,\r\n      '</div>',\r\n      !this.options.disableLinkTarget\r\n        ? $('<div></div>').append(this.ui.checkbox({\r\n          id: 'sn-checkbox-open-in-new-window',\r\n          className: 'form-switch note-new-window',\r\n          text: this.lang.link.openInNewWindow,\r\n          checked: true\r\n        }).render()).html()\r\n        : '',\r\n    ].join('');\r\n\r\n    const footer = [\r\n      '<button type=\"button\" class=\"btn btn-secondary btn-flat\" data-dismiss=\"modal\">' + this.lang.common.cancel + '</button>',\r\n      '<button type=\"submit\" class=\"btn btn-primary note-btn note-btn-primary note-link-btn\" disabled>' + this.lang.common.ok + '</button>',\r\n    ].join('');\r\n\r\n    this.$dialog = this.ui.dialog({\r\n      className: 'link-dialog',\r\n      title: this.lang.link.link,\r\n      fade: this.options.dialogsFade,\r\n      body: body,\r\n      footer: footer,\r\n    }).render().appendTo($container);\r\n  }\r\n\r\n  destroy() {\r\n    this.ui.hideDialog(this.$dialog);\r\n    this.$dialog.remove();\r\n  }\r\n\r\n  bindEnterKey($input, $btn) {\r\n    $input.on('keypress', (e) => {\r\n      if (e.keyCode === key.code.ENTER) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        $btn.trigger('click');\r\n        return false;\r\n      }\r\n    });\r\n  }\r\n\r\n  onCheckLinkUrl($input) {\r\n    $input.on('blur', (e) => {\r\n      let url = this.editor.checkLinkUrl(e.target.value);\r\n      if (url) {\r\n        e.target.value = url;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Show link dialog and set event handlers on dialog controls.\r\n   *\r\n   * @param {Object} linkInfo\r\n   * @return {Promise}\r\n   */\r\n  showLinkDialog(linkInfo) {\r\n    return $.Deferred((deferred) => {\r\n      let self = this;\r\n      let $linkText = this.$dialog.find('.note-link-text');\r\n      let $linkUrl = this.$dialog.find('.note-link-url');\r\n      let $linkClass = this.$dialog.find('.note-link-class');\r\n      let $linkStyle = this.$dialog.find('.note-link-style');\r\n      let $linkRel = this.$dialog.find('.note-link-rel');\r\n      let $linkBtn = this.$dialog.find('.note-link-btn');\r\n      let $openInNewWindow = this.$dialog.find('#sn-checkbox-open-in-new-window');\r\n      let $fileBrowse = this.$dialog.find('.btn-browse');\r\n      let browsePromise;\r\n  \r\n      function toggleLinkBtn() {\r\n        var enable = $linkUrl.val();\r\n        if (!linkInfo.img) {\r\n          enable = !!(enable) && !!($linkText.val());\r\n        }\r\n        self.ui.toggleBtn($linkBtn, enable);\r\n      };\r\n\r\n      function setInputFocus() {\r\n        if (!env.isSupportTouch) {\r\n          $linkUrl.trigger('focus');\r\n        }\r\n      }\r\n\r\n      // if no url was given, copy text to url\r\n      if (!linkInfo.url && linkInfo.text) {\r\n        linkInfo.url = this.editor.checkLinkUrl(linkInfo.text);\r\n      }\r\n\r\n      $linkText.val(linkInfo.text);\r\n      $linkUrl.val(linkInfo.url);\r\n      $linkClass.val(linkInfo.cssClass);\r\n      $linkStyle.val(linkInfo.cssStyle);\r\n      $linkRel.val(linkInfo.rel);\r\n\r\n      const isNewWindowChecked = linkInfo.isNewWindow !== undefined\r\n        ? linkInfo.isNewWindow\r\n        : this.options.linkTargetBlank;\r\n          $openInNewWindow.prop('checked', isNewWindowChecked);\r\n\r\n      this.ui.onDialogShown(this.$dialog, () => {\r\n        this.context.triggerEvent('dialog.shown');\r\n\r\n        $linkText.on('input paste propertychange', () => {\r\n          // If linktext was modified by input events,\r\n          // cloning text from linkUrl will be stopped.\r\n          linkInfo.text = Str.escape($linkText.val());\r\n          toggleLinkBtn();\r\n        });\r\n  \r\n        $linkUrl.on('input paste propertychange', () => {\r\n          // Display same text on `Text to display` as default\r\n          // when linktext has no text\r\n          if (!linkInfo.text) {\r\n            $linkText.val($linkUrl.val());\r\n          }\r\n          toggleLinkBtn();       \r\n        });\r\n\r\n        $fileBrowse.on('click.linkDialog', (e) => {\r\n          e.preventDefault();\r\n\r\n          browsePromise = $.Deferred((deferredBrowse) => {\r\n            this.context.triggerEvent('file.browse', e, null, deferredBrowse);\r\n          }).promise();\r\n\r\n          browsePromise\r\n            .then(url => {\r\n              $linkUrl.val(url).trigger('change').trigger('input');\r\n            })\r\n            .always(() =>{\r\n              setInputFocus();\r\n            });\r\n        });\r\n\r\n        setInputFocus();\r\n        toggleLinkBtn();\r\n        this.bindEnterKey($linkUrl, $linkBtn);\r\n        this.bindEnterKey($linkText, $linkBtn);\r\n        this.onCheckLinkUrl($linkUrl);\r\n\r\n        $linkBtn.one('click', (e) => {\r\n          e.preventDefault();\r\n          deferred.resolve({\r\n            img: linkInfo.img,\r\n            a: linkInfo.a,\r\n            range: linkInfo.range,\r\n            url: $linkUrl.val(),\r\n            text: $linkText.val(),\r\n            cssClasss: $linkClass.val(),\r\n            cssStyle: $linkStyle.val(),\r\n            rel: $linkRel.val(),\r\n            isNewWindow: $openInNewWindow.is(':checked')\r\n          });\r\n          this.ui.hideDialog(this.$dialog);\r\n        });\r\n      });\r\n      this.ui.onDialogHidden(this.$dialog, () => {\r\n        // detach events\r\n        $linkText.off();\r\n        $linkUrl.off();\r\n        $linkBtn.off();\r\n        $fileBrowse.off();\r\n\r\n        if (deferred.state() === 'pending') {\r\n          deferred.reject();\r\n        }\r\n\r\n        if (browsePromise && browsePromise.state() === 'pending') {\r\n          browsePromise.reject();\r\n        }\r\n      });\r\n      this.ui.showDialog(this.$dialog);\r\n    }).promise();\r\n  };\r\n\r\n  /**\r\n   * @param {Object} layoutInfo\r\n   */\r\n  show () {\r\n    const linkInfo = this.context.invoke('editor.getLinkInfo');\r\n    // Hide \"text\" control if img is selected\r\n    this.$dialog.find('.form-group-text').toggle(!linkInfo.img);\r\n\r\n    this.showLinkDialog(linkInfo).then((linkInfo) => {\r\n      this.context.invoke('editor.selection.restoreBookmark');\r\n      this.context.invoke('editor.createLink', linkInfo);\r\n\r\n    }).fail(() => {\r\n      this.context.invoke('editor.selection.restoreBookmark');\r\n    });\r\n  };\r\n}\r\n","import $ from 'jquery';\r\nimport lists from '../core/lists';\r\nimport dom from '../core/dom';\r\n\r\nexport default class LinkPopover {\r\n  constructor(context) {\r\n    this.context = context;\r\n\r\n    this.editor = context.modules.editor;\r\n    this.ui = $.summernote.ui;\r\n    this.options = context.options;\r\n    this.events = {\r\n      'summernote.popover.shown': (e, popover) => {\r\n        if (popover != this.$popover) {\r\n          this.hide();\r\n        }\r\n      },\r\n      'summernote.keyup summernote.mouseup summernote.change summernote.scroll': () => {\r\n        this.update();\r\n      },\r\n      'summernote.disable summernote.dialog.shown': () => {\r\n        this.hide();\r\n      },\r\n      'summernote.blur': (we, event) => {\r\n        if (event.originalEvent && event.originalEvent.relatedTarget) {\r\n          if (!this.$popover[0].contains(event.originalEvent.relatedTarget)) {\r\n            this.hide();\r\n          }\r\n        } else {\r\n          this.hide();\r\n        }\r\n      },\r\n      'summernote.codeview.toggled': () => {\r\n        this.hide();\r\n      },\r\n    };\r\n  }\r\n\r\n  shouldInitialize() {\r\n    return !lists.isEmpty(this.options.popover.link);\r\n  }\r\n\r\n  initialize() {\r\n    this.$popover = this.ui.popover({\r\n      className: 'note-link-popover',\r\n      callback: ($node) => {\r\n        const $content = $node.find('.popover-content,.note-popover-content');\r\n        $content.prepend('<span class=\"text-truncate d-inline-block ml-1\" style=\"max-width: 300px\"><a target=\"_blank\" class=\"text-truncate\"></a>&nbsp;</span><span class=\"vr\"></span>');\r\n      },\r\n    }).render().appendTo(this.options.container);\r\n    const $content = this.$popover.find('.popover-content,.note-popover-content');\r\n\r\n    this.context.invoke('buttons.build', $content, this.options.popover.link);\r\n\r\n    this.$popover.on('mousedown', (event) => { event.preventDefault(); });\r\n  }\r\n\r\n  destroy() {\r\n    this.$popover.remove();\r\n  }\r\n\r\n  update() {\r\n    // Prevent focusing on editable when invoke('code') is executed\r\n    if (!this.context.invoke('editor.hasFocus')) {\r\n      this.hide();\r\n      return;\r\n    }\r\n\r\n    const rng = this.context.invoke('editor.selection.getRange');\r\n    if (rng.collapsed && rng.isOnAnchor()) {\r\n      const anchor = dom.ancestor(rng.sc, dom.isAnchor);\r\n      const href = $(anchor).attr('href');\r\n      this.$popover.find('a')\r\n        .attr('href', href)\r\n        .attr('title', href)\r\n        .text(href);\r\n\r\n      this.editor.showPopover(this.$popover, anchor);\r\n    } \r\n    else {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  hide() {\r\n    this.editor.hidePopover(this.$popover);\r\n  }\r\n}\r\n","import $ from 'jquery';\r\nimport env from '../core/env';\r\nimport key from '../core/key';\r\nimport dom from '../core/dom';\r\n\r\nexport default class ImageDialog {\r\n  constructor(context) {\r\n    this.context = context;\r\n    this.editor = context.modules.editor;\r\n    this.ui = $.summernote.ui;\r\n    this.$body = $(document.body);\r\n    this.$editor = context.layoutInfo.editor;\r\n    this.options = context.options;\r\n    this.lang = this.options.langInfo;\r\n\r\n    this.context.memo('button.imageAttributes', () => {\r\n      var button = this.ui.button({\r\n        contents: this.ui.icon(this.options.icons.pencil),\r\n        callback: (btn) => {\r\n          btn.data(\"placement\", \"bottom\");\r\n          btn.data(\"trigger\", \"hover\");\r\n          btn.attr(\"title\", this.lang.image.imageProps);\r\n          btn.tooltip();\r\n        },\r\n        click: () => {\r\n          this.show();\r\n        }\r\n      });\r\n      return button.render();\r\n    });\r\n  }\r\n\r\n  initialize() {\r\n    const $container = this.options.dialogsInBody ? this.$body : this.options.container;\r\n    const body = [\r\n      '<div class=\"form-group note-group-image-url\">',\r\n      `\t<label for=\"note-dialog-image-url-${this.options.id}\" class=\"note-form-label\">${this.lang.image.url}</label>`,\r\n      '\t<div class=\"input-group\">',\r\n      `\t\t<input id=\"note-dialog-image-url-${this.options.id}\" class=\"note-image-src form-control note-form-control note-input\" type=\"text\" />`,\r\n          this.options.callbacks.onFileBrowse \r\n            ? `<div class=\"input-group-append\"><button class=\"btn btn-secondary btn-browse\" type=\"button\">${this.lang.link.browse}...</button></div>`\r\n            : '',\r\n      '\t</div>',\r\n      '</div>',\r\n      '<div class=\"form-group note-form-group form-group-text\">',\r\n      `\t<label for=\"note-dialog-image-alt-${this.options.id}\" class=\"note-form-label\">Alt</label>`,\r\n      `\t<input id=\"note-dialog-image-alt-${this.options.id}\" class=\"note-image-alt form-control note-form-control note-input\" type=\"text\" />`,\r\n      '</div>',\r\n      '<div class=\"form-group note-form-group form-group-text\">',\r\n      `\t<label for=\"note-dialog-image-title-${this.options.id}\" class=\"note-form-label\">Title</label>`,\r\n      `\t<input id=\"note-dialog-image-title-${this.options.id}\" class=\"note-image-title form-control note-form-control note-input\" type=\"text\" />`,\r\n      '</div>',\r\n      '<div class=\"form-group note-form-group\">',\r\n      `\t<label for=\"note-dialog-image-class-${this.options.id}\" class=\"note-form-label\">${this.lang.attrs.cssClass}</label>`,\r\n      `\t<input id=\"note-dialog-image-class-${this.options.id}\" class=\"note-image-class form-control note-form-control note-input\" type=\"text\" />`,\r\n      '</div>',\r\n      '<div class=\"form-group note-form-group\">',\r\n      `\t<label for=\"note-dialog-image-style-${this.options.id}\" class=\"note-form-label\">${this.lang.attrs.cssStyle}</label>`,\r\n      `\t<input id=\"note-dialog-image-style-${this.options.id}\" class=\"note-image-style form-control note-form-control note-input\" type=\"text\" />`,\r\n      '</div>'\r\n    ].join('');\r\n    const footer = [\r\n      '<button type=\"button\" class=\"btn btn-secondary btn-flat\" data-dismiss=\"modal\">' + this.lang.common.cancel + '</button>',\r\n      '<button type=\"submit\" class=\"btn btn-primary note-btn note-btn-primary note-image-btn\" disabled>' + this.lang.common.ok + '</button>'\r\n    ].join('');\r\n\r\n    this.$dialog = this.ui.dialog({\r\n      className: 'image-dialog',\r\n      title: this.lang.image.image,\r\n      fade: this.options.dialogsFade,\r\n      body: body,\r\n      footer: footer,\r\n    }).render().appendTo($container);\r\n  }\r\n\r\n  destroy() {\r\n    this.ui.hideDialog(this.$dialog);\r\n    this.$dialog.remove();\r\n  }\r\n\r\n  bindEnterKey($btn) {\r\n    this.$dialog.find('.note-input').on('keypress.imageDialog', (e) => {\r\n      if (e.keyCode === key.code.ENTER) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        $btn.trigger('click');\r\n        return false;\r\n      }\r\n    });\r\n  }\r\n\r\n  show() {\r\n    let imgInfo = {},\r\n        img = $(this.editor.selection.selectedControl);\r\n\r\n    if (img.length) {\r\n      imgInfo = {\r\n        img: img,\r\n        src: img.attr('src'),\r\n        alt: img.attr(\"alt\"),\r\n        title: img.attr(\"title\"),\r\n        cssClass: img.attr(\"class\"),\r\n        cssStyle: img.attr(\"style\"),\r\n      }\r\n    }\r\n\r\n    this.showImageDialog(imgInfo).then((imgInfo) => {\r\n      // [workaround] hide dialog before restore range for IE range focus\r\n      this.ui.hideDialog(this.$dialog);\r\n      this.context.invoke('editor.selection.restoreBookmark');\r\n\r\n      const setAttrs = (img, withSrc) => {\r\n        if (withSrc) {\r\n          dom.setAttr(img, 'src', this.$dialog.find('.note-image-src').val());\r\n        }\r\n        \r\n        dom.setAttr(img, 'alt', this.$dialog.find('.note-image-alt').val());\r\n        dom.setAttr(img, 'title', this.$dialog.find('.note-image-title').val());\r\n        dom.setAttr(img, 'class', this.$dialog.find('.note-image-class').val());\r\n        dom.setAttr(img, 'style', this.$dialog.find('.note-image-style').val());\r\n      }\r\n\r\n      if (!imgInfo.img) {\r\n        // Insert mode\r\n        this.context.invoke('editor.insertImage', this.$dialog.find('.note-image-src').val(), setAttrs);\r\n      }\r\n      else {\r\n        // Edit mode\r\n        setAttrs(imgInfo.img, true);\r\n\r\n        // Ensure that SN saves the change\r\n        this.context.layoutInfo.note.val(this.context.invoke('code'));\r\n        this.context.layoutInfo.note.change();\r\n      }\r\n    }).fail(() => {\r\n      this.context.invoke('editor.selection.restoreBookmark');\r\n    });\r\n  };\r\n\r\n  /**\r\n   * show image dialog\r\n   *\r\n   * @param {jQuery} $dialog\r\n   * @return {Promise}\r\n   */\r\n  showImageDialog(imgInfo) {\r\n    return $.Deferred((deferred) => {\r\n      let $imageUrl = this.$dialog.find('.note-image-src');\r\n      let $imageClass = this.$dialog.find('.note-image-class');\r\n      let $imageStyle = this.$dialog.find('.note-image-style');\r\n      let $imageAlt = this.$dialog.find('.note-image-alt');\r\n      let $imageTitle = this.$dialog.find('.note-image-title');\r\n      let $imageBtn = this.$dialog.find('.note-image-btn');\r\n      let $imageBrowse = this.$dialog.find('.btn-browse');\r\n      let browsePromise;\r\n      \r\n      $imageUrl.on('input.imageDialog', (e) => {\r\n        this.ui.toggleBtn($imageBtn, $imageUrl.val());\r\n      });\r\n  \r\n      $imageUrl.val(imgInfo.src);\r\n      $imageClass.val(imgInfo.cssClass);\r\n      $imageStyle.val(imgInfo.cssStyle);\r\n      $imageAlt.val(imgInfo.alt);\r\n      $imageTitle.val(imgInfo.title);\r\n  \r\n      this.ui.toggleBtn($imageBtn, imgInfo.src);\r\n\r\n      this.ui.onDialogShown(this.$dialog, () => {\r\n        this.context.triggerEvent('dialog.shown');\r\n\r\n        function setInputFocus() {\r\n          if (!env.isSupportTouch) {\r\n            $imageUrl.trigger('focus');\r\n          }\r\n        }\r\n        setInputFocus();\r\n\r\n        $imageBrowse.on('click.imageDialog', e => {\r\n          e.preventDefault();\r\n\r\n          browsePromise = $.Deferred((deferredBrowse) => {\r\n            this.context.triggerEvent('file.browse', e, 'image', deferredBrowse);\r\n          }).promise();\r\n\r\n          browsePromise\r\n            .then(url => {\r\n              $imageUrl.val(url).trigger('change').trigger('input');\r\n            })\r\n            .always(() =>{\r\n              setInputFocus();\r\n            });\r\n        });\r\n\r\n        this.bindEnterKey($imageBtn);\r\n\r\n        $imageBtn.one('click', (e) => {\r\n          e.preventDefault();\r\n          deferred.resolve({\r\n            img: imgInfo.img,\r\n            src: imgInfo.src,\r\n            alt: imgInfo.alt,\r\n            title: imgInfo.title,\r\n            cssClass: imgInfo.cssClass,\r\n            cssStyle: imgInfo.cssStyle\r\n          });\r\n          this.ui.hideDialog(this.$dialog);\r\n        });\r\n      });\r\n\r\n      this.ui.onDialogHidden(this.$dialog, () => {\r\n        this.$dialog.find('.note-input').off('keypress');\r\n        $imageUrl.off();\r\n        $imageBtn.off();\r\n        $imageBrowse.off();\r\n\r\n        if (deferred.state() === 'pending') {\r\n          deferred.reject();\r\n        }\r\n\r\n        if (browsePromise && browsePromise.state() === 'pending') {\r\n          browsePromise.reject();\r\n        }\r\n      });\r\n      this.ui.showDialog(this.$dialog);\r\n    }).promise();\r\n  };\r\n}\r\n","import $ from 'jquery';\r\nimport lists from '../core/lists';\r\nimport dom from '../core/dom';\r\n\r\n/**\r\n * Image popover module\r\n *  mouse events that show/hide popover will be handled by Handle.js.\r\n *  Handle.js will receive the events and invoke 'imagePopover.update'.\r\n */\r\nexport default class ImagePopover {\r\n  constructor(context) {\r\n    this.context = context;\r\n    this.editor = context.modules.editor;\r\n    this.ui = $.summernote.ui;\r\n\r\n    this.editable = context.layoutInfo.editable[0];\r\n    this.options = context.options;\r\n\r\n    this.events = {\r\n      'summernote.popover.shown': (e, popover) => {\r\n        if (popover != this.$popover) {\r\n          this.hide();\r\n        }\r\n      },\r\n      'summernote.disable summernote.dialog.shown': (e) => {\r\n        this.hide();\r\n      },\r\n      'summernote.blur': (we, event) => {\r\n        if (event.originalEvent && event.originalEvent.relatedTarget) {\r\n          if (!this.$popover[0].contains(event.originalEvent.relatedTarget)) {\r\n            this.hide();\r\n          }\r\n        } \r\n        else {\r\n          this.hide();\r\n        }\r\n      },\r\n    };\r\n  }\r\n\r\n  shouldInitialize() {\r\n    return !lists.isEmpty(this.options.popover.image);\r\n  }\r\n\r\n  initialize() {\r\n    this.$popover = this.ui.popover({\r\n      className: 'note-image-popover'\r\n    }).render().appendTo(this.options.container);\r\n    const $content = this.$popover.find('.popover-content,.note-popover-content');\r\n    this.context.invoke('buttons.build', $content, this.options.popover.image);\r\n\r\n    this.$popover.on('mousedown', (event) => { event.preventDefault(); });\r\n  }\r\n\r\n  destroy() {\r\n    this.$popover.remove();\r\n  }\r\n\r\n  update(target, e) {\r\n    if (dom.isImg(target)) {\r\n      const $target = $(target);\r\n      const $btnUnlink = this.$popover.find('.note-unlink');\r\n      if ($btnUnlink.length) {\r\n        const isLinkedImage = $target.parent().is('a');\r\n        // Toggle the unlink button visibility depending on current selection\r\n        $btnUnlink.toggle(isLinkedImage);\r\n      }  \r\n\r\n      this.editor.showPopover(this.$popover, target);\r\n    } \r\n    else {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  hide() {\r\n    this.editor.hidePopover(this.$popover);\r\n  }\r\n}\r\n","import $ from 'jquery';\r\nimport env from '../core/env';\r\nimport lists from '../core/lists';\r\nimport dom from '../core/dom';\r\n\r\nexport default class TablePopover {\r\n  constructor(context) {\r\n    this.context = context;\r\n\r\n    this.editor = context.modules.editor;\r\n    this.ui = $.summernote.ui;\r\n    this.options = context.options;\r\n    this.events = {\r\n      'summernote.popover.shown': (e, popover) => {\r\n        if (popover != this.$popover) {\r\n          this.hide();\r\n        }\r\n      },\r\n      'summernote.mousedown': (we, e) => {\r\n        this.update(e?.target, e);\r\n      },\r\n      'summernote.keyup summernote.scroll summernote.change': (we, e) => {\r\n        this.update(e?.target, e);\r\n      },\r\n      'summernote.disable summernote.dialog.shown': () => {\r\n        this.hide();\r\n      },\r\n      'summernote.blur': (we, e) => {\r\n        if (e.originalEvent && e.originalEvent.relatedTarget) {\r\n          if (!this.$popover[0].contains(e.originalEvent.relatedTarget)) {\r\n            this.hide();\r\n          }\r\n        } else {\r\n          this.hide();\r\n        }\r\n      },\r\n      'summernote.codeview.toggled': () => {\r\n        this.hide();\r\n      },\r\n    };\r\n  }\r\n\r\n  shouldInitialize() {\r\n    return !lists.isEmpty(this.options.popover.table);\r\n  }\r\n\r\n  initialize() {\r\n    this.$popover = this.ui.popover({\r\n      className: 'note-table-popover',\r\n    }).render().appendTo(this.options.container);\r\n    const $content = this.$popover.find('.popover-content,.note-popover-content');\r\n\r\n    this.context.invoke('buttons.build', $content, this.options.popover.table);\r\n\r\n    // [workaround] Disable Firefox's default table editor\r\n    if (env.isFF) {\r\n      document.execCommand('enableInlineTableEditing', false, false);\r\n    }\r\n\r\n    this.$popover.on('mousedown', (event) => { event.preventDefault(); });\r\n  }\r\n\r\n  destroy() {\r\n    this.$popover.remove();\r\n  }\r\n\r\n  update(target, e) {\r\n    if (this.context.isDisabled()) {\r\n      return false;\r\n    }\r\n\r\n    const isScroll = e?.type == 'scroll';\r\n    if (isScroll) {\r\n      return false;\r\n    }\r\n\r\n    const isCell = dom.isCell(target) || dom.isCell(target?.parentElement);\r\n\r\n    if (isCell) {\r\n      const isVoidOrLink = dom.isVoid(target) || dom.isAnchor(target) || dom.isAnchor(target?.parentElement);\r\n\r\n      if (!isVoidOrLink) {\r\n        const table = dom.ancestor(target, dom.isTable);\r\n        if (table) {\r\n          this.editor.showPopover(this.$popover, table);\r\n        }\r\n\r\n        return true;\r\n      }\r\n    }\r\n\r\n    this.hide();\r\n    return false;\r\n  }\r\n\r\n  hide() {\r\n    this.editor.hidePopover(this.$popover);\r\n  }\r\n}\r\n","import $ from 'jquery';\r\nimport _ from 'underscore';\r\nimport dom from '../core/dom';\r\nimport lists from '../core/lists';\r\n\r\n// $(function() {\r\n//   $.extend($.summernote.options, {\r\n//     tableStyles: {\r\n//       // Must keep the same order as in lang.tableStyles.styles*\r\n//       stylesExclusive: [\"\", \"table-bordered\"],\r\n//       stylesInclusive: [\"table-striped\", \"table-sm\", \"table-hover\"]\r\n//     }\r\n//   });\r\n  \r\n// });\r\n\r\nexport default class TableStyles {\r\n  constructor(context) {\r\n    this.context = context;\r\n\r\n    this.ui = $.summernote.ui;\r\n    this.options = context.options;\r\n    this.lang = this.options.langInfo;\r\n    this.$editor = context.layoutInfo.editor;\r\n    this.$editable = context.layoutInfo.editable;\r\n    this.editable = this.$editable[0];\r\n    this.editor = context.modules.editor;\r\n\r\n    // // Fix blur event (?)\r\n    // let module = context.modules.tablePopover;\r\n    // module.events['summernote.disable summernote.blur'] = function (we, e) {\r\n    //   const evt = e.originalEvent;\r\n    //   if (evt.type === 'blur' && !$(evt.relatedTarget).closest('.note-custom').length) {\r\n    //     module.hide();\r\n    //   }\r\n    // };\r\n  }\r\n\r\n  initialize() {\r\n    this.context.memo('button.tableStyles', () => {\r\n      const button = this.ui.buttonGroup([\r\n        this.ui.button({\r\n          className: \"dropdown-toggle\",\r\n          contents: this.ui.dropdownButtonContents(this.ui.icon(this.options.icons.magic), this.options),\r\n          tooltip: this.lang.tableStyles.tooltip,\r\n          click: (e) => this.updateTableMenuState($(e.currentTarget)),\r\n          // callback: (btn) => {\r\n          //   btn.data(\"placement\", \"bottom\");\r\n          //   btn.data(\"trigger\", \"hover\");\r\n          //   btn.attr(\"title\", this.lang.tableStyles.tooltip);\r\n          //   btn.attr(\"tabindex\", \"-1\");\r\n          //   btn.tooltip();\r\n\r\n          //   btn.on('click', () => {\r\n          //     this.updateTableMenuState(btn);\r\n          //   });\r\n          // },\r\n          data: {\r\n            toggle: \"dropdown\"\r\n          }\r\n        }),\r\n        this.ui.dropdownCheck({\r\n          className: \"dropdown-table-style\",\r\n          checkClassName: this.options.icons.menuCheck,\r\n          items: this.generateListItems(\r\n            this.options.tableStyles.stylesExclusive,\r\n            this.lang.tableStyles.stylesExclusive,\r\n            this.options.tableStyles.stylesInclusive,\r\n            this.lang.tableStyles.stylesInclusive\r\n          ),\r\n          callback: ($dropdown) => {\r\n            $dropdown.on('click', 'a', (e) => {\r\n              this.updateTableStyles(e.currentTarget);\r\n            });\r\n          }\r\n        })\r\n      ]);\r\n      return button.render();\r\n    });\r\n  }\r\n\r\n  updateTableStyles(chosenItem) {\r\n    const rng = this.editor.createRange();\r\n    if (rng.collapsed && rng.isOnCell()) {\r\n      this.editor.beforeCommand();\r\n      const table = dom.closest(rng.commonAncestorContainer, dom.isTable);\r\n      this.updateStyles($(table), chosenItem, this.options.tableStyles.stylesExclusive);\r\n    }\r\n  }\r\n\r\n  updateTableMenuState($dropdownButton) {\r\n    // Makes sure the check marks are on the currently applied styles\r\n    const rng = this.editor.createRange();\r\n    if (rng.collapsed && rng.isOnCell()) {\r\n      const $table = $(dom.closest(rng.commonAncestorContainer, dom.isTable));\r\n      const $listItems = $dropdownButton.next().find(\"a\");\r\n      this.updateMenuState($table, $listItems, this.options.tableStyles.stylesExclusive);\r\n    }\r\n  }\r\n\r\n  updateMenuState($node, $listItems, exclusiveStyles) {\r\n    // The following functions might be turnkey in other menu lists with exclusive and inclusive items that toggle CSS classes.\r\n    let hasAnExclusiveStyle = false;\r\n    $listItems.each(function () {\r\n      let cssClass = $(this).data(\"value\");\r\n      if ($node.hasClass(cssClass)) {\r\n        $(this).addClass(\"checked\");\r\n        if ($.inArray(cssClass, exclusiveStyles) !== -1) {\r\n          hasAnExclusiveStyle = true;\r\n        }\r\n      } \r\n      else {\r\n        $(this).removeClass(\"checked\");\r\n      }\r\n    });\r\n\r\n    // if none of the exclusive styles are checked, then check a blank\r\n    if (!hasAnExclusiveStyle) {\r\n      $listItems.filter('[data-value=\"\"]').addClass(\"checked\");\r\n    }\r\n  }\r\n\r\n  updateStyles($node, chosenItem, exclusiveStyles) {\r\n    const cssClass = $(chosenItem).data(\"value\");\r\n    this.editor.beforeCommand();\r\n    // Exclusive class: only one can be applied at a time\r\n    if ($.inArray(cssClass, exclusiveStyles) !== -1) {\r\n      $node.removeClass(exclusiveStyles.join(\" \"));\r\n      $node.addClass(cssClass);\r\n    } \r\n    else {\r\n      // Inclusive classes: multiple are ok\r\n      $node.toggleClass(cssClass);\r\n    }\r\n    this.editor.afterCommand();\r\n  }\r\n\r\n  generateListItems(\r\n    exclusiveStyles,\r\n    exclusiveLabels,\r\n    inclusiveStyles,\r\n    inclusiveLabels\r\n  ) {\r\n    let list = '';\r\n\r\n    lists.each(exclusiveStyles, (style, i) => {\r\n      list += this.getListItem(style, exclusiveLabels[i], true);\r\n    });\r\n\r\n    list += '<div class=\"dropdown-divider\"></div>';\r\n\r\n    lists.each(inclusiveStyles, (style, i) => {\r\n      list += this.getListItem(style, inclusiveLabels[i], false);\r\n    });\r\n\r\n    return list;\r\n  }\r\n\r\n  getListItem(value, label, isExclusive) {\r\n    const item = `\r\n      <a href='javascript:;' class='dropdown-item ${isExclusive ? \"exclusive-item\" : \"inclusive-item\"}' data-value=\"${value}\">\r\n        <i class=\"fa fa-check\"></i>\r\n        ${label}\r\n      </a>\r\n    `;\r\n\r\n    return item;\r\n  }\r\n\r\n  destroy() {\r\n    // ???\r\n  }\r\n}","import $ from 'jquery';\r\nimport env from '../core/env';\r\nimport key from '../core/key';\r\n\r\nexport default class VideoDialog {\r\n  constructor(context) {\r\n    this.context = context;\r\n\r\n    this.ui = $.summernote.ui;\r\n    this.$body = $(document.body);\r\n    this.$editor = context.layoutInfo.editor;\r\n    this.options = context.options;\r\n    this.lang = this.options.langInfo;\r\n  }\r\n\r\n  initialize() {\r\n    const $container = this.options.dialogsInBody ? this.$body : this.options.container;\r\n    const body = [\r\n      '<div class=\"form-group note-form-group row-fluid\">',\r\n        `<label for=\"note-dialog-video-url-${this.options.id}\" class=\"note-form-label\">${this.lang.video.url} <small class=\"text-muted\">${this.lang.video.providers}</small></label>`,\r\n        `<input id=\"note-dialog-video-url-${this.options.id}\" class=\"note-video-url form-control note-form-control note-input\" type=\"text\"/>`,\r\n      '</div>',\r\n    ].join('');\r\n    const buttonClass = 'btn btn-primary note-btn note-btn-primary note-video-btn';\r\n    const footer = `<input type=\"button\" href=\"#\" class=\"${buttonClass}\" value=\"${this.lang.video.insert}\" disabled>`;\r\n\r\n    this.$dialog = this.ui.dialog({\r\n      title: this.lang.video.insert,\r\n      fade: this.options.dialogsFade,\r\n      body: body,\r\n      footer: footer,\r\n    }).render().appendTo($container);\r\n  }\r\n\r\n  destroy() {\r\n    this.ui.hideDialog(this.$dialog);\r\n    this.$dialog.remove();\r\n  }\r\n\r\n  bindEnterKey($input, $btn) {\r\n    $input.on('keypress', (event) => {\r\n      if (event.keyCode === key.code.ENTER) {\r\n        event.preventDefault();\r\n        $btn.trigger('click');\r\n      }\r\n    });\r\n  }\r\n\r\n  createVideoNode(url) {\r\n    // video url patterns(youtube, instagram, vimeo, dailymotion, youku, peertube, mp4, ogg, webm)\r\n    const ytRegExp = /(?:youtu\\.be\\/|youtube\\.com\\/(?:[^\\/\\n\\s]+\\/\\S+\\/|(?:v|e(?:mbed)?)\\/|\\S*?[?&]v=|shorts\\/|live\\/))([^&\\n?]+)(?:.*[?&]t=([^&\\n]+))?.*/;\r\n    const ytRegExpForStart = /^(?:(\\d+)h)?(?:(\\d+)m)?(?:(\\d+)s)?$/;\r\n    const ytMatch = url.match(ytRegExp);\r\n\r\n    const gdRegExp = /(?:\\.|\\/\\/)drive\\.google\\.com\\/file\\/d\\/(.[a-zA-Z0-9_-]*)\\/view/;\r\n    const gdMatch = url.match(gdRegExp);\r\n\r\n    const igRegExp = /(?:www\\.|\\/\\/)instagram\\.com\\/(reel|p)\\/(.[a-zA-Z0-9_-]*)/;\r\n    const igMatch = url.match(igRegExp);\r\n\r\n    const vRegExp = /\\/\\/vine\\.co\\/v\\/([a-zA-Z0-9]+)/;\r\n    const vMatch = url.match(vRegExp);\r\n\r\n    const vimRegExp = /\\/\\/(player\\.)?vimeo\\.com\\/([a-z]*\\/)*(\\d+)[?]?.*/;\r\n    const vimMatch = url.match(vimRegExp);\r\n\r\n    const dmRegExp = /.+dailymotion.com\\/(video|hub)\\/([^_]+)[^#]*(#video=([^_&]+))?/;\r\n    const dmMatch = url.match(dmRegExp);\r\n\r\n    const youkuRegExp = /\\/\\/v\\.youku\\.com\\/v_show\\/id_(\\w+)=*\\.html/;\r\n    const youkuMatch = url.match(youkuRegExp);\r\n\r\n    const peerTubeRegExp =/\\/\\/(.*)\\/videos\\/watch\\/([^?]*)(?:\\?(?:start=(\\w*))?(?:&stop=(\\w*))?(?:&loop=([10]))?(?:&autoplay=([10]))?(?:&muted=([10]))?)?/; \r\n    const peerTubeMatch = url.match(peerTubeRegExp);\r\n\r\n    const qqRegExp = /\\/\\/v\\.qq\\.com.*?vid=(.+)/;\r\n    const qqMatch = url.match(qqRegExp);\r\n\r\n    const qqRegExp2 = /\\/\\/v\\.qq\\.com\\/x?\\/?(page|cover).*?\\/([^\\/]+)\\.html\\??.*/;\r\n    const qqMatch2 = url.match(qqRegExp2);\r\n\r\n    const mp4RegExp = /^.+.(mp4|m4v)$/;\r\n    const mp4Match = url.match(mp4RegExp);\r\n\r\n    const oggRegExp = /^.+.(ogg|ogv)$/;\r\n    const oggMatch = url.match(oggRegExp);\r\n\r\n    const webmRegExp = /^.+.(webm)$/;\r\n    const webmMatch = url.match(webmRegExp);\r\n\r\n    const fbRegExp = /(?:www\\.|\\/\\/)facebook\\.com\\/([^\\/]+)\\/videos\\/([0-9]+)/;\r\n    const fbMatch = url.match(fbRegExp);\r\n\r\n    let $video;\r\n    if (ytMatch && ytMatch[1].length === 11) {\r\n      const youtubeId = ytMatch[1];\r\n      var start = 0;\r\n      if (typeof ytMatch[2] !== 'undefined') {\r\n        const ytMatchForStart = ytMatch[2].match(ytRegExpForStart);\r\n        if (ytMatchForStart) {\r\n          for (var n = [3600, 60, 1], i = 0, r = n.length; i < r; i++) {\r\n            start += (typeof ytMatchForStart[i + 1] !== 'undefined' ? n[i] * parseInt(ytMatchForStart[i + 1], 10) : 0);\r\n          }\r\n        }else{\r\n          start = parseInt(ytMatch[2], 10);\r\n        }\r\n      }\r\n      $video = $('<iframe>')\r\n        .attr('frameborder', 0)\r\n        .attr('src', '//www.youtube.com/embed/' + youtubeId + (start > 0 ? '?start=' + start : ''))\r\n        .attr('width', '640').attr('height', '360');\r\n    } else if (gdMatch && gdMatch[0].length) {\r\n      $video = $('<iframe>')\r\n        .attr('frameborder', 0)\r\n        .attr('src', 'https://drive.google.com/file/d/' + gdMatch[1] + '/preview')\r\n        .attr('width', '640').attr('height', '480');\r\n    } else if (igMatch && igMatch[0].length) {\r\n      $video = $('<iframe>')\r\n        .attr('frameborder', 0)\r\n        .attr('src', 'https://instagram.com/p/' + igMatch[2] + '/embed/')\r\n        .attr('width', '612').attr('height', '710')\r\n        .attr('scrolling', 'no')\r\n        .attr('allowtransparency', 'true');\r\n    } else if (vMatch && vMatch[0].length) {\r\n      $video = $('<iframe>')\r\n        .attr('frameborder', 0)\r\n        .attr('src', vMatch[0] + '/embed/simple')\r\n        .attr('width', '600').attr('height', '600')\r\n        .attr('class', 'vine-embed');\r\n    } else if (vimMatch && vimMatch[3].length) {\r\n      $video = $('<iframe webkitallowfullscreen mozallowfullscreen allowfullscreen>')\r\n        .attr('frameborder', 0)\r\n        .attr('src', '//player.vimeo.com/video/' + vimMatch[3])\r\n        .attr('width', '640').attr('height', '360');\r\n    } else if (dmMatch && dmMatch[2].length) {\r\n      $video = $('<iframe>')\r\n        .attr('frameborder', 0)\r\n        .attr('src', '//www.dailymotion.com/embed/video/' + dmMatch[2])\r\n        .attr('width', '640').attr('height', '360');\r\n    } else if (youkuMatch && youkuMatch[1].length) {\r\n      $video = $('<iframe webkitallowfullscreen mozallowfullscreen allowfullscreen>')\r\n        .attr('frameborder', 0)\r\n        .attr('height', '498')\r\n        .attr('width', '510')\r\n        .attr('src', '//player.youku.com/embed/' + youkuMatch[1]);\r\n    } else if (peerTubeMatch && peerTubeMatch[0].length){\r\n      var begin = 0;\r\n      if (peerTubeMatch[2] !== 'undefined') begin = peerTubeMatch[2];\r\n      var end =0;\r\n      if (peerTubeMatch[3] !== 'undefined') end = peerTubeMatch[3];\r\n      var loop = 0;\r\n      if (peerTubeMatch[4] !== 'undefined') loop = peerTubeMatch[4];\r\n      var autoplay = 0;\r\n      if (peerTubeMatch[5] !== 'undefined') autoplay = peerTubeMatch[5];\r\n      var muted = 0;\r\n      if (peerTubeMatch[6] !== 'undefined') muted = peerTubeMatch[6];\r\n      $video = $('<iframe allowfullscreen sandbox=\"allow-same-origin allow-scripts allow-popups\">')\r\n        .attr('frameborder', 0)\r\n        .attr('src', '//'+ peerTubeMatch[1] +'/videos/embed/' + peerTubeMatch[2]+\"?loop=\"+loop\r\n      +\"&autoplay=\"+autoplay+\"&muted=\"+muted +(begin > 0 ? '&start=' + begin : '')+(end > 0 ? '&end=' + start : ''))\r\n        .attr('width', '560')\r\n        .attr('height', '315');\r\n    }else if ((qqMatch && qqMatch[1].length) || (qqMatch2 && qqMatch2[2].length)) {\r\n      const vid = ((qqMatch && qqMatch[1].length) ? qqMatch[1] : qqMatch2[2]);\r\n      $video = $('<iframe webkitallowfullscreen mozallowfullscreen allowfullscreen>')\r\n        .attr('frameborder', 0)\r\n        .attr('height', '310')\r\n        .attr('width', '500')\r\n        .attr('src', 'https://v.qq.com/txp/iframe/player.html?vid=' + vid + '&amp;auto=0');\r\n    } else if (mp4Match || oggMatch || webmMatch) {\r\n      $video = $('<video controls>')\r\n        .attr('src', url)\r\n        .attr('width', '640').attr('height', '360');\r\n    } else if (fbMatch && fbMatch[0].length) {\r\n      $video = $('<iframe>')\r\n        .attr('frameborder', 0)\r\n        .attr('src', 'https://www.facebook.com/plugins/video.php?href=' + encodeURIComponent(fbMatch[0]) + '&show_text=0&width=560')\r\n        .attr('width', '560').attr('height', '301')\r\n        .attr('scrolling', 'no')\r\n        .attr('allowtransparency', 'true');\r\n    } else {\r\n      // this is not a known video link. Now what, Cat? Now what?\r\n      return false;\r\n    }\r\n\r\n    $video.addClass('note-video-clip');\r\n\r\n    return $video[0];\r\n  }\r\n\r\n  show() {\r\n    const text = this.context.invoke('editor.getSelectedText');\r\n    this.showVideoDialog(text).then((url) => {\r\n      // [workaround] hide dialog before restore range for IE range focus\r\n      this.ui.hideDialog(this.$dialog);\r\n      this.context.invoke('editor.selection.restoreBookmark');\r\n\r\n      // build node\r\n      const $node = this.createVideoNode(url);\r\n\r\n      if ($node) {\r\n        // insert video node\r\n        this.context.invoke('editor.insertNode', $node);\r\n      }\r\n    }).fail(() => {\r\n      this.context.invoke('editor.selection.restoreBookmark');\r\n    });\r\n  }\r\n\r\n  /**\r\n   * show video dialog\r\n   *\r\n   * @param {jQuery} $dialog\r\n   * @return {Promise}\r\n   */\r\n  showVideoDialog(/* text */) {\r\n    return $.Deferred((deferred) => {\r\n      const $videoUrl = this.$dialog.find('.note-video-url');\r\n      const $videoBtn = this.$dialog.find('.note-video-btn');\r\n\r\n      this.ui.onDialogShown(this.$dialog, () => {\r\n        this.context.triggerEvent('dialog.shown');\r\n\r\n        $videoUrl.on('input paste propertychange', () => {\r\n          this.ui.toggleBtn($videoBtn, $videoUrl.val());\r\n        });\r\n\r\n        if (!env.isSupportTouch) {\r\n          $videoUrl.trigger('focus');\r\n        }\r\n\r\n        $videoBtn.on('click', (event) => {\r\n          event.preventDefault();\r\n          deferred.resolve($videoUrl.val());\r\n        });\r\n\r\n        this.bindEnterKey($videoUrl, $videoBtn);\r\n      });\r\n\r\n      this.ui.onDialogHidden(this.$dialog, () => {\r\n        $videoUrl.off();\r\n        $videoBtn.off();\r\n\r\n        if (deferred.state() === 'pending') {\r\n          deferred.reject();\r\n        }\r\n      });\r\n\r\n      this.ui.showDialog(this.$dialog);\r\n    });\r\n  }\r\n}\r\n","import $ from 'jquery';\r\nimport env from '../core/env';\r\n\r\nexport default class HelpDialog {\r\n  constructor(context) {\r\n    this.context = context;\r\n\r\n    this.ui = $.summernote.ui;\r\n    this.$body = $(document.body);\r\n    this.$editor = context.layoutInfo.editor;\r\n    this.options = context.options;\r\n    this.lang = this.options.langInfo;\r\n  }\r\n\r\n  initialize() {\r\n    const $container = this.options.dialogsInBody ? this.$body : this.options.container;\r\n    const body = [\r\n      '<p class=\"text-center small m-0\">',\r\n        '<a href=\"http://summernote.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Summernote @@VERSION@@</a> · ',\r\n        '<a href=\"https://github.com/summernote/summernote\" target=\"_blank\" rel=\"noopener noreferrer\">Project</a> · ',\r\n        '<a href=\"https://github.com/summernote/summernote/issues\" target=\"_blank\" rel=\"noopener noreferrer\">Issues</a>',\r\n      '</p>',\r\n    ].join('');\r\n\r\n    this.$dialog = this.ui.dialog({\r\n      title: this.lang.options.help,\r\n      fade: this.options.dialogsFade,\r\n      body: this.createShortcutList(),\r\n      footer: body,\r\n      callback: ($node) => {\r\n        $node.find('.modal-body,.note-modal-body').css({\r\n          'max-height': 350,\r\n          'overflow-y': 'scroll',\r\n        });\r\n      },\r\n    }).render().appendTo($container);\r\n  }\r\n\r\n  destroy() {\r\n    this.ui.hideDialog(this.$dialog);\r\n    this.$dialog.remove();\r\n  }\r\n\r\n  createShortcutList() {\r\n    const keyMap = this.options.keyMap[env.isMac ? 'mac' : 'pc'];\r\n\r\n    const $root = $('<div><div class=\"help-list\" style=\"display: grid; grid-template-columns: max-content 1fr; gap: 6px 16px\"></div></div>');\r\n    const $list = $root.find('.help-list');\r\n\r\n    Object.keys(keyMap).forEach(key => {\r\n      const command = keyMap[key];\r\n      $list\r\n        .append($('<div><kbd class=\"fwm\">' + key + '</kdb></div>'))\r\n        .append($('<div></div>').html(this.context.memo('help.' + command) || command));\r\n    });\r\n\r\n    return $root.html();\r\n  }\r\n\r\n  /**\r\n   * show help dialog\r\n   *\r\n   * @return {Promise}\r\n   */\r\n  showHelpDialog() {\r\n    return $.Deferred((deferred) => {\r\n      this.ui.onDialogShown(this.$dialog, () => {\r\n        this.context.triggerEvent('dialog.shown');\r\n        deferred.resolve();\r\n      });\r\n      this.ui.showDialog(this.$dialog);\r\n    }).promise();\r\n  }\r\n\r\n  show() {\r\n    this.showHelpDialog().then(() => {\r\n      this.context.invoke('editor.selection.restoreBookmark');\r\n    });\r\n  }\r\n}\r\n","import $ from 'jquery';\r\n\r\n/**\r\n * Returns bounds from rect\r\n *\r\n * - IE Compatibility Issue: http://goo.gl/sRLOAo\r\n * - Scroll Issue: http://goo.gl/sNjUc\r\n *\r\n * @param {Rect} rect\r\n * @return {Object} bounds\r\n * @return {Number} bounds.top\r\n * @return {Number} bounds.left\r\n * @return {Number} bounds.width\r\n * @return {Number} bounds.height\r\n */\r\nfunction rect2bnd(rect) {\r\n  const $doc = $(document);\r\n  return {\r\n    top: rect.top + $doc.scrollTop(),\r\n    left: rect.left + $doc.scrollLeft(),\r\n    width: rect.right - rect.left,\r\n    height: rect.bottom - rect.top,\r\n  };\r\n}\r\n\r\nconst rgbaToHexString = (rgba) => {\r\n  // TODO: Implement Convert.rgbaToHexString()\r\n  return rgba;\r\n}\r\n\r\nexport default {\r\n  rect2bnd,\r\n  rgbaToHexString\r\n};","import $ from 'jquery';\r\nimport lists from '../core/lists';\r\nimport dom from '../core/dom';\r\nimport range from '../core/range';\r\nimport key from '../core/key';\r\nimport Convert from '../core/Convert';\r\n\r\nconst POPOVER_DIST = 5;\r\n\r\nexport default class HintPopover {\r\n  constructor(context) {\r\n    this.context = context;\r\n\r\n    this.editor = context.modules.editor;\r\n    this.ui = $.summernote.ui;\r\n    this.$editable = context.layoutInfo.editable;\r\n    this.options = context.options;\r\n    this.hint = this.options.hint || [];\r\n    this.direction = this.options.hintDirection || 'bottom';\r\n    this.hints = Array.isArray(this.hint) ? this.hint : [this.hint];\r\n\r\n    this.events = {\r\n      'summernote.keyup': (we, event) => {\r\n        if (!event.isDefaultPrevented()) {\r\n          this.handleKeyup(event);\r\n        }\r\n      },\r\n      'summernote.keydown': (we, event) => {\r\n        this.handleKeydown(event);\r\n      },\r\n      'summernote.disable summernote.dialog.shown summernote.blur': () => {\r\n        this.hide();\r\n      },\r\n    };\r\n  }\r\n\r\n  shouldInitialize() {\r\n    return this.hints.length > 0;\r\n  }\r\n\r\n  initialize() {\r\n    this.lastWordRange = null;\r\n    this.matchingWord = null;\r\n    this.$popover = this.ui.popover({\r\n      className: 'note-hint-popover',\r\n      hideArrow: true,\r\n      direction: '',\r\n    }).render().appendTo(this.options.container);\r\n\r\n    this.$popover.hide();\r\n    this.$content = this.$popover.find('.popover-content,.note-popover-content');\r\n    this.$content.on('click', '.note-hint-item', (event) => {\r\n      this.$content.find('.active').removeClass('active');\r\n      $(event.currentTarget).addClass('active');\r\n      this.replace();\r\n    });\r\n\r\n    this.$popover.on('mousedown', (event) => { event.preventDefault(); });\r\n  }\r\n\r\n  destroy() {\r\n    this.$popover.remove();\r\n  }\r\n\r\n  selectItem($item) {\r\n    this.$content.find('.active').removeClass('active');\r\n    $item.addClass('active');\r\n\r\n    this.$content[0].scrollTop = $item[0].offsetTop - (this.$content.innerHeight() / 2);\r\n  }\r\n\r\n  moveDown() {\r\n    const $current = this.$content.find('.note-hint-item.active');\r\n    const $next = $current.next();\r\n\r\n    if ($next.length) {\r\n      this.selectItem($next);\r\n    } else {\r\n      let $nextGroup = $current.parent().next();\r\n\r\n      if (!$nextGroup.length) {\r\n        $nextGroup = this.$content.find('.note-hint-group').first();\r\n      }\r\n\r\n      this.selectItem($nextGroup.find('.note-hint-item').first());\r\n    }\r\n  }\r\n\r\n  moveUp() {\r\n    const $current = this.$content.find('.note-hint-item.active');\r\n    const $prev = $current.prev();\r\n\r\n    if ($prev.length) {\r\n      this.selectItem($prev);\r\n    } else {\r\n      let $prevGroup = $current.parent().prev();\r\n\r\n      if (!$prevGroup.length) {\r\n        $prevGroup = this.$content.find('.note-hint-group').last();\r\n      }\r\n\r\n      this.selectItem($prevGroup.find('.note-hint-item').last());\r\n    }\r\n  }\r\n\r\n  replace() {\r\n    const $item = this.$content.find('.note-hint-item.active');\r\n\r\n    if ($item.length) {\r\n      var node = this.nodeFromItem($item);\r\n      // If matchingWord length = 0 -> capture OK / open hint / but as mention capture \"\" (\\w*)\r\n      if (this.matchingWord !== null && this.matchingWord.length === 0) {\r\n        this.lastWordRange.so = this.lastWordRange.eo;\r\n      // Else si > 0 and normal case -> adjust range \"before\" for correct position of insertion\r\n      } else if (this.matchingWord !== null && this.matchingWord.length > 0 && !this.lastWordRange.collapsed) {\r\n        let rangeCompute = this.lastWordRange.eo - this.lastWordRange.so - this.matchingWord.length;\r\n        if (rangeCompute > 0) {\r\n          this.lastWordRange.so += rangeCompute;\r\n        }\r\n      }\r\n      this.lastWordRange.insertNode(node);\r\n\r\n      if (this.options.hintSelect === 'next') {\r\n        var blank = document.createTextNode('');\r\n        $(node).after(blank);\r\n        this.editor.selection.setRange(range.createFromNodeBefore(blank));\r\n      } else {\r\n        this.editor.selection.setRange(range.createFromNodeAfter(node));\r\n      }\r\n\r\n      this.lastWordRange = null;\r\n      this.hide();\r\n      this.context.invoke('editor.focus');\r\n      this.context.triggerEvent('change', this.$editable);\r\n    }\r\n  }\r\n\r\n  nodeFromItem($item) {\r\n    const hint = this.hints[$item.data('index')];\r\n    const item = $item.data('item');\r\n    let node = hint.content ? hint.content(item) : item;\r\n    if (typeof node === 'string') {\r\n      node = dom.createText(node);\r\n    }\r\n    return node;\r\n  }\r\n\r\n  createItemTemplates(hintIdx, items) {\r\n    const hint = this.hints[hintIdx];\r\n    return items.map((item , idx) => {\r\n      const $item = $('<div class=\"note-hint-item\"></div>');\r\n      $item.append(hint.template ? hint.template(item) : item + '');\r\n      $item.data({\r\n        'index': hintIdx,\r\n        'item': item,\r\n      });\r\n\r\n      if (hintIdx === 0 && idx === 0) {\r\n        $item.addClass('active');\r\n      }\r\n\r\n      return $item;\r\n    });\r\n  }\r\n\r\n  handleKeydown(event) {\r\n    if (!this.$popover.is(':visible')) {\r\n      return;\r\n    }\r\n\r\n    if (event.keyCode === key.code.ENTER) {\r\n      event.preventDefault();\r\n      this.replace();\r\n    } else if (event.keyCode === key.code.UP) {\r\n      event.preventDefault();\r\n      this.moveUp();\r\n    } else if (event.keyCode === key.code.DOWN) {\r\n      event.preventDefault();\r\n      this.moveDown();\r\n    }\r\n  }\r\n\r\n  searchKeyword(index, keyword, callback) {\r\n    const hint = this.hints[index];\r\n    if (hint && hint.match.test(keyword) && hint.search) {\r\n      const matches = hint.match.exec(keyword);\r\n      this.matchingWord = matches[0];\r\n      hint.search(matches[1], callback);\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  createGroup(idx, keyword) {\r\n    const $group = $('<div class=\"note-hint-group note-hint-group-' + idx + '\"></div>');\r\n    this.searchKeyword(idx, keyword, (items) => {\r\n      items = items || [];\r\n      if (items.length) {\r\n        $group.html(this.createItemTemplates(idx, items));\r\n        this.show();\r\n      }\r\n    });\r\n\r\n    return $group;\r\n  }\r\n\r\n  handleKeyup(event) {\r\n    if (!lists.contains([key.code.ENTER, key.code.UP, key.code.DOWN], event.keyCode)) {\r\n      let range = this.context.invoke('editor.selection.getRange');\r\n      let wordRange, keyword;\r\n      if (this.options.hintMode === 'words') {\r\n        wordRange = range.getWordsRange(range);\r\n        keyword = wordRange.toString();\r\n\r\n        this.hints.forEach((hint) => {\r\n          if (hint.match.test(keyword)) {\r\n            wordRange = range.getWordsMatchRange(hint.match);\r\n            return false;\r\n          }\r\n        });\r\n\r\n        if (!wordRange) {\r\n          this.hide();\r\n          return;\r\n        }\r\n\r\n        keyword = wordRange.toString();\r\n      } else {\r\n        wordRange = range.getWordRange();\r\n        keyword = wordRange.toString();\r\n      }\r\n\r\n      if (this.hints.length && keyword) {\r\n        this.$content.empty();\r\n\r\n        const bnd = Convert.rect2bnd(lists.last(wordRange.getClientRects()));\r\n        const containerOffset = $(this.options.container).offset();\r\n        if (bnd) {\r\n          bnd.top -= containerOffset.top;\r\n          bnd.left -= containerOffset.left;\r\n\r\n          this.$popover.hide();\r\n          this.lastWordRange = wordRange;\r\n          this.hints.forEach((hint, idx) => {\r\n            if (hint.match.test(keyword)) {\r\n              this.createGroup(idx, keyword).appendTo(this.$content);\r\n            }\r\n          });\r\n          // select first .note-hint-item\r\n          this.$content.find('.note-hint-item').first().addClass('active');\r\n\r\n          // set position for popover after group is created\r\n          if (this.direction === 'top') {\r\n            this.$popover.css({\r\n              left: bnd.left,\r\n              top: bnd.top - this.$popover.outerHeight() - POPOVER_DIST,\r\n            });\r\n          } else {\r\n            this.$popover.css({\r\n              left: bnd.left,\r\n              top: bnd.top + bnd.height + POPOVER_DIST,\r\n            });\r\n          }\r\n        }\r\n      } else {\r\n        this.hide();\r\n      }\r\n    }\r\n  }\r\n\r\n  show() {\r\n    this.$popover.show();\r\n  }\r\n\r\n  hide() {\r\n    this.$popover.hide();\r\n  }\r\n}\r\n","import $ from 'jquery';\r\nimport _ from 'underscore';\r\nimport dom from '../core/dom';\r\n\r\nconst isInlineElement = (el) => dom.isInline(el);\r\n\r\nexport default class CssClass {\r\n  constructor(context) {\r\n    this.context = context;\r\n\r\n    this.ui = $.summernote.ui;\r\n    this.$body = $(document.body);\r\n    this.$editor = context.layoutInfo.editor;\r\n    this.options = context.options;\r\n    this.lang = this.options.langInfo;\r\n    this.buttons = context.modules.buttons;\r\n    this.editor = context.modules.editor;\r\n    this.selection = this.editor.selection;\r\n  }\r\n\r\n  initialize() {\r\n    this.addFormats();\r\n    this.initializeButtons();\r\n\r\n    $('.note-toolbar', this.$editor).on('click', '.btn-group-cssclass .dropdown-item', (e) => {\r\n      // Prevent dropdown close\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n\r\n      this.refreshDropdown($(e.currentTarget).parent());\r\n    });\r\n\r\n    $('.note-toolbar', this.$editor).on('mousedown', '.btn-group-cssclass > .btn', (e) => {\r\n      this.refreshDropdown($(e.currentTarget).next());\r\n    });\r\n  }\r\n\r\n  addFormats() {\r\n    if (typeof this.options.cssclass === 'undefined') {\r\n      this.options.cssclass = {};\r\n    }\r\n\r\n    if (typeof this.options.cssclass.classes === 'undefined') {\r\n      const rgAlert = /^alert(-.+)?$/;\r\n      const rgBtn = /^btn(-.+)?$/;\r\n      const rgBg = /^bg-.+$/;\r\n      const rgTextColor = /^text-(muted|primary|success|danger|warning|info|dark|white)$/;\r\n      const rgTextAlign = /^text-(start|center|end)$/;\r\n      const rgDisplay = /^display-[1-4]$/;\r\n      const rgWidth = /^w-(25|50|75|100)$/;\r\n      const rgRounded = /^rounded(-.+)?$/;\r\n\r\n      this.options.cssclass.classes = {\r\n        \"alert alert-primary\": { toggle: rgAlert },\r\n        \"alert alert-secondary\": { toggle: rgAlert },\r\n        \"alert alert-success\": { toggle: rgAlert },\r\n        \"alert alert-danger\": { toggle: rgAlert },\r\n        \"alert alert-warning\": { toggle: rgAlert },\r\n        \"alert alert-info\": { toggle: rgAlert },\r\n        \"alert alert-light\": { toggle: rgAlert },\r\n        \"alert alert-dark\": { toggle: rgAlert },\r\n        \"bg-primary\": { displayClass: \"px-2 py-1 text-white\", inline: true, toggle: rgBg },\r\n        \"bg-secondary\": { displayClass: \"px-2 py-1\", inline: true, toggle: rgBg },\r\n        \"bg-success\": { displayClass: \"px-2 py-1 text-white\", inline: true, toggle: rgBg },\r\n        \"bg-danger\": { displayClass: \"px-2 py-1 text-white\", inline: true, toggle: rgBg },\r\n        \"bg-warning\": { displayClass: \"px-2 py-1 text-white\", inline: true, toggle: rgBg },\r\n        \"bg-info\": { displayClass: \"px-2 py-1 text-white\", inline: true, toggle: rgBg },\r\n        \"bg-light\": { displayClass: \"px-2 py-1\", inline: true, toggle: rgBg },\r\n        \"bg-dark\": { displayClass: \"px-2 py-1 text-white\", inline: true, toggle: rgBg },\r\n        \"bg-white\": { displayClass: \"px-2 py-1 border\", inline: true, toggle: rgBg },\r\n        \"rtl\": { displayClass: \"text-uppercase\", inline: true, toggle: /^ltr$/ },\r\n        \"ltr\": { displayClass: \"text-uppercase\", inline: true, toggle: /^rtl$/ },\r\n        \"text-muted\": { inline: true, toggle: rgTextColor },\r\n        \"text-primary\": {inline: true, toggle: rgTextColor },\r\n        \"text-success\": {inline: true, toggle: rgTextColor },\r\n        \"text-danger\": { inline: true, toggle: rgTextColor },\r\n        \"text-warning\": { inline: true, toggle: rgTextColor },\r\n        \"text-info\": { inline: true, toggle: rgTextColor },\r\n        \"text-dark\": { inline: true, toggle: rgTextColor },\r\n        \"text-white\": { displayClass: \"bg-gray\", inline: true, toggle: rgTextColor },\r\n        \"font-weight-medium\": { inline: true },\r\n        \"w-25\": { displayClass: \"px-2 py-1 bg-light border\", toggle: rgWidth },\r\n        \"w-50\": { displayClass: \"px-2 py-1 bg-light border\", toggle: rgWidth },\r\n        \"w-75\": { displayClass: \"px-2 py-1 bg-light border\", toggle: rgWidth },\r\n        \"w-100\": { displayClass: \"px-2 py-1 bg-light border\", toggle: rgWidth },\r\n        \"btn btn-primary\": { inline: true, toggle: rgBtn, predicate: \"a\" },\r\n        \"btn btn-secondary\": { inline: true, toggle: rgBtn, predicate: \"a\" },\r\n        \"btn btn-success\": { inline: true, toggle: rgBtn, predicate: \"a\" },\r\n        \"btn btn-danger\": { inline: true, toggle: rgBtn, predicate: \"a\" },\r\n        \"btn btn-warning\": { inline: true, toggle: rgBtn, predicate: \"a\" },\r\n        \"btn btn-info\": { inline: true, toggle: rgBtn, predicate: \"a\" },\r\n        \"btn btn-light\": { inline: true, toggle: rgBtn, predicate: \"a\" },\r\n        \"btn btn-dark\": { inline: true, toggle: rgBtn, predicate: \"a\" },\r\n        \"rounded-0\": { displayClass: \"px-2 py-1 bg-light border\", toggle: rgRounded },\r\n        \"rounded-1\": { displayClass: \"px-2 py-1 bg-light border rounded-1\", toggle: rgRounded },\r\n        \"rounded-2\": { displayClass: \"px-2 py-1 bg-light border rounded-2\", toggle: rgRounded },\r\n        \"rounded-3\": { displayClass: \"px-2 py-1 bg-light border rounded-3\", toggle: rgRounded },\r\n        \"rounded-4\": { displayClass: \"px-2 py-2 bg-light border rounded-4\", toggle: rgRounded },\r\n        \"rounded-5\": { displayClass: \"px-2 py-2 bg-light border rounded-5\", toggle: rgRounded },\r\n        \"rounded-pill\": { displayClass: \"px-2 py-1 bg-light border rounded-pill\", toggle: rgRounded },\r\n        \"list-unstyled\": { },\r\n        \"display-1\": { displayClass: \"fs-h1\", toggle: rgDisplay },\r\n        \"display-2\": { displayClass: \"fs-h2\", toggle: rgDisplay },\r\n        \"display-3\": { displayClass: \"fs-h3\", toggle: rgDisplay },\r\n        \"display-4\": { displayClass: \"fs-h4\", toggle: rgDisplay },\r\n        \"lead\": { }\r\n      };\r\n    }\r\n\r\n    if (typeof this.options.cssclass.imageShapes === 'undefined') {\r\n      this.options.cssclass.imageShapes = {\r\n        \"img-fluid\": { inline: true },\r\n        \"border\": { inline: true },\r\n        \"rounded\": { toggle: /^(rounded(-.+)?)|img-thumbnail$/, inline: true },\r\n        \"rounded-circle\": { toggle: /^(rounded(-.+)?)|img-thumbnail$/, inline: true  },\r\n        \"img-thumbnail\": { toggle: /^rounded(-.+)?$/, inline: true },\r\n        \"shadow-sm\": { toggle: /^(shadow(-.+)?)$/, inline: true },\r\n        \"shadow\": { toggle: /^(shadow(-.+)?)$/, inline: true },\r\n        \"shadow-lg\": { toggle: /^(shadow(-.+)?)$/, inline: true }\r\n      };\r\n    }\r\n  }\r\n\r\n  initializeButtons() {\r\n    this.context.memo('button.cssclass', () => {\r\n      return this.ui.buttonGroup({\r\n        className: 'btn-group-cssclass',\r\n        children: [\r\n          this.ui.button({\r\n            className: 'dropdown-toggle',\r\n            contents: this.ui.icon(\"fab fa-css3\"), // TODO\r\n            callback: (btn) => {\r\n              btn.data(\"placement\", \"bottom\")\r\n                .data(\"trigger\", 'hover')\r\n                .attr(\"title\", this.lang.attrs.cssClass)\r\n                .tooltip();\r\n            },\r\n            data: {\r\n              toggle: 'dropdown'\r\n            }\r\n          }),\r\n          this.ui.dropdown({\r\n            className: 'dropdown-cssclass scrollable-menu',\r\n            items: _.keys(this.options.cssclass.classes),\r\n            template: (item) => {\r\n                const obj = this.options.cssclass.classes[item] || {};\r\n\r\n                let cssClass = item;\r\n                if (obj.displayClass) {\r\n                    cssClass += \" \" + obj.displayClass;\r\n                }\r\n                if (!obj.inline) {\r\n                    cssClass += \" d-block\";\r\n                }\r\n\r\n              const cssStyle = obj.style ? ' style=\"{0}\"'.format(obj.style) : '';\r\n              return `<span class=\"${cssClass}\" title=\"${item}\"${cssStyle}>${item}</span>`;\r\n            },\r\n            click: (e, namespace, value) => {\r\n              e.preventDefault();\r\n\r\n              var ddi = $(e.target).closest('[data-value]');\r\n              value = value || ddi.data('value');\r\n              var obj = this.options.cssclass.classes[value] || {};\r\n\r\n              this.applyClassToSelection(value, obj);\r\n            }\r\n          })\r\n        ]\r\n      }).render();\r\n    });\r\n\r\n    // Image shape stuff\r\n    this.context.memo('button.imageShapes', () => {\r\n      const imageShapes = Object.keys(this.options.cssclass.imageShapes);\r\n      const button = this.ui.buttonGroup({\r\n        className: 'btn-group-imageshape',\r\n        children: [\r\n          this.ui.button({\r\n            className: 'dropdown-toggle',\r\n            contents: this.ui.icon(\"fab fa-css3\"),\r\n            tooltip: this.lang.imageShapes.tooltip,\r\n            click: (e) => {\r\n              this.refreshDropdown($(e.currentTarget).next(), $(this.selection.selectedControl), true);\r\n            },\r\n            data: {\r\n              toggle: 'dropdown'\r\n            }\r\n          }),\r\n          this.ui.dropdownCheck({\r\n            className: 'dropdown-shape',\r\n            checkClassName: this.options.icons.menuCheck,\r\n            items: imageShapes,\r\n            template: (item) => {\r\n              const index = imageShapes.indexOf(item);\r\n              return this.lang.imageShapes.tooltipShapeOptions[index];\r\n            },\r\n            click: (e) => {\r\n              e.preventDefault();\r\n\r\n              const ddi = $(e.target).closest('[data-value]');\r\n              const value = ddi.data('value');\r\n              const obj = this.options.cssclass.imageShapes[value] || {};\r\n              \r\n              this.applyClassToSelection(value, obj);\r\n            }\r\n          })\r\n        ]\r\n      });\r\n\r\n      return button.render();\r\n    });\r\n  }\r\n\r\n  applyClassToSelection(value, obj) {\r\n    const rng = this.selection.getRange();\r\n    if (!this.selection.isValidRange(rng)) {\r\n      return;\r\n    }\r\n\r\n    const controlNode = $(this.selection.selectedControl);\r\n    const sel = this.selection.nativeSelection;\r\n    let node = $(sel.focusNode.parentElement, \".note-editable\");\r\n    const caret = sel.type === 'None' || sel.type === 'Caret';\r\n\r\n    const apply = (el) => {\r\n      if (el.is('.' + value.replace(' ', '.'))) {\r\n        // \"btn btn-info\" > \".btn.btn-info\"\r\n        // Just remove the same style\r\n        el.removeClass(value);\r\n        if (!el.attr('class')) {\r\n          el.removeAttr('class');\r\n        }\r\n\r\n        if (isInlineElement(el[0]) && !el[0].attributes.length) {\r\n          // Unwrap the node when it is inline and no attributes are present\r\n          el.replaceWith(el.html());\r\n        }\r\n      }\r\n      else {\r\n        if (obj.toggle) {\r\n          // Remove equivalent classes first\r\n          const classNames = (el.attr('class') || '').split(' ');\r\n          _.each(classNames, (name) => {\r\n            if (name && name !== value && obj.toggle.test(name)) {\r\n              el.removeClass(name);\r\n            }\r\n          });\r\n        }\r\n\r\n        el.toggleClass(value);\r\n      }\r\n    }\r\n\r\n    this.editor.beforeCommand();\r\n\r\n    if (controlNode.length) {\r\n      // Most likely IMG is selected\r\n      if (obj.inline) {\r\n        apply(controlNode);\r\n      }\r\n    }\r\n    else {\r\n      if (!obj.inline) {\r\n        // Apply a block-style only to a block-level element\r\n        if (isInlineElement(node[0])) {\r\n          // Traverse parents until a block-level element is found\r\n          node = $(dom.closest(node, n => !isInlineElement(n)));\r\n        }\r\n\r\n        if (node.length && !dom.isEditableRoot(node[0])) {\r\n          apply(node);\r\n        }\r\n      }\r\n      else if (obj.inline && caret) {\r\n        apply(node);\r\n      }\r\n      else if (sel.rangeCount) {\r\n        const range = sel.getRangeAt(0).cloneRange();\r\n        const span = $('<span class=\"' + value + '\"></span>');\r\n        range.surroundContents(span[0]);\r\n        sel.removeAllRanges();\r\n        sel.addRange(range);\r\n      }\r\n    }\r\n\r\n    this.editor.afterCommand();\r\n  }\r\n\r\n  refreshDropdown(drop, node /* selectedNode */, noBubble) {\r\n    node = node || $(this.selection.nativeSelection.focusNode, \".note-editable\");\r\n\r\n    drop.find('> .dropdown-item').each(function () {\r\n      let ddi = $(this),\r\n        curNode = node,\r\n        value = ddi.data('value'),\r\n        //obj = options.cssclass.classes[value] || {},\r\n        expr = '.' + value.replace(' ', '.'),\r\n        match = false;\r\n\r\n      while (curNode.length) {\r\n        \r\n        if (curNode.is(expr)) {\r\n          match = true;\r\n          break;\r\n        }\r\n\r\n        if (noBubble) {\r\n          break;\r\n        }\r\n\r\n        if (dom.isEditableRoot(curNode)) {\r\n          break;\r\n        }\r\n\r\n        curNode = curNode.parent();\r\n      }\r\n\r\n      ddi.toggleClass('checked', match);\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    // ???\r\n  }\r\n}","import $ from 'jquery';\r\nimport './summernote-en-US';\r\nimport './summernote';\r\nimport icons from './icons';\r\nimport dom from './core/dom';\r\nimport range from './core/range';\r\nimport lists from './core/lists';\r\nimport Editor from './module/Editor';\r\nimport Clipboard from './module/Clipboard';\r\nimport Dropzone from './module/Dropzone';\r\nimport Codeview from './module/Codeview';\r\nimport Statusbar from './module/Statusbar';\r\nimport Fullscreen from './module/Fullscreen';\r\nimport Handle from './module/Handle';\r\nimport AutoLink from './module/AutoLink';\r\nimport AutoSync from './module/AutoSync';\r\nimport AutoReplace from './module/AutoReplace';\r\nimport Placeholder from './module/Placeholder';\r\nimport Buttons from './module/Buttons';\r\nimport Toolbar from './module/Toolbar';\r\n//import LinkDialog from './module/LinkDialog';\r\nimport LinkDialog from './module/LinkDialogEx';\r\nimport LinkPopover from './module/LinkPopover';\r\n//import ImageDialog from './module/ImageDialog';\r\nimport ImageDialog from './module/ImageDialogEx';\r\nimport ImagePopover from './module/ImagePopover';\r\nimport TablePopover from './module/TablePopover';\r\nimport TableStyles from './module/TableStyles';\r\nimport VideoDialog from './module/VideoDialog';\r\nimport HelpDialog from './module/HelpDialog';\r\n//import AirPopover from './module/AirPopover';\r\nimport HintPopover from './module/HintPopover';\r\nimport CssClass from './module/CssClass';\r\n\r\n$.summernote = $.extend($.summernote, {\r\n  version: '@@VERSION@@',\r\n  plugins: {},\r\n\r\n  dom: dom,\r\n  range: range,\r\n  lists: lists,\r\n\r\n  options: {\r\n    langInfo: $.summernote.lang['en-US'],\r\n    editing: true,\r\n    modules: {\r\n      'editor': Editor, // MUST be first\r\n      'clipboard': Clipboard,\r\n      'dropzone': Dropzone,\r\n      'codeview': Codeview,\r\n      'statusbar': Statusbar,\r\n      'fullscreen': Fullscreen,\r\n      'handle': Handle,\r\n      // FIXME: HintPopover must be front of autolink\r\n      //  - Script error about range when Enter key is pressed on hint popover\r\n      'hintPopover': HintPopover,\r\n      'autoLink': AutoLink,\r\n      'autoSync': AutoSync,\r\n      'autoReplace': AutoReplace,\r\n      'placeholder': Placeholder,\r\n      'cssclass': CssClass,\r\n      'tableStyles': TableStyles,\r\n      'buttons': Buttons,\r\n      'toolbar': Toolbar,\r\n      'linkDialog': LinkDialog,\r\n      'linkPopover': LinkPopover,\r\n      'imageDialog': ImageDialog,\r\n      'imagePopover': ImagePopover,\r\n      'tablePopover': TablePopover,\r\n      'videoDialog': VideoDialog,\r\n      'helpDialog': HelpDialog,\r\n      //'airPopover': AirPopover,\r\n    },\r\n\r\n    buttons: {},\r\n\r\n    lang: 'en-US',\r\n\r\n    followingToolbar: true,\r\n    toolbarPosition: 'top',\r\n    otherStaticBar: '',\r\n\r\n    // toolbar\r\n    codeviewKeepButton: false,\r\n    toolbar: [\r\n      ['style', ['style']],\r\n      ['font', ['bold', 'underline', 'clear']],\r\n      ['fontname', ['fontname']],\r\n      ['color', ['color']],\r\n      ['para', ['ul', 'ol', 'paragraph']],\r\n      ['table', ['table']],\r\n      ['insert', ['link', 'picture', 'video']],\r\n      ['view', ['fullscreen', 'codeview', 'help']],\r\n    ],\r\n\r\n    // popover\r\n    popatmouse: true,\r\n    popover: {\r\n      image: [\r\n        ['resize', ['resizeFull', 'resizeHalf', 'resizeQuarter', 'resizeNone']],\r\n        ['float', ['floatLeft', 'floatRight', 'floatNone']],\r\n        ['remove', ['removeMedia']],\r\n      ],\r\n      link: [\r\n        ['link', ['linkDialogShow', 'unlink']],\r\n      ],\r\n      table: [\r\n        ['add', ['addRowDown', 'addRowUp', 'addColLeft', 'addColRight']],\r\n        ['delete', ['deleteRow', 'deleteCol', 'deleteTable']],\r\n      ],\r\n      air: [\r\n        ['color', ['color']],\r\n        ['font', ['bold', 'underline', 'clear']],\r\n        ['para', ['ul', 'paragraph']],\r\n        ['table', ['table']],\r\n        ['insert', ['link', 'picture']],\r\n        ['view', ['fullscreen', 'codeview']],\r\n      ],\r\n    },\r\n\r\n    // link options\r\n    linkAddNoReferrer: false,\r\n    addLinkNoOpener: false,\r\n\r\n    // air mode: inline editor\r\n    airMode: false,\r\n    overrideContextMenu: false, // TBD\r\n\r\n    width: null,\r\n    height: null,\r\n    linkTargetBlank: true,\r\n\r\n    focus: false,\r\n    tabDisable: false,\r\n    tabSize: 4,\r\n    styleWithCSS: false,\r\n    shortcuts: true,\r\n    textareaAutoSync: true,\r\n    tooltip: 'auto',\r\n    container: null,\r\n    maxTextLength: 0,\r\n    blockquoteBreakingLevel: 2,\r\n    spellCheck: true,\r\n    disableGrammar: false,\r\n    placeholder: null,\r\n    inheritPlaceholder: false,\r\n    // TODO: need to be documented\r\n    recordEveryKeystroke: false,\r\n    historyLimit: 200,\r\n    sanitizeHtml: true,\r\n    prettifyHtml: true,\r\n\r\n    // TODO: need to be documented\r\n    showDomainOnlyForAutolink: false,\r\n\r\n    // TODO: need to be documented\r\n    hintMode: 'word',\r\n    hintSelect: 'after',\r\n    hintDirection: 'bottom',\r\n\r\n    styleTags: ['p', 'blockquote', 'pre', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\r\n\r\n    fontNames: [\r\n      'Arial', 'Arial Black', 'Comic Sans MS', 'Courier New',\r\n      'Helvetica Neue', 'Helvetica', 'Impact', 'Lucida Grande',\r\n      'Tahoma', 'Times New Roman', 'Verdana',\r\n    ],\r\n    fontNamesIgnoreCheck: [],\r\n    addDefaultFonts: true,\r\n\r\n    fontSizes: ['8', '9', '10', '11', '12', '14', '18', '24', '36'],\r\n\r\n    fontSizeUnits: ['px', 'pt'],\r\n\r\n    // pallete colors(n x n)\r\n    colors: [\r\n      ['#000000', '#424242', '#636363', '#9C9C94', '#CEC6CE', '#EFEFEF', '#F7F7F7', '#FFFFFF'],\r\n      ['#FF0000', '#FF9C00', '#FFFF00', '#00FF00', '#00FFFF', '#0000FF', '#9C00FF', '#FF00FF'],\r\n      ['#F7C6CE', '#FFE7CE', '#FFEFC6', '#D6EFD6', '#CEDEE7', '#CEE7F7', '#D6D6E7', '#E7D6DE'],\r\n      ['#E79C9C', '#FFC69C', '#FFE79C', '#B5D6A5', '#A5C6CE', '#9CC6EF', '#B5A5D6', '#D6A5BD'],\r\n      ['#E76363', '#F7AD6B', '#FFD663', '#94BD7B', '#73A5AD', '#6BADDE', '#8C7BC6', '#C67BA5'],\r\n      ['#CE0000', '#E79439', '#EFC631', '#6BA54A', '#4A7B8C', '#3984C6', '#634AA5', '#A54A7B'],\r\n      ['#9C0000', '#B56308', '#BD9400', '#397B21', '#104A5A', '#085294', '#311873', '#731842'],\r\n      ['#630000', '#7B3900', '#846300', '#295218', '#083139', '#003163', '#21104A', '#4A1031'],\r\n    ],\r\n\r\n    // http://chir.ag/projects/name-that-color/\r\n    colorsName: [\r\n      ['Black', 'Tundora', 'Dove Gray', 'Star Dust', 'Pale Slate', 'Gallery', 'Alabaster', 'White'],\r\n      ['Red', 'Orange Peel', 'Yellow', 'Green', 'Cyan', 'Blue', 'Electric Violet', 'Magenta'],\r\n      ['Azalea', 'Karry', 'Egg White', 'Zanah', 'Botticelli', 'Tropical Blue', 'Mischka', 'Twilight'],\r\n      ['Tonys Pink', 'Peach Orange', 'Cream Brulee', 'Sprout', 'Casper', 'Perano', 'Cold Purple', 'Careys Pink'],\r\n      ['Mandy', 'Rajah', 'Dandelion', 'Olivine', 'Gulf Stream', 'Viking', 'Blue Marguerite', 'Puce'],\r\n      ['Guardsman Red', 'Fire Bush', 'Golden Dream', 'Chelsea Cucumber', 'Smalt Blue', 'Boston Blue', 'Butterfly Bush', 'Cadillac'],\r\n      ['Sangria', 'Mai Tai', 'Buddha Gold', 'Forest Green', 'Eden', 'Venice Blue', 'Meteorite', 'Claret'],\r\n      ['Rosewood', 'Cinnamon', 'Olive', 'Parsley', 'Tiber', 'Midnight Blue', 'Valentino', 'Loulou'],\r\n    ],\r\n\r\n    colorButton: {\r\n      foreColor: '#000000',\r\n      backColor: '#FFFF00',\r\n    },\r\n\r\n    lineHeights: ['1.0', '1.2', '1.4', '1.5', '1.6', '1.8', '2.0', '3.0'],\r\n\r\n    tableClassName: 'table table-bordered',\r\n\r\n    tableStyles: {\r\n      // Must keep the same order as in lang.tableStyles.styles*\r\n      stylesExclusive: [\"\", \"table-bordered\"],\r\n      stylesInclusive: [\"table-striped\", \"table-sm\", \"table-hover\"]\r\n    },\r\n\r\n    insertTableMaxSize: {\r\n      col: 10,\r\n      row: 10,\r\n    },\r\n\r\n    // By default, dialogs are attached in container.\r\n    dialogsInBody: false,\r\n    dialogsFade: false,\r\n\r\n    maximumImageFileSize: null,\r\n    acceptImageFileTypes: \"image/*\",\r\n\r\n    allowClipboardImagePasting: true,\r\n\r\n    callbacks: {\r\n      onBeforeCommand: null,\r\n      onBlur: null,\r\n      onBlurCodeview: null,\r\n      onChange: null,\r\n      onChangeCodeview: null,\r\n      onDialogShown: null,\r\n      onEnter: null,\r\n      onFocus: null,\r\n      onFileBrowse: null,\r\n      onImageLinkInsert: null,\r\n      onImageUpload: null,\r\n      onImageUploadError: null,\r\n      onSanitizeHtml: null,\r\n      onInit: null,\r\n      onKeydown: null,\r\n      onKeyup: null,\r\n      onMousedown: null,\r\n      onMouseup: null,\r\n      onPaste: null,\r\n      onScroll: null,\r\n    },\r\n\r\n    codemirror: {\r\n      mode: 'text/html',\r\n      htmlMode: true,\r\n      lineNumbers: true,\r\n    },\r\n\r\n    codeviewFilter: true,\r\n    codeviewFilterRegex: /<\\/*(?:applet|b(?:ase|gsound|link)|embed|frame(?:set)?|ilayer|l(?:ayer|ink)|meta|object|s(?:cript|tyle)|t(?:itle|extarea)|xml)[^>]*?>/gi,\r\n    codeviewIframeFilter: true,\r\n    codeviewIframeWhitelistSrc: [],\r\n    codeviewIframeWhitelistSrcBase: [\r\n      'www.youtube.com',\r\n      'www.youtube-nocookie.com',\r\n      'www.facebook.com',\r\n      'vine.co',\r\n      'instagram.com',\r\n      'player.vimeo.com',\r\n      'www.dailymotion.com',\r\n      'player.youku.com',\r\n      'jumpingbean.tv',\r\n      'v.qq.com',\r\n    ],\r\n\r\n    keyMap: {\r\n      pc: {\r\n        'ESC': 'escape',\r\n        'ENTER': 'insertParagraph',\r\n        'CTRL+Z': 'undo',\r\n        'CTRL+Y': 'redo',\r\n        'TAB': 'tab',\r\n        'SHIFT+TAB': 'untab',\r\n        'CTRL+B': 'bold',\r\n        'CTRL+I': 'italic',\r\n        'CTRL+U': 'underline',\r\n        'CTRL+SHIFT+S': 'strikethrough',\r\n        'CTRL+BACKSLASH': 'removeFormat',\r\n        'CTRL+SHIFT+L': 'justifyLeft',\r\n        'CTRL+SHIFT+E': 'justifyCenter',\r\n        'CTRL+SHIFT+R': 'justifyRight',\r\n        'CTRL+SHIFT+J': 'justifyFull',\r\n        'CTRL+SHIFT+NUM7': 'insertUnorderedList',\r\n        'CTRL+SHIFT+NUM8': 'insertOrderedList',\r\n        'CTRL+LEFTBRACKET': 'outdent',\r\n        'CTRL+RIGHTBRACKET': 'indent',\r\n        'CTRL+NUM0': 'formatPara',\r\n        'CTRL+NUM1': 'formatH1',\r\n        'CTRL+NUM2': 'formatH2',\r\n        'CTRL+NUM3': 'formatH3',\r\n        'CTRL+NUM4': 'formatH4',\r\n        'CTRL+NUM5': 'formatH5',\r\n        'CTRL+NUM6': 'formatH6',\r\n        'CTRL+ENTER': 'insertHorizontalRule',\r\n        'CTRL+K': 'linkDialog.show',\r\n      },\r\n\r\n      mac: {\r\n        'ESC': 'escape',\r\n        'ENTER': 'insertParagraph',\r\n        'CMD+Z': 'undo',\r\n        'CMD+SHIFT+Z': 'redo',\r\n        'TAB': 'tab',\r\n        'SHIFT+TAB': 'untab',\r\n        'CMD+B': 'bold',\r\n        'CMD+I': 'italic',\r\n        'CMD+U': 'underline',\r\n        'CMD+SHIFT+S': 'strikethrough',\r\n        'CMD+BACKSLASH': 'removeFormat',\r\n        'CMD+SHIFT+L': 'justifyLeft',\r\n        'CMD+SHIFT+E': 'justifyCenter',\r\n        'CMD+SHIFT+R': 'justifyRight',\r\n        'CMD+SHIFT+J': 'justifyFull',\r\n        'CMD+SHIFT+NUM7': 'insertUnorderedList',\r\n        'CMD+SHIFT+NUM8': 'insertOrderedList',\r\n        'CMD+LEFTBRACKET': 'outdent',\r\n        'CMD+RIGHTBRACKET': 'indent',\r\n        'CMD+NUM0': 'formatPara',\r\n        'CMD+NUM1': 'formatH1',\r\n        'CMD+NUM2': 'formatH2',\r\n        'CMD+NUM3': 'formatH3',\r\n        'CMD+NUM4': 'formatH4',\r\n        'CMD+NUM5': 'formatH5',\r\n        'CMD+NUM6': 'formatH6',\r\n        'CMD+ENTER': 'insertHorizontalRule',\r\n        'CMD+K': 'linkDialog.show',\r\n      },\r\n    },\r\n    icons: icons\r\n  },\r\n});\r\n","import $ from 'jquery';\r\n\r\nclass Renderer {\r\n  constructor(markup, children, options, callback) {\r\n    this.markup = markup;\r\n    this.children = children;\r\n    this.options = options;\r\n    this.callback = callback;\r\n  }\r\n\r\n  render($parent) {\r\n    const $node = $(this.markup);\r\n\r\n    if (this.options && this.options.contents) {\r\n      $node.html(this.options.contents);\r\n    }\r\n\r\n    if (this.options && this.options.className) {\r\n      $node.addClass(this.options.className);\r\n    }\r\n\r\n    if (this.options && this.options.css) {\r\n      $node.css(this.options.css);\r\n    }\r\n\r\n    if (this.options && this.options.data) {\r\n      $.each(this.options.data, (k, v) => {\r\n        $node.attr('data-' + k, v);\r\n      });\r\n    }\r\n\r\n    if (this.options && this.options.click) {\r\n      $node.on('click', this.options.click);\r\n    }\r\n\r\n    if (this.children) {\r\n      const $container = $node.find('.note-children-container');\r\n      this.children.forEach((child) => {\r\n        child.render($container.length ? $container : $node);\r\n      });\r\n    }\r\n\r\n    if (this.callback) {\r\n      this.callback($node, this.options);\r\n    }\r\n\r\n    if (this.options && this.options.callback) {\r\n      this.options.callback($node);\r\n    }\r\n\r\n    if ($parent) {\r\n      $parent.append($node);\r\n    }\r\n\r\n    return $node;\r\n  }\r\n}\r\n\r\nexport default {\r\n  create: (markup, callback) => {\r\n    return function() {\r\n      const options = typeof arguments[1] === 'object' ? arguments[1] : arguments[0];\r\n      let children = Array.isArray(arguments[0]) ? arguments[0] : [];\r\n      if (options && options.children) {\r\n        children = options.children;\r\n      }\r\n      return new Renderer(markup, children, options, callback);\r\n    };\r\n  },\r\n};\r\n","import $ from 'jquery';\r\nimport '@/js/settings.js';\r\nimport renderer from '@/js/renderer';\r\nimport './summernote-sm.scss';\r\n//import { summernote_global_config } from './js/globalinit';\r\n\r\nconst editor = renderer.create('<div class=\"note-editor note-frame card\"></div>');\r\nconst toolbar = renderer.create('<div class=\"note-toolbar note-toolbar-main card-header\" role=\"toolbar\"></div>');\r\nconst editingArea = renderer.create('<div class=\"note-editing-area\"></div>');\r\nconst codable = renderer.create('<textarea class=\"note-codable\" aria-multiline=\"true\"></textarea>');\r\nconst editable = renderer.create('<div class=\"note-editable card-block\" contentEditable=\"true\" role=\"textbox\" aria-multiline=\"true\"></div>');\r\nconst statusbar = renderer.create([\r\n  '<output class=\"note-status-output\" role=\"status\" aria-live=\"polite\"></output>',\r\n  '<div class=\"note-statusbar\" role=\"status\">',\r\n    '<div class=\"note-resizebar\" aria-label=\"Resize\">',\r\n      '<div class=\"note-icon-bar\"></div>',\r\n      '<div class=\"note-icon-bar\"></div>',\r\n      '<div class=\"note-icon-bar\"></div>',\r\n    '</div>',\r\n  '</div>',\r\n].join(''));\r\n\r\nconst airEditor = renderer.create('<div class=\"note-editor note-airframe\"></div>');\r\nconst airEditable = renderer.create([\r\n  '<div class=\"note-editable\" contentEditable=\"true\" role=\"textbox\" aria-multiline=\"true\"></div>',\r\n  '<output class=\"note-status-output\" role=\"status\" aria-live=\"polite\"></output>',\r\n].join(''));\r\n\r\nconst buttonGroup = renderer.create('<div class=\"note-btn-group btn-group\"></div>');\r\n//const toolGroup = renderer.create('<div class=\"note-btn-group btn-group\"></div>');\r\nconst toolGroup = renderer.create('<div class=\"note-toolgroup\"></div>');\r\n\r\nconst dropdown = renderer.create(\r\n  '<div class=\"note-dropdown-menu dropdown-menu\" role=\"list\"></div>',\r\n  function($node, options) {\r\n    const markup = Array.isArray(options.items)\r\n      ? options.items\r\n        .map(function(item) {\r\n          const value = typeof item === 'string' ? item : item.value || '';\r\n          const content = options.template ? options.template(item) : item;\r\n          const option = typeof item === 'object' ? item.option : undefined;\r\n\r\n          const dataValue = 'data-value=\"' + value + '\"';\r\n          const dataOption = option !== undefined ? ' data-option=\"' + option + '\"' : '';\r\n          return (\r\n            '<a class=\"dropdown-item\" href=\"#\" ' +\r\n              (dataValue + dataOption) +\r\n              ' role=\"listitem\" aria-label=\"' +\r\n              value +\r\n              '\">' +\r\n              content +\r\n              '</a>'\r\n          );\r\n        })\r\n        .join('')\r\n      : options.items;\r\n\r\n    $node.html(markup).attr({ 'aria-label': options.title });\r\n\r\n    if (options && options.codeviewKeepButton) {\r\n      $node.addClass('note-codeview-keep');\r\n    }\r\n  },\r\n);\r\n\r\nconst dropdownButtonContents = function(contents) {\r\n  return contents;\r\n};\r\n\r\nconst dropdownCheck = renderer.create(\r\n  '<div class=\"note-dropdown-menu dropdown-menu note-check\" role=\"list\"></div>',\r\n  function($node, options) {\r\n    const markup = Array.isArray(options.items)\r\n      ? options.items\r\n        .map(function(item) {\r\n          const value = typeof item === 'string' ? item : item.value || '';\r\n          const content = options.template ? options.template(item) : item;\r\n          return (\r\n            '<a class=\"dropdown-item\" href=\"#\" data-value=\"' +\r\n              value +\r\n              '\" role=\"listitem\" aria-label=\"' +\r\n              item +\r\n              '\">' +\r\n              icon(options.checkClassName) +\r\n              ' ' +\r\n              content +\r\n              '</a>'\r\n          );\r\n        })\r\n        .join('')\r\n      : options.items;\r\n    $node.html(markup).attr({ 'aria-label': options.title });\r\n\r\n    if (options && options.codeviewKeepButton) {\r\n      $node.addClass('note-codeview-keep');\r\n    }\r\n  },\r\n);\r\n\r\nconst dialog = renderer.create(\r\n  '<div class=\"modal note-modal\" aria-hidden=\"false\" tabindex=\"-1\" role=\"dialog\"></div>',\r\n  function($node, options) {\r\n    if (options.fade) {\r\n      $node.addClass('fade');\r\n    }\r\n    $node.attr({\r\n      'aria-label': options.title,\r\n    });\r\n    $node.html(\r\n      [\r\n        '<div class=\"modal-dialog\">',\r\n        '<div class=\"modal-content\">',\r\n        options.title\r\n          ? '<div class=\"modal-header\">' +\r\n            '<h4 class=\"modal-title\">' +\r\n            options.title +\r\n            '</h4>' +\r\n            '<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" aria-hidden=\"true\"></button>' +\r\n            '</div>'\r\n          : '',\r\n        '<div class=\"modal-body\">' + options.body + '</div>',\r\n        options.footer ? '<div class=\"modal-footer\">' + options.footer + '</div>' : '',\r\n        '</div>',\r\n        '</div>',\r\n      ].join(''),\r\n    );\r\n  },\r\n);\r\n\r\nconst popover = renderer.create([\r\n  '<div class=\"note-popover popover bs-popover-auto show\" x-arrow=\"arrow\">',\r\n    '<div class=\"arrow\"></div>',\r\n    '<div class=\"popover-content note-toolbar note-children-container\"></div>',\r\n  '</div>',\r\n].join(''), function($node, options) {\r\n  if (options.hideArrow) {\r\n    $node.find('.arrow').hide();\r\n  }\r\n});\r\n\r\nconst checkbox = renderer.create('<div class=\"form-check\"></div>', function($node, options) {\r\n  $node.html([\r\n    '<input type=\"checkbox\" class=\"form-check-input\"' + (options.id ? ' id=\"note-' + options.id + '\"' : ''),\r\n      (options.checked ? ' checked' : ''),\r\n      ' aria-label=\"' + (options.text ? options.text : '') + '\"',\r\n      ' aria-checked=\"' + (options.checked ? 'true' : 'false') + '\"/>',\r\n    '<label class=\"form-check-label\"' + (options.id ? ' for=\"note-' + options.id + '\"' : '') + '>',\r\n      ' ' + (options.text ? options.text : '') +\r\n    '</label>',\r\n  ].join(''));\r\n});\r\n\r\nconst icon = function(iconClassName, tagName) {\r\n  if (iconClassName.match(/^</)) {\r\n    return iconClassName;\r\n  }\r\n  tagName = tagName || 'i';\r\n  return '<' + tagName + ' class=\"' + iconClassName + '\"></' + tagName+'>';\r\n};\r\n\r\nconst ui = function(editorOptions) {\r\n  return {\r\n    editor: editor,\r\n    toolbar: toolbar,\r\n    editingArea: editingArea,\r\n    codable: codable,\r\n    editable: editable,\r\n    statusbar: statusbar,\r\n    airEditor: airEditor,\r\n    airEditable: airEditable,\r\n    buttonGroup: buttonGroup,\r\n    toolGroup: toolGroup,\r\n    dropdown: dropdown,\r\n    dropdownButtonContents: dropdownButtonContents,\r\n    dropdownCheck: dropdownCheck,\r\n    dialog: dialog,\r\n    popover: popover,\r\n    icon: icon,\r\n    checkbox: checkbox,\r\n    options: editorOptions,\r\n\r\n    palette: function($node, options) {\r\n      return renderer.create('<div class=\"note-color-palette\"></div>', function($node, options) {\r\n        const contents = [];\r\n        for (let row = 0, rowSize = options.colors.length; row < rowSize; row++) {\r\n          const eventName = options.eventName;\r\n          const colors = options.colors[row];\r\n          const colorsName = options.colorsName[row];\r\n          const buttons = [];\r\n          for (let col = 0, colSize = colors.length; col < colSize; col++) {\r\n            const color = colors[col];\r\n            const colorName = colorsName[col];\r\n            buttons.push([\r\n              '<button type=\"button\" class=\"note-color-btn\"',\r\n              'style=\"background-color:', color, '\" ',\r\n              'data-event=\"', eventName, '\" ',\r\n              'data-value=\"', color, '\" ',\r\n              'title=\"', colorName, '\" ',\r\n              'aria-label=\"', colorName, '\" ',\r\n              'data-toggle=\"button\" tabindex=\"-1\"></button>',\r\n            ].join(''));\r\n          }\r\n          contents.push('<div class=\"note-color-row\">' + buttons.join('') + '</div>');\r\n        }\r\n        $node.html(contents.join(''));\r\n\r\n        if (options.tooltip) {\r\n          var tooltipOptions = {\r\n            container: options.container || editorOptions.container,\r\n            trigger: 'hover',\r\n            placement: 'bottom',\r\n          };\r\n\r\n          $node.tooltip({\r\n            selector: '.note-color-btn',\r\n            ...tooltipOptions,\r\n          });\r\n        }\r\n      })($node, options);\r\n    },\r\n\r\n    button: function($node, options) {\r\n      return renderer.create('<button type=\"button\" class=\"note-btn btn btn-light btn-sm\"></button>', function($node, options) {\r\n        if (options && options.tooltip) {\r\n          $node.attr({\r\n            title: options.tooltip,\r\n            'aria-label': options.tooltip,\r\n          }).tooltip({\r\n            container: options.container || editorOptions.container,\r\n            trigger: 'hover',\r\n            placement: 'bottom',\r\n          }).on('click', (e) => {\r\n            $(e.currentTarget).tooltip('hide');\r\n          });\r\n        }\r\n        if (options && options.codeviewButton) {\r\n          $node.addClass('note-codeview-keep');\r\n        }\r\n      })($node, options);\r\n    },\r\n\r\n    toggleBtn: function($btn, isEnable) {\r\n      $btn.toggleClass('disabled', !isEnable);\r\n      $btn.attr('disabled', !isEnable);\r\n    },\r\n\r\n    toggleBtnActive: function($btn, isActive) {\r\n      $btn.toggleClass('active', isActive);\r\n    },\r\n\r\n    onDialogShown: function($dialog, handler) {\r\n      $dialog.one('shown.bs.modal', handler);\r\n    },\r\n\r\n    onDialogHidden: function($dialog, handler) {\r\n      $dialog.one('hidden.bs.modal', handler);\r\n    },\r\n\r\n    showDialog: function($dialog) {\r\n      $dialog.modal('show');\r\n    },\r\n\r\n    hideDialog: function($dialog) {\r\n      $dialog.modal('hide');\r\n    },\r\n\r\n    createLayout: function($note) {\r\n      const $editor = (\r\n        editorOptions.airMode\r\n          ? airEditor([editingArea([codable(), airEditable()])])\r\n          : editorOptions.toolbarPosition === 'bottom'\r\n            ? editor([editingArea([codable(), editable()]), toolbar(), statusbar()])\r\n            : editor([toolbar(), editingArea([codable(), editable()]), statusbar()])\r\n      ).render();\r\n\r\n      $editor.insertAfter($note);\r\n\r\n      return {\r\n        note: $note,\r\n        editor: $editor,\r\n        toolbar: $editor.find('.note-toolbar'),\r\n        editingArea: $editor.find('.note-editing-area'),\r\n        editable: $editor.find('.note-editable'),\r\n        codable: $editor.find('.note-codable'),\r\n        statusbar: $editor.find('.note-statusbar'),\r\n      };\r\n    },\r\n\r\n    removeLayout: function($note, layoutInfo) {\r\n      $note.html(layoutInfo.editable.html());\r\n      layoutInfo.editor.remove();\r\n      $note.show();\r\n    },\r\n  };\r\n};\r\n\r\n//.summernote.options = $.extend($.summernote.options, summernote_global_config);\r\n\r\n$.summernote = $.extend($.summernote, {\r\n  ui_template: ui,\r\n  interface: 'sm',\r\n});\r\n"],"names":["genericFontFamilies","validFontName","fontName","createIsFontInstalledFunc","testText","fontSize","canvas","context","getPxInfo","font","testFontName","pxInfo","testInfo","fontInfo","userAgent","isMSIE","browserVersion","matches","isEdge","isSupportTouch","inputEventName","env","Type","obj","eq","itemA","itemB","eq2","peq2","propName","ok","fail","self","a","not","f","and","functions","funcs","len","item","i","or","invoke","method","idCounter","resetUniqueId","uniqueId","prefix","id","debounce","func","wait","immediate","delay","args","defer","throttle","options","clamp","value","min","max","constant","val","isArrayLike","o","head","array","last","initial","tail","exists","list","pred","scope","findIndex","find","all","any","contains","sum","fn","memo","v","from","mapper","isEmpty","clusterBy","selector","tl","lastItem","groupBy","compact","unique","isSorted","next","idx","prev","each","callback","foldl","foldr","filter","predicate","reject","map","makeMap","delim","resolvedItems","walk","node","lists","WHITESPACE_ALL_PATTERN","WHITESPACE_PATTERN","HOST_PATTERN","IP_PATTERN","PROTOCOL_PATTERN","MAIL_PATTERN","TEL_PATTERN","checkRange","str","substr","start","startsWith","endsWith","suffix","escape","unescape","hasWhiteSpace","isAllWhitespace","end","strOrPattern","test","namespaceToCamel","namespace","name","camelCaseToHyphens","isValidHost","host","isValidEmail","email","isValidTel","tel","startsWithUrlScheme","url","isValidUrl","explode","x","safeLastIndexOf","term","index","Str","textIndex","lineBreakBefore","column","line","Obj","path","def","other","props","sources","mapCache","specialElements","makeSchema","blockContent","phrasingContent","flowContent","schema","addElement","children","add","childNames","names","ni","createMap","defaultValue","extendWith","createLookupTable","option","newValue","schemaItems","element","whitespaceElementsMap","selfClosingElementsMap","voidElementsMap","boolAttrMap","nonEmptyOrMoveCaretBeforeOnEnter","nonEmptyElementsMap","moveCaretBeforeOnEnterElementsMap","headings","headingElementsMap","textBlockElementsMap","blockElementsMap","textInlineElementsMap","textRootBlockElementsMap","transparentElementsMap","wrapBlockElementsMap","getHeadingElements","getBlockElements","getBoolAttrs","getTextBlockElements","getTextRootBlockElements","getTextInlineElements","getVoidElements","getSelfClosingElements","getNonEmptyElements","getMoveCaretBeforeOnEnterElements","getWhitespaceElements","getTransparentElements","getWrapBlockElements","getSpecialElements","isValidChild","child","parent","isBlock","isInline","isWrapper","isVoid","isTransparentElementName","getNode","isUpperNodeName","code","getComputedStyle","isElement","win","computed","matchNodeName","upperCasedName","matchNodeNames","upperCasedNames","s","nodeName","matchSchemaMap","matchStyleValues","values","items","styleValue","matchClass","className","matchAttribute","attrName","matchAttributeValue","attrValue","matchContentEditableState","isHTMLElement","matchSelector","defaultSelector","isNode","isNodeType","type","isText","isCData","isPi","isComment","isDocument","isDocumentFragment","isSVGElement","isRestrictedNode","isBody","isPre","isLi","isTable","isData","isHr","isListItem","isDetails","isSummary","isBlockquote","isAnchor","isDiv","isSpan","isB","isU","isBR","isImg","isFigure","isTextarea","isTextareaOrInput","isList","isCell","isCellOrRow","isCellOrCaption","isMedia","isHeading","isPara","isEditableRoot","isParaNoBlockquote","isPurePara","isParaInline","closest","isParaInlineNoBlockQuote","isBodyInline","isBodyInlineNoBlockQuote","isBodyContainer","isBookmarkNode","isEmptyAnchor","isControlSizing","isTag","tag","isWhiteSpace","allowSpaces","data","getEditableRoot","isContentEditable","getContentEditable","contentEditable","getContentEditableParent","root","state","tempNode","blankHTML","createText","text","create","attrs","html","setAttr","createFragment","container","frag","getAttr","setAttrs","key","removeAllAttrs","getStyle","setStyle","setStyles","styleMap","hasClass","addClass","removeClass","cleanClass","toggleClass","parseStyle","result","_a","nodeLength","deepestChildIsEmpty","isClosestSibling","node1","node2","isChildOf","parentSelector","deep","ignoreSelf","n","isLeftEdgeOf","position","isRightEdgeOf","normalized","lastNodeType","nodeType","hasChildren","getRangeNode","offset","childNodes","safeOffset","skipEmptyTextNodes","forwards","orig","stripLinebreaks","outerHtml","append","posFromPlaceholder","placeholder","$placeholder","pos","height","attachEvents","$node","events","detachEvents","isCustomStyleTag","select","elm","includeSelf","closestSingleParent","parents","el","parentsWhile","rootSelector","rootPred","farthestParent","nodes","commonParent","ancestors","withClosestSiblings","siblings","prevSiblings","nextSiblings","current","d","getNextTextNode","actual","makeOffsetPath","fromOffsetPath","offsets","findPara","wrap","wrapperName","wrapper","unwrap","prepend","firstChild","insertBefore","marker","insertAfter","sibling","appendChildNodes","skipPaddingBlankHtml","remove","keptNodes","removeWhile","replace","newElm","oldElm","keepChildren","clone","rename","newNode","dom$1","Context","$note","disabled","dom","buttons","modules","isCodeView","module","ModuleClass","withoutIntialize","event","$target","splits","moduleName","propertyName","methodName","param","hasOptions","_i","alignLeft","rollback","icons","NBSP_CHAR","ZERO_WIDTH_NBSP_CHAR","SOFT_HYPHEN","CharTypes","paddingBlankHTML","isLeftEdgePoint","point","isRightEdgePoint","isEdgePoint","isLeftEdgePointOf","isRightEdgePointOf","pointBeforeNode","pointAfterNode","prevPoint","skipInnerOffset","nextPoint","nextTextNode","nextPointWithEmptyNode","pointUntil","pointWhile","prevPointUntil","nextPointUntil","prevPointWhile","nextPointWhile","walkPoint","startPoint","endPoint","handler","equals","skipOffset","comparePoints","point1","point2","nodeA","offsetA","nodeB","offsetB","nodeC","childA","childB","splitNode","skipPaddingBlankHTML","skipEdgePoint","discardEmptySplits","childNode","splitTree","ifHasNextSibling","nestSibling","textNode","splitPoint","topAncestor","splitRoot","pivot","isVisiblePoint","leftNode","rightNode","getCharType","ch","isCharPoint","isSpacePoint","Point","char","makeIsOn","ancestor","makeCharPredicate","stopAtPunc","pt","detachRange","rng","callNative","action","detach","getNativeRange","out","sc","so","ec","eo","getWrappedRange","createFromNativeRange","isFullyContainedInNode","isOnEditable","isOnList","isOnAnchor","isOnCell","isOnData","nativeRange","r","WrappedRange","createFromSelection","bodyElement","createFromBodyElement","createFromPoints","selection","collapseToStart","wrappedRange","createFromNode","createFromNodeBefore","createFromNodeAfter","createFromNodes","createFromBookmark","editable","bookmark","createFromParaBookmark","paras","startContainer","startOffset","endContainer","endOffset","toStart","how","sourceRange","offset1","offset2","prefix1","prefix2","referenceNode","content","emptyParents","doNotInsertPara","info","endNode","startNode","newParent","inline","exclude","firstNode","lastNode","collectSiblings","findEndPoint","executeCallback","walkBoundary","siblingName","getVisiblePoint","isLeftToRight","block","hasRightNode","hasLeftNode","includeAncestor","fullyContains","leftEdgeNodes","startAncestor","endAncestor","pts","isSameContainer","inlineSiblings","para","markup","contentsContainer","reversed","trim","charType","forward","findAfter","isNotTextPoint","regex","range","KEY_MAP","keyCode","readFileAsDataURL","file","deferred","dataURL","err","createImage","$img","History","emptyBookmark","snapshot","Style","$obj","propertyNames","properties","styleInfo","expandClosestSibling","onlyPartialContains","nodesInRange","tails","elem","$cont","isUnordered","lineHeight","Bullet","clustereds","previousList","listName","wrappedParas","diffLists","listNode","prevList","nextList","isEscapseToBody","releasedParas","headList","parentItem","newList","lastList","middleList","rootLists","rootList","listNodes","Typing","tabsize","tab","nextPara","blockquote","split","emptyAnchors","anchor","TableResultAction","where","domTable","_startPoint","_virtualTable","_actionCellList","setStartPoint","setVirtualTablePosition","rowIndex","cellIndex","baseRow","baseCell","isRowSpan","isColSpan","isVirtualCell","objPosition","getActionCell","virtualTableCellObj","resultAction","virtualRowPosition","virtualColPosition","recoverCellIndex","newCellIndex","addCellInfoToVirtual","row","cell","cellHasColspan","cellHasRowspan","isThisSelectedCell","rowspanNumber","rp","rowspanIndex","adjustStartPoint","colspanNumber","cp","cellspanIndex","isSelectedCell","createVirtualTable","rows","cells","getDeleteResultActionToCell","getAddResultActionToCell","init","fixedRow","fixedCol","actualPosition","canContinue","rowPosition","colPosition","Table","isShift","table","nextCell","currentTr","trAttributes","actions","idCell","currentCell","tdAttributes","newTd","lastTrIndex","actionIndex","resultStr","attrList","cellPos","rowPos","virtualPosition","hasRowspan","nextRow","cloneRow","colCount","rowCount","tds","tdHTML","idxCol","trs","trHTML","idxRow","$table","isValidTextNode","createBookmarkSpan","filled","count","moveEndPoint","normalizeTableCellSelection","addBogus","restoreEndPoint","markerParent","keep","otherMarker","trimEmptyTextNode","insertNode","insertFragment","lastChild","rangeInsertNode","Bookmark","collapsed","rng2","endBookmarkNode","startBookmarkNode","startPos","endPos","createRootRange","editor","getEndpointElement","real","resolve","Selection","createBookmarkFromSelection","sel","throttledHandler","e","tryCompareBoundaryPoints","destinationRange","persistent","resolved","anchorNode","focusNode","anchorRange","focusRange","normRng","sanitizeHtmlSimple","regexTag","match","endSlash","isEndOfInlineContainer","isBlockNode","HtmlSanitizer","KEY_BOGUS","Editor","commands","sCmd","unit","size","tagName","onApplyCustomStyle","hrNode","linkInfo","rels","linkUrl","linkText","isNewWindow","anchors","additionalTextLength","colorInfo","foreColor","backColor","dim","dimension","keyMap","keys","keyName","eventName","pad","url2","slashIndex","c","thenCollapse","sanitize","sanitizeOption","silent","src","$image","files","filename","styleTag","currentRange","$block","attr","target","spans","firstSpan","noteStatusOutput","img","bKeepRatio","imageSize","newRatio","ratio","$popover","placement","popper","Clipboard","clipboardData","clipboardFiles","clipboardText","Dropzone","collection","$dropzoneMessage","isCodeview","hasEditorSize","dataTransfer","jumpMarker","jumpMarkerComment","CodeView","CodeMirror","whitelist","jumpMarkerPos","cmEditor","server","cm","isChange","EDITABLE_PADDING","Statusbar","editableTop","editableCodeTop","onStatusbarMove","originalEvent","heightCode","Fullscreen","isFullscreen","Handle","we","_","posStart","scrollTop","onMouseMove","isScroll","isImage","$selection","areaRect","imageRect","origImageObj","sizingText","$info","exceeds","defaultScheme","linkPattern","AutoLink","keyword","link","urlText","wordRange","AutoSync","AutoReplace","Placeholder","isShow","Buttons","editorMethod","shortcut","$holder","savedColors","arr","color","customColors","tooltip","$button","$recentColor","$dropdown","_idx","input","$parent","$color","$currentButton","title","style","styleIdx","styleLen","strikethrough","superscript","subscript","fontname","justifyLeft","justifyCenter","justifyRight","justifyFull","outdent","indent","$container","groups","groupIdx","groupLen","group","groupName","$group","btn","fontNames","$item","isChecked","fontSizeUnit","infos","$picker","$dimensionDisplay","$catcher","$highlighted","$unhighlighted","posOffset","posCatcher","Toolbar","history","editorHeight","toolbarHeight","statusbarHeight","otherBarHeight","currentOffset","editorOffsetTop","editorOffsetBottom","activateOffset","deactivateOffsetBottom","isIncludeCodeview","$btn","LinkDialog","body","footer","$input","$linkText","$linkUrl","$linkClass","$linkStyle","$linkRel","$linkBtn","$openInNewWindow","$fileBrowse","browsePromise","toggleLinkBtn","enable","setInputFocus","isNewWindowChecked","deferredBrowse","LinkPopover","popover","$content","href","ImageDialog","button","imgInfo","withSrc","$imageUrl","$imageClass","$imageStyle","$imageAlt","$imageTitle","$imageBtn","$imageBrowse","ImagePopover","$btnUnlink","isLinkedImage","TablePopover","TableStyles","chosenItem","$dropdownButton","$listItems","exclusiveStyles","hasAnExclusiveStyle","cssClass","exclusiveLabels","inclusiveStyles","inclusiveLabels","label","isExclusive","VideoDialog","ytRegExp","ytRegExpForStart","ytMatch","gdRegExp","gdMatch","igRegExp","igMatch","vRegExp","vMatch","vimRegExp","vimMatch","dmRegExp","dmMatch","youkuRegExp","youkuMatch","peerTubeRegExp","peerTubeMatch","qqRegExp","qqMatch","qqRegExp2","qqMatch2","mp4RegExp","mp4Match","oggRegExp","oggMatch","webmRegExp","webmMatch","fbRegExp","fbMatch","$video","youtubeId","ytMatchForStart","begin","loop","autoplay","muted","vid","$videoUrl","$videoBtn","HelpDialog","$root","$list","command","rect2bnd","rect","$doc","Convert","rgba","POPOVER_DIST","HintPopover","$current","$next","$nextGroup","$prev","$prevGroup","rangeCompute","blank","hint","hintIdx","bnd","containerOffset","isInlineElement","CssClass","rgAlert","rgBtn","rgBg","rgTextColor","rgDisplay","rgWidth","rgRounded","cssStyle","ddi","imageShapes","controlNode","caret","apply","classNames","span","drop","noBubble","curNode","expr","Codeview","Renderer","k","renderer","toolbar","editingArea","codable","statusbar","airEditor","airEditable","buttonGroup","toolGroup","dropdown","dataValue","dataOption","dropdownButtonContents","contents","dropdownCheck","icon","dialog","checkbox","iconClassName","ui","editorOptions","rowSize","colors","colorsName","col","colSize","colorName","tooltipOptions","isEnable","isActive","$dialog","$editor","layoutInfo"],"mappings":"yBAEA,EAAA,WAAA,EAAA,YAAA,CACA,KAAA,CAAA,CACA,EAEA,EAAA,OAAA,GAAA,EAAA,WAAA,KAAA,CACA,QAAA,CACA,KAAA,CACA,KAAA,OACA,OAAA,SACA,UAAA,YACA,MAAA,oBACA,OAAA,cACA,KAAA,cACA,cAAA,gBACA,UAAA,YACA,YAAA,cACA,KAAA,YACA,SAAA,gBACA,EACA,MAAA,CACA,MAAA,UACA,OAAA,eACA,WAAA,cACA,WAAA,cACA,cAAA,iBACA,WAAA,gBACA,UAAA,aACA,WAAA,cACA,UAAA,eACA,aAAA,iBACA,YAAA,gBACA,eAAA,mBACA,UAAA,cACA,cAAA,0BACA,UAAA,qBACA,gBAAA,oBACA,gBAAA,oBACA,qBAAA,8BACA,IAAA,YACA,OAAA,eACA,SAAA,UACA,EACA,MAAA,CACA,MAAA,QACA,UAAA,aACA,OAAA,eACA,IAAA,YACA,UAAA,+EACA,EACA,KAAA,CACA,KAAA,OACA,OAAA,cACA,OAAA,SACA,KAAA,OACA,cAAA,kBACA,IAAA,mCACA,gBAAA,oBACA,EACA,MAAA,CACA,MAAA,QACA,YAAA,gBACA,YAAA,gBACA,WAAA,kBACA,YAAA,mBACA,OAAA,aACA,OAAA,gBACA,SAAA,cACA,EACA,GAAA,CACA,OAAA,wBACA,EACA,MAAA,CACA,MAAA,QACA,EAAA,SACA,WAAA,QACA,IAAA,OACA,GAAA,WACA,GAAA,WACA,GAAA,WACA,GAAA,WACA,GAAA,WACA,GAAA,UACA,EACA,MAAA,CACA,UAAA,iBACA,QAAA,cACA,EACA,QAAA,CACA,KAAA,OACA,WAAA,cACA,SAAA,WACA,EACA,UAAA,CACA,UAAA,YACA,QAAA,UACA,OAAA,SACA,KAAA,aACA,OAAA,eACA,MAAA,cACA,QAAA,cACA,EACA,MAAA,CACA,OAAA,eACA,KAAA,aACA,WAAA,mBACA,WAAA,aACA,YAAA,cACA,eAAA,kBACA,MAAA,QACA,eAAA,mBACA,SAAA,QACA,EACA,SAAA,CACA,UAAA,qBACA,MAAA,QACA,eAAA,kBACA,OAAA,SACA,oBAAA,uBACA,cAAA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"}